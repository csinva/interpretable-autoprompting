input,output,text
What is the average and the maximum capacity of all stadiums?,"SELECT avg(capacity) ,  max(capacity) FROM stadium","Input: What is the average and the maximum capacity of all stadiums? Answer: SELECT avg(capacity) ,  max(capacity) FROM stadium
"
What is the name and capacity of the stadium  with the most concerts after 2013?,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1","Input: What is the name and capacity of the stadium  with the most concerts after 2013? Answer: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1
"
What are the names of the singers and number of concerts for each person?,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id","Input: What are the names of the singers and number of concerts for each person? Answer: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id
"
How many pets are owned by students that have an age greater than 20?,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,"Input: How many pets are owned by students that have an age greater than 20? Answer: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20
"
How many dog pets are raised by female students?,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',"Input: How many dog pets are raised by female students? Answer: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'
"
Find the name of students who have both cat and dog pets.,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',"Input: Find the name of students who have both cat and dog pets. Answer: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'
"
"What type of pet is the youngest animal, and how much does it weigh?","SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1","Input: What type of pet is the youngest animal, and how much does it weigh? Answer: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1
"
What are the different first names and ages of the students who do have pets?,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid","Input: What are the different first names and ages of the students who do have pets? Answer: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid
"
"For students who have pets, how many pets does each student have?","SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid","Input: For students who have pets, how many pets does each student have? Answer: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid
"
Find the last name of the student who has a cat that is age 3.,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',"Input: Find the last name of the student who has a cat that is age 3. Answer: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'
"
Find the make and production time of the cars that were produced in the earliest year?,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)","Input: Find the make and production time of the cars that were produced in the earliest year? Answer: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)
"
What is the name of each continent and how many car makers are there in each one?,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent","Input: What is the name of each continent and how many car makers are there in each one? Answer: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent
"
What is the accelerate of the car make amc hornet sportabout (sw)?,SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)',"Input: What is the accelerate of the car make amc hornet sportabout (sw)? Answer: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)'
"
How many car models are produced in the usa?,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa',"Input: How many car models are produced in the usa? Answer: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa'
"
What are the countries having at least one car maker? List name and id.,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1","Input: What are the countries having at least one car maker? List name and id. Answer: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1
"
What are the names of all European countries with at least 3 manufacturers?,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3,"Input: What are the names of all European countries with at least 3 manufacturers? Answer: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3
"
"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1,"Input: Which model saves the most gasoline? That is to say, have the maximum miles per gallon. Answer: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1
"
What is the maximum accelerate for all the different cylinders?,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders","Input: What is the maximum accelerate for all the different cylinders? Answer: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders
"
Which model has the most version(make) of cars?,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1,"Input: Which model has the most version(make) of cars? Answer: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1
"
Which makers designed more than 3 car models? List full name and the id.,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3","Input: Which makers designed more than 3 car models? List full name and the id. Answer: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3
"
In which years cars were produced weighing no less than 3000 and no more than 4000?,SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000,"Input: In which years cars were produced weighing no less than 3000 and no more than 4000? Answer: SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000
"
What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?,SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1,"Input: What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980? Answer: SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1
"
Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company',"Input: Which models are lighter than 3500 but not built by the 'Ford Motor Company'? Answer: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company'
"
What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3","Input: What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars? Answer: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3
"
What are the ids and names of all countries that either have more than 3 car makers or produce fiats?,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat'","Input: What are the ids and names of all countries that either have more than 3 car makers or produce fiats? Answer: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat'
"
What is the airport name for airport 'AKO'?,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""","Input: What is the airport name for airport 'AKO'? Answer: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""
"
How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""","Input: How many flights depart from City 'Aberdeen' and have destination City 'Ashley'? Answer: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""
"
How many flights does airline 'JetBlue Airways' have?,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""","Input: How many flights does airline 'JetBlue Airways' have? Answer: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""
"
How many 'United Airlines' flights go to Airport 'ASY'?,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""","Input: How many 'United Airlines' flights go to Airport 'ASY'? Answer: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.DestAirport  =  ""ASY""
"
How many United Airlines flights go to City 'Aberdeen'?,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""","Input: How many United Airlines flights go to City 'Aberdeen'? Answer: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""
"
Which city is the most frequent source airport?,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"Input: Which city is the most frequent source airport? Answer: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
"
What is the airport code of the airport with the most flights?,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,"Input: What is the airport code of the airport with the most flights? Answer: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1
"
What is the abbreviation of the airilne has the fewest flights and what country is it in?,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1","Input: What is the abbreviation of the airilne has the fewest flights and what country is it in? Answer: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1
"
What are airlines that have some flight departing from airport 'AHD'?,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""","Input: What are airlines that have some flight departing from airport 'AHD'? Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""
"
Which airlines have a flight with destination airport AHD?,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""","Input: Which airlines have a flight with destination airport AHD? Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""
"
Find all airlines that have flights from airport 'CVO' but not from 'APG'.,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""","Input: Find all airlines that have flights from airport 'CVO' but not from 'APG'. Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""
"
Find all airlines that have at least 10 flights.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,"Input: Find all airlines that have at least 10 flights. Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10
"
Find all airlines that have fewer than 200 flights.,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,"Input: Find all airlines that have fewer than 200 flights. Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200
"
"What are flight numbers of flights arriving at Airport ""APG""?","SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""","Input: What are flight numbers of flights arriving at Airport ""APG""? Answer: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""
"
How many flights land in Aberdeen or Abilene?,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""","Input: How many flights land in Aberdeen or Abilene? Answer: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""
"
Find the number of employees hired in each shop; show the shop name as well.,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name","Input: Find the number of employees hired in each shop; show the shop name as well. Answer: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name
"
What the smallest version number and its template type code?,"SELECT min(Version_Number) ,  template_type_code FROM Templates","Input: What the smallest version number and its template type code? Answer: SELECT min(Version_Number) ,  template_type_code FROM Templates
"
Show all template type codes that are not used by any document.,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,"Input: Show all template type codes that are not used by any document. Answer: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id
"
Return the different descriptions for templates that have been used in a document.,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,"Input: Return the different descriptions for templates that have been used in a document. Answer: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID
"
"Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.","SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id","Input: Return the different document ids along with the number of paragraphs corresponding to each, ordered by id. Answer: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id
"
Return the id and name of the document with the most paragraphs.,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1","Input: Return the id and name of the document with the most paragraphs. Answer: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1
"
Return the id of the document with the fewest paragraphs.,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,"Input: Return the id of the document with the fewest paragraphs. Answer: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1
"
What is the most commmon hometowns for teachers?,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is the most commmon hometowns for teachers? Answer: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1
"
What are the names of the teachers who teach at least two courses?,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,"Input: What are the names of the teachers who teach at least two courses? Answer: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
"
"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,"Input: Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low. Answer: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC
"
What is the average age of the visitors whose membership level is not higher than 4?,SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4,"Input: What is the average age of the visitors whose membership level is not higher than 4? Answer: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4
"
"Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.","SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC","Input: Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young. Answer: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC
"
What are the names of players who won in both 2013 and 2016?,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,"Input: What are the names of players who won in both 2013 and 2016? Answer: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016
"
Find the first name and country code of the oldest player.,"SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1","Input: Find the first name and country code of the oldest player. Answer: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1
"
List the first and last name of all players who are left / L hand in the order of birth date.,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date","Input: List the first and last name of all players who are left / L hand in the order of birth date. Answer: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date
"
Find the first name and country code of the player who did the most number of tours.,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1","Input: Find the first name and country code of the player who did the most number of tours. Answer: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1
"
Find the name and rank points of the winner who won the most times.,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1","Input: Find the name and rank points of the winner who won the most times. Answer: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1
"
Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,"Input: Find the name of the winner who has the highest rank points and participated in the Australian Open tourney. Answer: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
"
find the names of loser and winner who played in the match with greatest number of minutes.,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1","Input: find the names of loser and winner who played in the match with greatest number of minutes. Answer: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1
"
Find the total number of tours for each ranking date.,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date","Input: Find the total number of tours for each ranking date. Answer: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date
"
How many different winners both participated in the WTA Championships and were left handed?,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',"Input: How many different winners both participated in the WTA Championships and were left handed? Answer: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'
"
"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.","SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1","Input: Find the first name, country code and birth date of the winner who has the highest rank points in all matches. Answer: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1
"
How many ships ended up being 'Captured'?,SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured',"Input: How many ships ended up being 'Captured'? Answer: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'
"
What is the average number of injuries caused each time?,SELECT avg(injured) FROM death,"Input: What is the average number of injuries caused each time? Answer: SELECT avg(injured) FROM death
"
What are the death and injury situations caused by the ship with tonnage 't'?,"SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'","Input: What are the death and injury situations caused by the ship with tonnage 't'? Answer: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'
"
What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',"Input: What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'? Answer: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'
"
List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'","Input: List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta' Answer: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'
"
What are the notes of the death events which has substring 'East'?,SELECT note FROM death WHERE note LIKE '%East%',"Input: What are the notes of the death events which has substring 'East'? Answer: SELECT note FROM death WHERE note LIKE '%East%'
"
What is the first and second line for all addresses?,"SELECT line_1 ,  line_2 FROM addresses","Input: What is the first and second line for all addresses? Answer: SELECT line_1 ,  line_2 FROM addresses
"
"For each department id, what is the name of the department with the most number of degrees?","SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1","Input: For each department id, what is the name of the department with the most number of degrees? Answer: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1
"
How many degrees does the engineering department have?,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',"Input: How many degrees does the engineering department have? Answer: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'
"
"What are the first, middle, and last names for everybody enrolled in a Bachelors program?","SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'","Input: What are the first, middle, and last names for everybody enrolled in a Bachelors program? Answer: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'
"
What is the degree summary name that has the most number of students enrolled?,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,"Input: What is the degree summary name that has the most number of students enrolled? Answer: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1
"
What are all the course names of the courses which ever have students enrolled in?,SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id,"Input: What are all the course names of the courses which ever have students enrolled in? Answer: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id
"
What's the name of the course with most number of enrollments?,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,"Input: What's the name of the course with most number of enrollments? Answer: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
"
Show the date and id of the transcript with at least 2 course results.,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2","Input: Show the date and id of the transcript with at least 2 course results. Answer: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2
"
Which address holds the most number of students currently? List the address id and all lines.,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1","Input: Which address holds the most number of students currently? List the address id and all lines. Answer: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1
"
"Show the date of the transcript which shows the least number of results, also list the id.","SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1","Input: Show the date of the transcript which shows the least number of results, also list the id. Answer: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1
"
Find the semester when both Master students and Bachelor students got enrolled in.,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',"Input: Find the semester when both Master students and Bachelor students got enrolled in. Answer: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'
"
How many different addresses do the students currently live?,SELECT count(DISTINCT current_address_id) FROM Students,"Input: How many different addresses do the students currently live? Answer: SELECT count(DISTINCT current_address_id) FROM Students
"
What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?,SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582',"Input: What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582? Answer: SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'
"
"What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name.","SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!""","Input: What is the TV Channel that shows the cartoon ""The Rise of the Blue Beetle!""? List the TV Channel's series name. Answer: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = ""The Rise of the Blue Beetle!""
"
"When did the episode ""A Love of a Lifetime"" air?","SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime""","Input: When did the episode ""A Love of a Lifetime"" air? Answer: SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime""
"
What is the produdction code and channel of the most recent cartoon?,"SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1","Input: What is the produdction code and channel of the most recent cartoon? Answer: SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1
"
What are the ids of all tv channels that have more than 2 TV channels?,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,"Input: What are the ids of all tv channels that have more than 2 TV channels? Answer: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2
"
Return the names of all the poker players.,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID,"Input: Return the names of all the poker players. Answer: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID
"
What are the contestant numbers and names of the contestants who had at least two votes?,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2","Input: What are the contestant numbers and names of the contestants who had at least two votes? Answer: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2
"
Which continent is Anguilla in?,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""","Input: Which continent is Anguilla in? Answer: SELECT Continent FROM country WHERE Name  =  ""Anguilla""
"
What language is predominantly spoken in Aruba?,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1","Input: What language is predominantly spoken in Aruba? Answer: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1
"
Give me Brazil’s population and life expectancies.,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""","Input: Give me Brazil’s population and life expectancies. Answer: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""
"
What is the name of country that has the shortest life expectancy in Asia?,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1","Input: What is the name of country that has the shortest life expectancy in Asia? Answer: SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1
"
"How many people live in Asia, and what is the largest GNP among them?","SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""","Input: How many people live in Asia, and what is the largest GNP among them? Answer: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  ""Asia""
"
What is the average life expectancy in African countries that are republics?,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""","Input: What is the average life expectancy in African countries that are republics? Answer: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""
"
What is the total population of Gelderland district?,"SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""","Input: What is the total population of Gelderland district? Answer: SELECT sum(Population) FROM city WHERE District  =  ""Gelderland""
"
Give the mean GNP and total population of nations which are considered US territory.,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""","Input: Give the mean GNP and total population of nations which are considered US territory. Answer: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""
"
What is the total number of languages used in Aruba?,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""","Input: What is the total number of languages used in Aruba? Answer: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""
"
What is name of the country that speaks the largest number of languages?,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is name of the country that speaks the largest number of languages? Answer: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1
"
Which continent has the most diverse languages?,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which continent has the most diverse languages? Answer: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1
"
How many countries speak both English and Dutch?,"SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")","Input: How many countries speak both English and Dutch? Answer: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"")
"
Give the names of countries with English and French as official languages.,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""","Input: Give the names of countries with English and French as official languages. Answer: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""
"
What are the countries where either English or Dutch is the official language?,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""","Input: What are the countries where either English or Dutch is the official language? Answer: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""
"
"What are the name, population, and life expectancy of the largest Asian country by land?","SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1","Input: What are the name, population, and life expectancy of the largest Asian country by land? Answer: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1
"
Give the mean life expectancy of countries in which English is not the official language.,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")","Input: Give the mean life expectancy of countries in which English is not the official language. Answer: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")
"
What is the total number of people living in the nations that do not use English?,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")","Input: What is the total number of people living in the nations that do not use English? Answer: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")
"
What is the official language spoken in the country whose head of state is Beatrix?,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""","Input: What is the official language spoken in the country whose head of state is Beatrix? Answer: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""
"
What is the total number of unique official languages spoken in the countries that are founded before 1930?,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""","Input: What is the total number of unique official languages spoken in the countries that are founded before 1930? Answer: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""
"
What are the countries that have greater surface area than any country in Europe?,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")","Input: What are the countries that have greater surface area than any country in Europe? Answer: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")
"
Which African countries have a smaller population than that of any country in Asia?,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")","Input: Which African countries have a smaller population than that of any country in Asia? Answer: SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")
"
What are the country codes for countries that do not speak English?,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","Input: What are the country codes for countries that do not speak English? Answer: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""
"
What are the country codes of countries where people use languages other than English?,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""","Input: What are the country codes of countries where people use languages other than English? Answer: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""
"
What are the codes of the countries that do not speak English and whose government forms are not Republic?,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""","Input: What are the codes of the countries that do not speak English and whose government forms are not Republic? Answer: SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""
"
Which cities are in European countries where English is not the official language?,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),"Input: Which cities are in European countries where English is not the official language? Answer: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')
"
Whic`h unique cities are in  Asian countries where Chinese is the official language?,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""","Input: Whic`h unique cities are in  Asian countries where Chinese is the official language? Answer: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""
"
"What are the population, name and leader of the country with the largest area?","SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1","Input: What are the population, name and leader of the country with the largest area? Answer: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1
"
What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?,"SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72","Input: What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72? Answer: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72
"
Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?,"SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72","Input: Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72? Answer: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72
"
What are the names and areas of countries with the top 5 largest area?,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5","Input: What are the names and areas of countries with the top 5 largest area? Answer: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5
"
What is the total population and average area of countries in the continent of North America whose area is bigger than 3000？,"SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  ""North America"" AND SurfaceArea  >  3000","Input: What is the total population and average area of countries in the continent of North America whose area is bigger than 3000？ Answer: SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  ""North America"" AND SurfaceArea  >  3000
"
What is the language spoken by the largest percentage of people in each country?,"SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode","Input: What is the language spoken by the largest percentage of people in each country? Answer: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode
"
Count the number of countries for which Spanish is the predominantly spoken language.,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","Input: Count the number of countries for which Spanish is the predominantly spoken language. Answer: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode
"
What are the codes of countries where Spanish is spoken by the largest percentage of people?,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode","Input: What are the codes of countries where Spanish is spoken by the largest percentage of people? Answer: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode
"
What are the names of conductors who have conducted at more than one orchestra?,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,"Input: What are the names of conductors who have conducted at more than one orchestra? Answer: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1
"
Show the names of high school students and their corresponding number of friends.,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","Input: Show the names of high school students and their corresponding number of friends. Answer: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
"
What are the names of high schoolers who have 3 or more friends?,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3,"Input: What are the names of high schoolers who have 3 or more friends? Answer: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3
"
Return the names of friends of the high school student Kyle.,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""","Input: Return the names of friends of the high school student Kyle. Answer: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""
"
What are the names of high schoolers who both have friends and are liked?,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,"Input: What are the names of high schoolers who both have friends and are liked? Answer: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id
"
"What are the names of high schoolers who have likes, and how many likes does each have?","SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id","Input: What are the names of high schoolers who have likes, and how many likes does each have? Answer: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id
"
What is the name of the high schooler who has the greatest number of likes?,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the high schooler who has the greatest number of likes? Answer: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
"
What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,"Input: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends? Answer: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2
"
Find the states where both owners and professionals live.,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,"Input: Find the states where both owners and professionals live. Answer: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals
"
What is the average age of the dogs who have gone through any treatments?,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),"Input: What is the average age of the dogs who have gone through any treatments? Answer: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )
"
Which dogs have not cost their owner more than 1000 for treatment? List the dog names.,SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 ),"Input: Which dogs have not cost their owner more than 1000 for treatment? List the dog names. Answer: SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )
"
"Which professional did not operate any treatment on dogs? List the professional's id, role and email.","SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id","Input: Which professional did not operate any treatment on dogs? List the professional's id, role and email. Answer: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id
"
"Which professionals have done at least two treatments? List the professional's id, role, and first name.","SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2","Input: Which professionals have done at least two treatments? List the professional's id, role, and first name. Answer: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2
"
Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","Input: Which owner has paid for the most treatments on his or her dogs? List the owner id and last name. Answer: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
"
What is the description of the treatment type that costs the least money in total?,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,"Input: What is the description of the treatment type that costs the least money in total? Answer: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1
"
Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1","Input: Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code. Answer: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1
"
Which dogs are of the rarest breed? Show their names and treatment dates.,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )","Input: Which dogs are of the rarest breed? Show their names and treatment dates. Answer: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )
"
What are the arriving date and the departing date of the dogs who have gone through a treatment?,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id","Input: What are the arriving date and the departing date of the dogs who have gone through a treatment? Answer: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id
"
"Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.","SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'","Input: Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state. Answer: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'
"
Tell me the number of dogs that have received any treatment.,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),"Input: Tell me the number of dogs that have received any treatment. Answer: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )
"
What is the age of the oldest dog?,SELECT max(age) FROM Dogs,"Input: What is the age of the oldest dog? Answer: SELECT max(age) FROM Dogs
"
How much does the most expensive charge type costs?,SELECT max(charge_amount) FROM Charges,"Input: How much does the most expensive charge type costs? Answer: SELECT max(charge_amount) FROM Charges
"
What are each professional's first name and description of the treatment they have performed?,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code","Input: What are each professional's first name and description of the treatment they have performed? Answer: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code
"
Show the names of singers that have more than one song.,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,"Input: Show the names of singers that have more than one song. Answer: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1
"
What is the number of faculty at Long Beach State University in 2002?,"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  ""Long Beach State University""","Input: What is the number of faculty at Long Beach State University in 2002? Answer: SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  ""Long Beach State University""
"
Find the most prominent max page size among all the products.,SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1,"Input: Find the most prominent max page size among all the products. Answer: SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1
"
How many lessons did the customer Ryan Goodwin complete?,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed""","Input: How many lessons did the customer Ryan Goodwin complete? Answer: SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Rylan"" AND T2.last_name = ""Goodwin"" AND T1.lesson_status_code = ""Completed""
"
What campuses are located in Los Angeles county and opened after 1950?,"SELECT campus FROM campuses WHERE county  =  ""Los Angeles"" AND YEAR  >  1950","Input: What campuses are located in Los Angeles county and opened after 1950? Answer: SELECT campus FROM campuses WHERE county  =  ""Los Angeles"" AND YEAR  >  1950
"
In what city does Janessa Sawayn live?,"SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""","Input: In what city does Janessa Sawayn live? Answer: SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""
"
Show ids for all transactions whose amounts are greater than the average.,SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions),"Input: Show ids for all transactions whose amounts are greater than the average. Answer: SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)
"
What are the first and last names of all customers with more than 2 payments?,"SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2","Input: What are the first and last names of all customers with more than 2 payments? Answer: SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2
"
Find the names of all reviewers who have ratings with a NULL value for the date.,"SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  ""null""","Input: Find the names of all reviewers who have ratings with a NULL value for the date. Answer: SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  ""null""
"
What are the names of body builders?,SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID,"Input: What are the names of body builders? Answer: SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
"
"Show the total number of rooms of the apartments in the building with short name ""Columbus Square"".","SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  ""Columbus Square""","Input: Show the total number of rooms of the apartments in the building with short name ""Columbus Square"". Answer: SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  ""Columbus Square""
"
"What are the ids, date opened, name, and other details for all accounts?","SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts","Input: What are the ids, date opened, name, and other details for all accounts? Answer: SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts
"
Find all the distinct district names ordered by city area in descending.,SELECT DISTINCT District_name FROM district ORDER BY city_area DESC,"Input: Find all the distinct district names ordered by city area in descending. Answer: SELECT DISTINCT District_name FROM district ORDER BY city_area DESC
"
How many distinct order ids correspond to each product?,"SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id","Input: How many distinct order ids correspond to each product? Answer: SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id
"
What are the apartment number and the room count of each apartment?,"SELECT apt_number ,  room_count FROM Apartments","Input: What are the apartment number and the room count of each apartment? Answer: SELECT apt_number ,  room_count FROM Apartments
"
"Show the start dates and end dates of all the apartment bookings made by guests with gender code ""Female"".","SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  ""Female""","Input: Show the start dates and end dates of all the apartment bookings made by guests with gender code ""Female"". Answer: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  ""Female""
"
"Find the texts of assessment notes for teachers with last name ""Schuster"".","SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  ""Schuster""","Input: Find the texts of assessment notes for teachers with last name ""Schuster"". Answer: SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  ""Schuster""
"
Which year has the most degrees conferred?,SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1,"Input: Which year has the most degrees conferred? Answer: SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1
"
"What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?",SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200,"Input: What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled? Answer: SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200
"
What is the average number of bedrooms of all apartments?,SELECT avg(bedroom_count) FROM Apartments,"Input: What is the average number of bedrooms of all apartments? Answer: SELECT avg(bedroom_count) FROM Apartments
"
Show all product names and the total quantity ordered for each product name.,"SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name","Input: Show all product names and the total quantity ordered for each product name. Answer: SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name
"
List all information about the assessment notes sorted by date in ascending order.,SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC,"Input: List all information about the assessment notes sorted by date in ascending order. Answer: SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC
"
What campuses are in Los Angeles county?,"SELECT campus FROM campuses WHERE county  =  ""Los Angeles""","Input: What campuses are in Los Angeles county? Answer: SELECT campus FROM campuses WHERE county  =  ""Los Angeles""
"
What are the names of all movies that received 3 or 4 stars?,SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4,"Input: What are the names of all movies that received 3 or 4 stars? Answer: SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4
"
What is the campus fee for San Jose State University in 1996?,"SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND T2.year  =  1996","Input: What is the campus fee for San Jose State University in 1996? Answer: SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND T2.year  =  1996
"
Which campus was opened between 1935 and 1939?,SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939,"Input: Which campus was opened between 1935 and 1939? Answer: SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939
"
What is the average snatch score of body builders?,SELECT avg(Snatch) FROM body_builder,"Input: What is the average snatch score of body builders? Answer: SELECT avg(Snatch) FROM body_builder
"
Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.,SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2,"Input: Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings. Answer: SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2
"
"What are the total scores of the body builders whose birthday contains the string ""January"" ?","SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE ""%January%""","Input: What are the total scores of the body builders whose birthday contains the string ""January"" ? Answer: SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE ""%January%""
"
Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.,SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1,"Input: Which apartments have unit status availability of both 0 and 1? Return their apartment numbers. Answer: SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1
"
Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.,"SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full'","Input: Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name. Answer: SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full'
"
Which apartment type code is the most common among apartments with more than one bathroom?,SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1,"Input: Which apartment type code is the most common among apartments with more than one bathroom? Answer: SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1
"
Count the number of chip model that do not have wifi.,SELECT count(*) FROM chip_model WHERE wifi  =  'No',"Input: Count the number of chip model that do not have wifi. Answer: SELECT count(*) FROM chip_model WHERE wifi  =  'No'
"
Which city does has most number of customers?,SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1,"Input: Which city does has most number of customers? Answer: SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1
"
"What is the id of the reviewer whose name includes the word ""Mike""?","SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""","Input: What is the id of the reviewer whose name includes the word ""Mike""? Answer: SELECT rID FROM Reviewer WHERE name LIKE ""%Mike%""
"
What are the names of all directors who have made one movie except for the director named NULL?,"SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*)  =  1","Input: What are the names of all directors who have made one movie except for the director named NULL? Answer: SELECT director FROM Movie WHERE director != ""null"" GROUP BY director HAVING count(*)  =  1
"
"List the hardware model name for the phones that were produced by ""Nokia Corporation"" or whose screen mode type is ""Graphics.""","SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  ""Graphics"" OR t2.Company_name  =  ""Nokia Corporation""","Input: List the hardware model name for the phones that were produced by ""Nokia Corporation"" or whose screen mode type is ""Graphics."" Answer: SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  ""Graphics"" OR t2.Company_name  =  ""Nokia Corporation""
"
Find the booking start date and end date for the apartments that have more than two bedrooms.,"SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2","Input: Find the booking start date and end date for the apartments that have more than two bedrooms. Answer: SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2
"
What is the invoice number and invoice date for the invoice with most number of transactions?,"SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1","Input: What is the invoice number and invoice date for the invoice with most number of transactions? Answer: SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1
"
"What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?","SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars","Input: What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating? Answer: SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars
"
What are the different product sizes?,SELECT DISTINCT product_size FROM Products,"Input: What are the different product sizes? Answer: SELECT DISTINCT product_size FROM Products
"
Count the number of financial transactions that the account with the name 337 has.,"SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  ""337""","Input: Count the number of financial transactions that the account with the name 337 has. Answer: SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  ""337""
"
What are the clean and jerk score of the body builder with the highest total score?,SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1,"Input: What are the clean and jerk score of the body builder with the highest total score? Answer: SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1
"
Which city lives most of staffs? List the city name and number of staffs.,"SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1","Input: Which city lives most of staffs? List the city name and number of staffs. Answer: SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1
"
"For each director, what is the title and score of their most poorly rated movie?","SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director","Input: For each director, what is the title and score of their most poorly rated movie? Answer: SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director
"
Find the average rating star for each movie that received at least 2 ratings.,"SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2","Input: Find the average rating star for each movie that received at least 2 ratings. Answer: SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2
"
What are the line 1 of addresses shared by some students and some teachers?,SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id,"Input: What are the line 1 of addresses shared by some students and some teachers? Answer: SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id
"
Find the name of the products that are not using the most frequently-used max page size.,SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1),"Input: Find the name of the products that are not using the most frequently-used max page size. Answer: SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)
"
What is the name of the body builder with the greatest body weight?,SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1,"Input: What is the name of the body builder with the greatest body weight? Answer: SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
"
Return the apartment number with the largest number of bedrooms.,SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1,"Input: Return the apartment number with the largest number of bedrooms. Answer: SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1
"
What is the average fee on a CSU campus in 2005?,SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005,"Input: What is the average fee on a CSU campus in 2005? Answer: SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005
"
Return all reviewer names and movie names together in a single list.,SELECT name FROM Reviewer UNION SELECT title FROM Movie,"Input: Return all reviewer names and movie names together in a single list. Answer: SELECT name FROM Reviewer UNION SELECT title FROM Movie
"
List the snatch score and clean jerk score of body builders in ascending order of snatch score.,"SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC","Input: List the snatch score and clean jerk score of body builders in ascending order of snatch score. Answer: SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC
"
How many lessons did the customer with the first name Ray take?,"SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Ray""","Input: How many lessons did the customer with the first name Ray take? Answer: SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = ""Ray""
"
"What is the number of graduates in ""San Francisco State University"" in year 2004?","SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Francisco State University""","Input: What is the number of graduates in ""San Francisco State University"" in year 2004? Answer: SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Francisco State University""
"
What are the names of all movies that were created after the most recent Steven Spielberg film?,"SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  ""Steven Spielberg"")","Input: What are the names of all movies that were created after the most recent Steven Spielberg film? Answer: SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  ""Steven Spielberg"")
"
Find the number of stores in each city.,"SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city","Input: Find the number of stores in each city. Answer: SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city
"
Sort the apartment numbers in ascending order of room count.,SELECT apt_number FROM Apartments ORDER BY room_count ASC,"Input: Sort the apartment numbers in ascending order of room count. Answer: SELECT apt_number FROM Apartments ORDER BY room_count ASC
"
What are the names of all reviewers that have rated 3 or more movies?,SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3,"Input: What are the names of all reviewers that have rated 3 or more movies? Answer: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3
"
Find the list of page size which have more than 3 product listed,SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3,"Input: Find the list of page size which have more than 3 product listed Answer: SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3
"
What is the minimum snatch score?,SELECT min(snatch) FROM body_builder,"Input: What is the minimum snatch score? Answer: SELECT min(snatch) FROM body_builder
"
"Find all the building full names containing the word ""court"".","SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""","Input: Find all the building full names containing the word ""court"". Answer: SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE ""%court%""
"
Which campus has the most degrees conferred in all times?,SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1,"Input: Which campus has the most degrees conferred in all times? Answer: SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1
"
What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?,"SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000","Input: What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000? Answer: SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000
"
What degrees were conferred in San Francisco State University in the year 2001?,"SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND t2.year  =  2001","Input: What degrees were conferred in San Francisco State University in the year 2001? Answer: SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Francisco State University"" AND t2.year  =  2001
"
What city is the headquarter of the store Blackville?,"SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  ""Blackville""","Input: What city is the headquarter of the store Blackville? Answer: SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  ""Blackville""
"
What are the code and description of the least frequent detention type ?,"SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1","Input: What are the code and description of the least frequent detention type ? Answer: SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1
"
Find the names of the chip models that are not used by any phone with full accreditation type.,SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full',"Input: Find the names of the chip models that are not used by any phone with full accreditation type. Answer: SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'
"
What are the code and description of the most frequent behavior incident type?,"SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1","Input: What are the code and description of the most frequent behavior incident type? Answer: SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1
"
"What are the address and phone number of the buildings managed by ""Brenden""?","SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager	 =  ""Brenden""","Input: What are the address and phone number of the buildings managed by ""Brenden""? Answer: SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager	 =  ""Brenden""
"
"List the hardware model name for the phones that have screen mode type ""Text"" or RAM size greater than 32.","SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = ""Text"" OR T1.RAM_MiB  >  32","Input: List the hardware model name for the phones that have screen mode type ""Text"" or RAM size greater than 32. Answer: SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = ""Text"" OR T1.RAM_MiB  >  32
"
What is the minimum and maximum number of bathrooms of all the apartments?,"SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments","Input: What is the minimum and maximum number of bathrooms of all the apartments? Answer: SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments
"
"What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?","SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5","Input: What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies? Answer: SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5
"
"Find products with max page size as ""A4"" or pages per minute color smaller than 5.","SELECT product FROM product WHERE max_page_size  =  ""A4"" OR pages_per_minute_color  <  5","Input: Find products with max page size as ""A4"" or pages per minute color smaller than 5. Answer: SELECT product FROM product WHERE max_page_size  =  ""A4"" OR pages_per_minute_color  <  5
"
List the name of the phone model launched in year 2002 and with the highest RAM size.,SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1,"Input: List the name of the phone model launched in year 2002 and with the highest RAM size. Answer: SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1
"
"What is the average ROM size of phones produced by the company named ""Nokia Corporation""?","SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = ""Nokia Corporation""","Input: What is the average ROM size of phones produced by the company named ""Nokia Corporation""? Answer: SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = ""Nokia Corporation""
"
How many accounts are there?,SELECT count(*) FROM Accounts,"Input: How many accounts are there? Answer: SELECT count(*) FROM Accounts
"
"What apartment type codes and apartment numbers do the buildings managed by ""Kyle"" have?","SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  ""Kyle""","Input: What apartment type codes and apartment numbers do the buildings managed by ""Kyle"" have? Answer: SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  ""Kyle""
"
What is the total number of ratings that has more than 3 stars?,SELECT count(*) FROM Rating WHERE stars  >  3,"Input: What is the total number of ratings that has more than 3 stars? Answer: SELECT count(*) FROM Rating WHERE stars  >  3
"
What are the first and last names of all customers who lived in Lockmanfurt?,"SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt""","Input: What are the first and last names of all customers who lived in Lockmanfurt? Answer: SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = ""Lockmanfurt""
"
How many employees are there?,SELECT count(*) FROM Staff,"Input: How many employees are there? Answer: SELECT count(*) FROM Staff
"
How many vehicles exist?,SELECT count(*) FROM Vehicles,"Input: How many vehicles exist? Answer: SELECT count(*) FROM Vehicles
"
"What is the customer last name, id and phone number with most number of orders?","SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","Input: What is the customer last name, id and phone number with most number of orders? Answer: SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
"
"For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.","SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != ""null"" GROUP BY director","Input: For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. Answer: SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != ""null"" GROUP BY director
"
"How many degrees were conferred in ""San Jose State University"" in 2000?","SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000","Input: How many degrees were conferred in ""San Jose State University"" in 2000? Answer: SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  ""San Jose State University"" AND t2.year  =  2000
"
Find the details for all chip models.,SELECT * FROM chip_model,"Input: Find the details for all chip models. Answer: SELECT * FROM chip_model
"
Find the average fee on a CSU campus in 1996,SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996,"Input: Find the average fee on a CSU campus in 1996 Answer: SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996
"
How many lessons taught by staff whose first name has letter 'a' in it?,"SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""","Input: How many lessons taught by staff whose first name has letter 'a' in it? Answer: SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE ""%a%""
"
"Find the total number of rooms in the apartments that have facility code ""Gym"".","SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  ""Gym""","Input: Find the total number of rooms in the apartments that have facility code ""Gym"". Answer: SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  ""Gym""
"
What is the campus fee in the year 2000 for San Jose State University?,"SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Jose State University"" AND t1.year  =  2000","Input: What is the campus fee in the year 2000 for San Jose State University? Answer: SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Jose State University"" AND t1.year  =  2000
"
What is the average pages per minute color?,SELECT avg(pages_per_minute_color) FROM product,"Input: What is the average pages per minute color? Answer: SELECT avg(pages_per_minute_color) FROM product
"
What are the top three apartment types in terms of the average room count? Give me the,SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3,"Input: What are the top three apartment types in terms of the average room count? Give me the Answer: SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3
"
"List the hardware model name for the phons that were produced by ""Nokia Corporation"" but whose screen mode type is not Text.","SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  ""Nokia Corporation"" AND T1.Type != ""Text""","Input: List the hardware model name for the phons that were produced by ""Nokia Corporation"" but whose screen mode type is not Text. Answer: SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  ""Nokia Corporation"" AND T1.Type != ""Text""
"
"What are the chip model and screen mode of the phone with hardware model name ""LG-P760""?","SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = ""LG-P760""","Input: What are the chip model and screen mode of the phone with hardware model name ""LG-P760""? Answer: SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = ""LG-P760""
"
What are the names of all the different reviewers who rates Gone with the Wind?,SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind',"Input: What are the names of all the different reviewers who rates Gone with the Wind? Answer: SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'
"
What are the names of all directors who made one movie?,SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1,"Input: What are the names of all directors who made one movie? Answer: SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1
"
How many reviewers are there?,SELECT count(*) FROM Reviewer,"Input: How many reviewers are there? Answer: SELECT count(*) FROM Reviewer
"
Find the average ram mib size of the chip models that are never used by any phone.,SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone),"Input: Find the average ram mib size of the chip models that are never used by any phone. Answer: SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)
"
In which country and state does Janessa Sawayn live?,"SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""","Input: In which country and state does Janessa Sawayn live? Answer: SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""
"
What is the name of the movie that is rated by most of times?,"SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1","Input: What is the name of the movie that is rated by most of times? Answer: SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1
"
List the first name middle name and last name of all staff.,"SELECT first_name ,  middle_name ,  last_name FROM Staff","Input: List the first name middle name and last name of all staff. Answer: SELECT first_name ,  middle_name ,  last_name FROM Staff
"
Find all the stores in the district with the most population.,SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1),"Input: Find all the stores in the district with the most population. Answer: SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)
"
"Return the apartment numbers of the apartments with type code ""Flat"".","SELECT apt_number FROM Apartments WHERE apt_type_code  =  ""Flat""","Input: Return the apartment numbers of the apartments with type code ""Flat"". Answer: SELECT apt_number FROM Apartments WHERE apt_type_code  =  ""Flat""
"
What is the first name of the staff who did not give any lesson?,SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id,"Input: What is the first name of the staff who did not give any lesson? Answer: SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id
"
Find the titles of all movies directed by steven spielberg.,SELECT title FROM Movie WHERE director = 'Steven Spielberg',"Input: Find the titles of all movies directed by steven spielberg. Answer: SELECT title FROM Movie WHERE director = 'Steven Spielberg'
"
How many universities have a campus fee higher than average?,SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees),"Input: How many universities have a campus fee higher than average? Answer: SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)
"
Find the name and population of district with population between 200000 and 2000000,"SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000","Input: Find the name and population of district with population between 200000 and 2000000 Answer: SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000
"
"Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is ""LG-P760"".","SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = ""LG-P760""","Input: Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is ""LG-P760"". Answer: SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = ""LG-P760""
"
What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?,"SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%""","Input: What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s? Answer: SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn"" AND nickname LIKE ""%s%""
"
What are the names of the reviewers who have rated a movie more than 3 stars before?,SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3,"Input: What are the names of the reviewers who have rated a movie more than 3 stars before? Answer: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3
"
List the names and origins of people who are not body builders.,"SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id","Input: List the names and origins of people who are not body builders. Answer: SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id
"
Which last names are both used by customers and by staff?,SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff,"Input: Which last names are both used by customers and by staff? Answer: SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff
"
"What are the start and end dates for incidents with incident type code ""NOISE""?","SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  ""NOISE""","Input: What are the start and end dates for incidents with incident type code ""NOISE""? Answer: SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  ""NOISE""
"
What is the reviewer id of Daniel Lewis?,"SELECT rID FROM Reviewer WHERE name  =  ""Daniel Lewis""","Input: What is the reviewer id of Daniel Lewis? Answer: SELECT rID FROM Reviewer WHERE name  =  ""Daniel Lewis""
"
How many faculty lines are there in the university that conferred the least number of degrees in year 2001?,SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1,"Input: How many faculty lines are there in the university that conferred the least number of degrees in year 2001? Answer: SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1
"
"Show the unique first names, last names, and phone numbers for all customers with any account.","SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id","Input: Show the unique first names, last names, and phone numbers for all customers with any account. Answer: SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id
"
How many faculty lines are there at San Francisco State University in 2004?,"SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  ""San Francisco State University""","Input: How many faculty lines are there at San Francisco State University in 2004? Answer: SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  ""San Francisco State University""
"
Show the order ids and the number of items in each order.,"SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id","Input: Show the order ids and the number of items in each order. Answer: SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id
"
What is the name of the movie produced after 2000 and directed by James Cameron?,SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000,"Input: What is the name of the movie produced after 2000 and directed by James Cameron? Answer: SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000
"
"What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?","SELECT campus FROM campuses WHERE LOCATION  =  ""Northridge"" AND county  =  ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION  =  ""San Francisco"" AND county  =  ""San Francisco""","Input: What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco? Answer: SELECT campus FROM campuses WHERE LOCATION  =  ""Northridge"" AND county  =  ""Los Angeles"" UNION SELECT campus FROM campuses WHERE LOCATION  =  ""San Francisco"" AND county  =  ""San Francisco""
"
List email address and birthday of customer whose first name as Carole.,"SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = ""Carole""","Input: List email address and birthday of customer whose first name as Carole. Answer: SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = ""Carole""
"
"In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?",SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year,"Input: In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently? Answer: SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year
"
What are names of the movies that are either made before 1980 or directed by James Cameron?,"SELECT title FROM Movie WHERE director  =  ""James Cameron"" OR YEAR   <  1980","Input: What are names of the movies that are either made before 1980 or directed by James Cameron? Answer: SELECT title FROM Movie WHERE director  =  ""James Cameron"" OR YEAR   <  1980
"
What are the names of all reviewers that have given 3 or 4 stars for reviews?,SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4,"Input: What are the names of all reviewers that have given 3 or 4 stars for reviews? Answer: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4
"
How many transaction does each account have? Show the number and account id.,"SELECT count(*) ,  account_id FROM Financial_transactions","Input: How many transaction does each account have? Show the number and account id. Answer: SELECT count(*) ,  account_id FROM Financial_transactions
"
How many movie reviews does each director get?,"SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director","Input: How many movie reviews does each director get? Answer: SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director
"
"What is the average room count of the apartments whose booking status code is ""Provisional""?","SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""","Input: What is the average room count of the apartments whose booking status code is ""Provisional""? Answer: SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""
"
Return the order ids and details for orderes with two or more invoices.,"SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2","Input: Return the order ids and details for orderes with two or more invoices. Answer: SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2
"
"What is the average number of rooms of apartments with type code ""Studio""?","SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  ""Studio""","Input: What is the average number of rooms of apartments with type code ""Studio""? Answer: SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  ""Studio""
"
"Find all information about student addresses, and sort by monthly rental in descending order.",SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC,"Input: Find all information about student addresses, and sort by monthly rental in descending order. Answer: SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC
"
Find the names of all directors whose movies are rated by Sarah Martinez.,SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez',"Input: Find the names of all directors whose movies are rated by Sarah Martinez. Answer: SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'
"
"Find the dates of assessment notes for students with first name ""Fanny"".","SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  ""Fanny""","Input: Find the dates of assessment notes for students with first name ""Fanny"". Answer: SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  ""Fanny""
"
"What are teh names of the different products, as well as the number of customers who have ordered each product.","SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name","Input: What are teh names of the different products, as well as the number of customers who have ordered each product. Answer: SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name
"
"What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?","SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name","Input: What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director? Answer: SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name
"
How many invoices do we have?,SELECT count(*) FROM Invoices,"Input: How many invoices do we have? Answer: SELECT count(*) FROM Invoices
"
"Find products with max page size as ""A4"" and pages per minute color smaller than 5.","SELECT product FROM product WHERE max_page_size  =  ""A4"" AND pages_per_minute_color  <  5","Input: Find products with max page size as ""A4"" and pages per minute color smaller than 5. Answer: SELECT product FROM product WHERE max_page_size  =  ""A4"" AND pages_per_minute_color  <  5
"
List each birth place along with the number of people from there.,"SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place","Input: List each birth place along with the number of people from there. Answer: SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place
"
What are the birthdays of people in ascending order of height?,SELECT Birth_Date FROM People ORDER BY Height ASC,"Input: What are the birthdays of people in ascending order of height? Answer: SELECT Birth_Date FROM People ORDER BY Height ASC
"
List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32.,"SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32","Input: List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32. Answer: SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32
"
How many lessons have been cancelled?,"SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled""","Input: How many lessons have been cancelled? Answer: SELECT count(*) FROM Lessons WHERE lesson_status_code = ""Cancelled""
"
"Which apartments have bookings with both status codes ""Provisional"" and ""Confirmed""? Give me the apartment numbers.","SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed"" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""","Input: Which apartments have bookings with both status codes ""Provisional"" and ""Confirmed""? Give me the apartment numbers. Answer: SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Confirmed"" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  ""Provisional""
"
"What is the customer id, first and last name with most number of accounts.","SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1","Input: What is the customer id, first and last name with most number of accounts. Answer: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
"
When did the staff member named Janessa Sawayn join the company?,"SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""","Input: When did the staff member named Janessa Sawayn join the company? Answer: SELECT date_joined_staff FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""
"
List all cities of addresses in alphabetical order.,SELECT city FROM Addresses ORDER BY city,"Input: List all cities of addresses in alphabetical order. Answer: SELECT city FROM Addresses ORDER BY city
"
What is the date of birth for the staff member named Janessa Sawayn?,"SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""","Input: What is the date of birth for the staff member named Janessa Sawayn? Answer: SELECT date_of_birth FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""
"
What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?,"SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  ""James Cameron"")","Input: What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating? Answer: SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  ""James Cameron"")
"
What are the titles of all movies that have not been rated?,SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating),"Input: What are the titles of all movies that have not been rated? Answer: SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)
"
What is the total time for all lessons taught by Janessa Sawayn?,"SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""","Input: What is the total time for all lessons taught by Janessa Sawayn? Answer: SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""
"
What are the names of the districts that have both mall and village store style shops?,"SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  ""City Mall"" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  ""Village Store""","Input: What are the names of the districts that have both mall and village store style shops? Answer: SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  ""City Mall"" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  ""Village Store""
"
How many undergraduates are there at San Jose State,"SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Jose State University""","Input: How many undergraduates are there at San Jose State Answer: SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  ""San Jose State University""
"
Return all distinct detention type codes.,SELECT DISTINCT detention_type_code FROM Detention,"Input: Return all distinct detention type codes. Answer: SELECT DISTINCT detention_type_code FROM Detention
"
Find the names of all stores in Khanewal District.,"SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  ""Khanewal District""","Input: Find the names of all stores in Khanewal District. Answer: SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  ""Khanewal District""
"
Which model has the least amount of RAM? List the model name and the amount of RAM.,"SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1","Input: Which model has the least amount of RAM? List the model name and the amount of RAM. Answer: SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1
"
Find the title and star rating of the movie that got the least rating star for each reviewer.,"SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID","Input: Find the title and star rating of the movie that got the least rating star for each reviewer. Answer: SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID
"
Show all product names without an order.,SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id,"Input: Show all product names without an order. Answer: SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id
"
"What are the wifi and screen mode type of the hardware model named ""LG-P760""?","SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = ""LG-P760""","Input: What are the wifi and screen mode type of the hardware model named ""LG-P760""? Answer: SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = ""LG-P760""
"
Count the total number of apartment bookings.,SELECT count(*) FROM Apartment_Bookings,"Input: Count the total number of apartment bookings. Answer: SELECT count(*) FROM Apartment_Bookings
"
Find the city with the most number of stores.,SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1,"Input: Find the city with the most number of stores. Answer: SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1
"
Who directed Avatar?,SELECT director FROM Movie WHERE title  = 'Avatar',"Input: Who directed Avatar? Answer: SELECT director FROM Movie WHERE title  = 'Avatar'
"
When are the birthdays of customer who are classified as 'Good Customer' status?,SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer',"Input: When are the birthdays of customer who are classified as 'Good Customer' status? Answer: SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'
"
Find the ids of reviewers who didn't only give 4 star.,SELECT rID FROM Rating WHERE stars != 4,"Input: Find the ids of reviewers who didn't only give 4 star. Answer: SELECT rID FROM Rating WHERE stars != 4
"
How much in total does customer with first name as Carole and last name as Bernhard paid?,"SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""","Input: How much in total does customer with first name as Carole and last name as Bernhard paid? Answer: SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = ""Carole"" AND T2.last_name = ""Bernhard""
"
How many products were not included in any order?,SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ),"Input: How many products were not included in any order? Answer: SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )
"
List the height and weight of people in descending order of height.,"SELECT Height ,  Weight FROM people ORDER BY Height DESC","Input: List the height and weight of people in descending order of height. Answer: SELECT Height ,  Weight FROM people ORDER BY Height DESC
"
How many transactions do we have?,SELECT count(*) FROM Financial_transactions,"Input: How many transactions do we have? Answer: SELECT count(*) FROM Financial_transactions
"
What is highest rating for the most recent movie and when was it released?,"SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)","Input: What is highest rating for the most recent movie and when was it released? Answer: SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)
"
What are the names of the states that have 2 to 4 employees living there?,SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4,"Input: What are the names of the states that have 2 to 4 employees living there? Answer: SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4
"
What is the id and detail of the vehicle used in lessons for most of the times?,"SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1","Input: What is the id and detail of the vehicle used in lessons for most of the times? Answer: SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1
"
"How many faculty, in total, are there in the year 2002?",SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002,"Input: How many faculty, in total, are there in the year 2002? Answer: SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002
"
Find the name all districts with city area greater than 10 or population larger than 100000,SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000,"Input: Find the name all districts with city area greater than 10 or population larger than 100000 Answer: SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000
"
List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200.,SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200,"Input: List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200. Answer: SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200
"
How many customers in total?,SELECT count(*) FROM Customers,"Input: How many customers in total? Answer: SELECT count(*) FROM Customers
"
"What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name ""Meaghan""?","SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'","Input: What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name ""Meaghan""? Answer: SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'
"
Show order ids and the total quantity in each order.,"SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id","Input: Show order ids and the total quantity in each order. Answer: SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id
"
"What is the zip code of the address where the teacher with first name ""Lyla"" lives?","SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  ""Lyla""","Input: What is the zip code of the address where the teacher with first name ""Lyla"" lives? Answer: SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  ""Lyla""
"
Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.,SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full',"Input: Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types. Answer: SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'
"
Find the number of apartments that have no facility.,SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities),"Input: Find the number of apartments that have no facility. Answer: SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)
"
How many assessment notes are there in total?,SELECT count(*) FROM ASSESSMENT_NOTES,"Input: How many assessment notes are there in total? Answer: SELECT count(*) FROM ASSESSMENT_NOTES
"
How many different products correspond to each order id?,"SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id","Input: How many different products correspond to each order id? Answer: SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id
"
Find the id and last name of the student that has the most behavior incidents?,"SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1","Input: Find the id and last name of the student that has the most behavior incidents? Answer: SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
"
What is the average price for a lesson taught by Janessa Sawayn?,"SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""","Input: What is the average price for a lesson taught by Janessa Sawayn? Answer: SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = ""Janessa"" AND T2.last_name = ""Sawayn""
"
"What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?","SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = ""Marina"" OR last_name  =  ""Kohler""","Input: What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina? Answer: SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = ""Marina"" OR last_name  =  ""Kohler""
"
Find the ids and first names of the 3 teachers that have the most number of assessment notes?,"SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3","Input: Find the ids and first names of the 3 teachers that have the most number of assessment notes? Answer: SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3
"
What is the nickname of the employee named Janessa Sawayn?,"SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""","Input: What is the nickname of the employee named Janessa Sawayn? Answer: SELECT nickname FROM Staff WHERE first_name = ""Janessa"" AND last_name = ""Sawayn""
"
Which campus has the most faculties in year 2003?,SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1,"Input: Which campus has the most faculties in year 2003? Answer: SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1
"
What are the line 1 and average monthly rentals of all student addresses?,"SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id","Input: What are the line 1 and average monthly rentals of all student addresses? Answer: SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id
"
How many distinct birth places are there?,SELECT count(DISTINCT Birth_Place) FROM people,"Input: How many distinct birth places are there? Answer: SELECT count(DISTINCT Birth_Place) FROM people
"
"What are the invoice dates, order ids, and order details for all invoices?","SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id","Input: What are the invoice dates, order ids, and order details for all invoices? Answer: SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id
"
List the number of customers that did not have any payment history.,SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments ),"Input: List the number of customers that did not have any payment history. Answer: SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments )
"
"What is the campus fee of ""San Francisco State University"" in year 2000?","SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Francisco State University"" AND t1.year  =  2000","Input: What is the campus fee of ""San Francisco State University"" in year 2000? Answer: SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  ""San Francisco State University"" AND t1.year  =  2000
"
"For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.","SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title","Input: For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. Answer: SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title
"
"Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.","SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1","Input: Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms. Answer: SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1
"
Which district has the least area?,SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1,"Input: Which district has the least area? Answer: SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1
"
How many dogs went through any treatments?,SELECT count(DISTINCT dog_id) FROM Treatments,"Input: How many dogs went through any treatments? Answer: SELECT count(DISTINCT dog_id) FROM Treatments
"
What is the name of the high schooler who has the greatest number of friends?,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the high schooler who has the greatest number of friends? Answer: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
"
what is the name and nation of the singer who have a song having 'Hey' in its name?,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'","Input: what is the name and nation of the singer who have a song having 'Hey' in its name? Answer: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'
"
How many templates do we have?,SELECT count(*) FROM Templates,"Input: How many templates do we have? Answer: SELECT count(*) FROM Templates
"
What are the names of all cartoons directed by Ben Jones?,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""","Input: What are the names of all cartoons directed by Ben Jones? Answer: SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones""
"
"What are the major record formats of orchestras, sorted by their frequency?",SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,"Input: What are the major record formats of orchestras, sorted by their frequency? Answer: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC
"
"What are flight numbers of flights departing from Airport ""APG""?","SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""","Input: What are flight numbers of flights departing from Airport ""APG""? Answer: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""
"
How many flights depart from City Aberdeen?,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","Input: How many flights depart from City Aberdeen? Answer: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""
"
List each charge type and its amount.,"SELECT charge_type ,  charge_amount FROM Charges","Input: List each charge type and its amount. Answer: SELECT charge_type ,  charge_amount FROM Charges
"
What are all the makers and models?,"SELECT Maker ,  Model FROM MODEL_LIST","Input: What are all the makers and models? Answer: SELECT Maker ,  Model FROM MODEL_LIST
"
What are the countries that have cartoons on TV that were written by Todd Casey?,SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',"Input: What are the countries that have cartoons on TV that were written by Todd Casey? Answer: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
"
What is the number of cartoones written by Joseph Kuhr?,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr""","Input: What is the number of cartoones written by Joseph Kuhr? Answer: SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr""
"
How many teachers are there?,SELECT count(*) FROM teacher,"Input: How many teachers are there? Answer: SELECT count(*) FROM teacher
"
Show the citizenship shared by singers with birth year before 1945 and after 1955.,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,"Input: Show the citizenship shared by singers with birth year before 1945 and after 1955. Answer: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955
"
How many countries exist?,SELECT count(*) FROM COUNTRIES,"Input: How many countries exist? Answer: SELECT count(*) FROM COUNTRIES
"
Show all paragraph ids and texts for the document with name 'Welcome to NY'.,"SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'","Input: Show all paragraph ids and texts for the document with name 'Welcome to NY'. Answer: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'
"
How many professionals have performed any treatment to dogs?,SELECT count(DISTINCT professional_id) FROM Treatments,"Input: How many professionals have performed any treatment to dogs? Answer: SELECT count(DISTINCT professional_id) FROM Treatments
"
How many courses in total are listed?,SELECT count(*) FROM Courses,"Input: How many courses in total are listed? Answer: SELECT count(*) FROM Courses
"
What are the names of the employees who never received any evaluation?,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),"Input: What are the names of the employees who never received any evaluation? Answer: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)
"
Find the first names that are used for professionals or owners but are not used as dog names.,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,"Input: Find the first names that are used for professionals or owners but are not used as dog names. Answer: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs
"
Show the ids of high schoolers who have friends and are also liked by someone else.,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,"Input: Show the ids of high schoolers who have friends and are also liked by someone else. Answer: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes
"
"Return the owner id, first name and last name of the owner who has the most dogs.","SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1","Input: Return the owner id, first name and last name of the owner who has the most dogs. Answer: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1
"
How many likes correspond to each student id?,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id","Input: How many likes correspond to each student id? Answer: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id
"
What are the regions that use English or Dutch?,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""","Input: What are the regions that use English or Dutch? Answer: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""
"
Which airports do not have departing or arriving flights?,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),"Input: Which airports do not have departing or arriving flights? Answer: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)
"
Show all template type codes and the number of documents using each type.,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code","Input: Show all template type codes and the number of documents using each type. Answer: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code
"
Which city has most number of arriving flights?,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,"Input: Which city has most number of arriving flights? Answer: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1
"
Give the code of the airport with the least flights.,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,"Input: Give the code of the airport with the least flights. Answer: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1
"
Return the names of the 3 countries with the fewest people.,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,"Input: Return the names of the 3 countries with the fewest people. Answer: SELECT Name FROM country ORDER BY Population ASC LIMIT 3
"
"List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"".","SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""","Input: List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"". Answer: SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti""
"
Which language is the most popular on the Asian continent?,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1","Input: Which language is the most popular on the Asian continent? Answer: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1
"
How many different departments offer degrees?,SELECT count(DISTINCT department_id) FROM Degree_Programs,"Input: How many different departments offer degrees? Answer: SELECT count(DISTINCT department_id) FROM Degree_Programs
"
Find the number of players for each hand type.,"SELECT count(*) ,  hand FROM players GROUP BY hand","Input: Find the number of players for each hand type. Answer: SELECT count(*) ,  hand FROM players GROUP BY hand
"
Find the id of students who do not have a cat pet.,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',"Input: Find the id of students who do not have a cat pet. Answer: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'
"
How many flights do we have?,SELECT count(*) FROM FLIGHTS,"Input: How many flights do we have? Answer: SELECT count(*) FROM FLIGHTS
"
What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'","Input: What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang? Answer: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'
"
How many flights have destination ATO?,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""","Input: How many flights have destination ATO? Answer: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""
"
What is the total surface area of the continents Asia and Europe?,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""","Input: What is the total surface area of the continents Asia and Europe? Answer: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""
"
Which template type code is used by most number of documents?,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,"Input: Which template type code is used by most number of documents? Answer: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1
"
What is the average horsepower for all cards produced before 1980?,SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980,"Input: What is the average horsepower for all cards produced before 1980? Answer: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980
"
Show the property type descriptions of properties belonging to that code.,SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code,"Input: Show the property type descriptions of properties belonging to that code. Answer: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code
"
How many documents are using the template with type code 'PPT'?,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',"Input: How many documents are using the template with type code 'PPT'? Answer: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'
"
What is the first name of the student whose permanent address is different from his or her current one?,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,"Input: What is the first name of the student whose permanent address is different from his or her current one? Answer: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id
"
"For model volvo, how many cylinders does the car with the least accelerate have?",SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1,"Input: For model volvo, how many cylinders does the car with the least accelerate have? Answer: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1
"
What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',"Input: What are the ids of the TV channels that do not have any cartoons directed by Ben Jones? Answer: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'
"
Show the names of conductors and the orchestras they have conducted.,"SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID","Input: Show the names of conductors and the orchestras they have conducted. Answer: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID
"
Return the names and template ids for documents that contain the letter w in their description.,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""","Input: Return the names and template ids for documents that contain the letter w in their description. Answer: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""
"
What other details can you tell me about students in reverse alphabetical order?,SELECT other_student_details FROM Students ORDER BY other_student_details DESC,"Input: What other details can you tell me about students in reverse alphabetical order? Answer: SELECT other_student_details FROM Students ORDER BY other_student_details DESC
"
What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1","Input: What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id? Answer: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1
"
Which airline has most number of flights?,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,"Input: Which airline has most number of flights? Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1
"
Return the ids corresponding to templates with the description 'Presentation'.,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""","Input: Return the ids corresponding to templates with the description 'Presentation'. Answer: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""
"
What are the names of students who have 2 or more likes?,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,"Input: What are the names of students who have 2 or more likes? Answer: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2
"
Find the city with the largest population that uses English.,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1","Input: Find the city with the largest population that uses English. Answer: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1
"
What are the names of the teachers whose courses have not been arranged?,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),"Input: What are the names of the teachers whose courses have not been arranged? Answer: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)
"
What is the smallest weight of the car produced with 8 cylinders on 1974?,SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1,"Input: What is the smallest weight of the car produced with 8 cylinders on 1974? Answer: SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1
"
"What is the earliest date of a transcript release, and what details can you tell me?","SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1","Input: What is the earliest date of a transcript release, and what details can you tell me? Answer: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1
"
How much does the most recent treatment cost?,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,"Input: How much does the most recent treatment cost? Answer: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1
"
What is the number of the cars with horsepower more than 150?,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150,"Input: What is the number of the cars with horsepower more than 150? Answer: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150
"
Show the names of singers and the total sales of their songs.,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name","Input: Show the names of singers and the total sales of their songs. Answer: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name
"
Find the average age of losers and winners of all matches.,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches","Input: Find the average age of losers and winners of all matches. Answer: SELECT avg(loser_age) ,  avg(winner_age) FROM matches
"
how many countries are in Asia?,"SELECT count(*) FROM country WHERE continent  =  ""Asia""","Input: how many countries are in Asia? Answer: SELECT count(*) FROM country WHERE continent  =  ""Asia""
"
How many friends does the high school student Kyle have?,"SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","Input: How many friends does the high school student Kyle have? Answer: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""
"
What is the name of the conductor who has worked the greatest number of years?,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,"Input: What is the name of the conductor who has worked the greatest number of years? Answer: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1
"
How many documents do we have?,SELECT count(*) FROM Documents,"Input: How many documents do we have? Answer: SELECT count(*) FROM Documents
"
Find the manager name and district of the shop whose number of products is the largest.,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1","Input: Find the manager name and district of the shop whose number of products is the largest. Answer: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1
"
What is the semester which most student registered in? Show both the name and the id.,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1","Input: What is the semester which most student registered in? Show both the name and the id. Answer: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1
"
What are the names of the singers whose birth years are either 1948 or 1949?,SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949,"Input: What are the names of the singers whose birth years are either 1948 or 1949? Answer: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949
"
Find the program which most number of students are enrolled in. List both the id and the summary.,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1","Input: Find the program which most number of students are enrolled in. List both the id and the summary. Answer: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1
"
Show the document id with paragraph text 'Brazil' and 'Ireland'.,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',"Input: Show the document id with paragraph text 'Brazil' and 'Ireland'. Answer: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'
"
What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),"Input: What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones? Answer: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')
"
"Show template ids, version numbers, and template type codes for all templates.","SELECT template_id ,  version_number ,  template_type_code FROM Templates","Input: Show template ids, version numbers, and template type codes for all templates. Answer: SELECT template_id ,  version_number ,  template_type_code FROM Templates
"
How much surface area do the countires in the Carribean cover together?,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""","Input: How much surface area do the countires in the Carribean cover together? Answer: SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""
"
Show ids of all students who do not have any friends.,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,"Input: Show ids of all students who do not have any friends. Answer: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend
"
What is the name and capacity for the stadium with the highest average attendance?,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1","Input: What is the name and capacity for the stadium with the highest average attendance? Answer: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1
"
How many paragraphs in total?,SELECT count(*) FROM Paragraphs,"Input: How many paragraphs in total? Answer: SELECT count(*) FROM Paragraphs
"
What are the codes of countries with more than 50 players?,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,"Input: What are the codes of countries with more than 50 players? Answer: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50
"
What are the names of the countries with no car makers?,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country,"Input: What are the names of the countries with no car makers? Answer: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country
"
What is the model of the car with the smallest amount of horsepower?,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1,"Input: What is the model of the car with the smallest amount of horsepower? Answer: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1
"
Find all airlines that have flights from both airports 'APG' and 'CVO'.,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""","Input: Find all airlines that have flights from both airports 'APG' and 'CVO'. Answer: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""
"
How many different forms of governments are there in Africa?,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""","Input: How many different forms of governments are there in Africa? Answer: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""
"
How many likes does Kyle have?,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""","Input: How many likes does Kyle have? Answer: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""
"
What are the different ids and names of the battles that lost any 'Brig' type shipes?,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'","Input: What are the different ids and names of the battles that lost any 'Brig' type shipes? Answer: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'
"
What is the pixel aspect ratio and country of origin for all TV channels that do not use English?,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'","Input: What is the pixel aspect ratio and country of origin for all TV channels that do not use English? Answer: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'
"
How long is the people’s average life expectancy in Central Africa?,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""","Input: How long is the people’s average life expectancy in Central Africa? Answer: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""
"
What are the names of the teachers and how many courses do they teach?,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name","Input: What are the names of the teachers and how many courses do they teach? Answer: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name
"
What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1","Input: What is the largest amount of horsepower for the models with 3 cylinders and what make is it? Answer: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1
"
What is the version number and template type code for the template with version number later than 5?,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5","Input: What is the version number and template type code for the template with version number later than 5? Answer: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5
"
What is the ship id and name that caused most total injuries?,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1","Input: What is the ship id and name that caused most total injuries? Answer: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
"
What are the first name and last name of the professionals who have done treatment with cost below average?,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )","Input: What are the first name and last name of the professionals who have done treatment with cost below average? Answer: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )
"
"List each owner's first name, last name, and the size of his for her dog.","SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id","Input: List each owner's first name, last name, and the size of his for her dog. Answer: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id
"
What are the countries that are not playing cartoons written by Todd Casey?,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',"Input: What are the countries that are not playing cartoons written by Todd Casey? Answer: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'
"
Find the first name and age of students who have a dog but do not have a cat as a pet.,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","Input: Find the first name and age of students who have a dog but do not have a cat as a pet. Answer: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
"
Return the money rank of the poker player with the greatest height.,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,"Input: Return the money rank of the poker player with the greatest height. Answer: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
"
Find the first names of owners living in Virginia and the names of dogs they own.,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'","Input: Find the first names of owners living in Virginia and the names of dogs they own. Answer: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'
"
"Show name, country, age for all singers ordered by age from the oldest to the youngest.","SELECT name ,  country ,  age FROM singer ORDER BY age DESC","Input: Show name, country, age for all singers ordered by age from the oldest to the youngest. Answer: SELECT name ,  country ,  age FROM singer ORDER BY age DESC
"
Find the total number of matches.,SELECT count(*) FROM matches,"Input: Find the total number of matches. Answer: SELECT count(*) FROM matches
"
List all document ids with at least two paragraphs.,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,"Input: List all document ids with at least two paragraphs. Answer: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2
"
How many airports do we have?,SELECT count(*) FROM AIRPORTS,"Input: How many airports do we have? Answer: SELECT count(*) FROM AIRPORTS
"
How many available features are there in total?,SELECT count(*) FROM Other_Available_Features,"Input: How many available features are there in total? Answer: SELECT count(*) FROM Other_Available_Features
"
What is the best rank of losers across all matches?,SELECT min(loser_rank) FROM matches,"Input: What is the best rank of losers across all matches? Answer: SELECT min(loser_rank) FROM matches
"
What are the details for the paragraph that includes the text 'Korea'?,SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea',"Input: What are the details for the paragraph that includes the text 'Korea'? Answer: SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'
"
What are the names and id of courses having at most 2 sections?,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2","Input: What are the names and id of courses having at most 2 sections? Answer: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2
"
How many different series and contents are listed in the TV Channel table?,"SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel","Input: How many different series and contents are listed in the TV Channel table? Answer: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel
"
What are the region and population of Angola?,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""","Input: What are the region and population of Angola? Answer: SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""
"
How many singers do we have?,SELECT count(*) FROM singer,"Input: How many singers do we have? Answer: SELECT count(*) FROM singer
"
How many flights arriving in Aberdeen city?,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""","Input: How many flights arriving in Aberdeen city? Answer: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""
"
"Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.","SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2","Input: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone. Answer: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2
"
What are the names of students who have no friends?,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,"Input: What are the names of students who have no friends? Answer: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id
"
Show the years in which orchestras that have given more than one performance are founded.,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,"Input: Show the years in which orchestras that have given more than one performance are founded. Answer: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1
"
What is the number of car models created by the car maker American Motor Company?,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company',"Input: What is the number of car models created by the car maker American Motor Company? Answer: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company'
"
Count the number of orchestras that have CD or DVD as their record format.,"SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""","Input: Count the number of orchestras that have CD or DVD as their record format. Answer: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  ""CD"" OR Major_Record_Format  =  ""DVD""
"
What are the names of all the countries that became independent after 1950?,SELECT Name FROM country WHERE IndepYear  >  1950,"Input: What are the names of all the countries that became independent after 1950? Answer: SELECT Name FROM country WHERE IndepYear  >  1950
"
Give me all the information about hiring.,SELECT * FROM hiring,"Input: Give me all the information about hiring. Answer: SELECT * FROM hiring
"
find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),"Input: find the names of museums which have more staff than the minimum staff number of all museums opened after 2010. Answer: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)
"
What are all the possible breed type and size type combinations?,"SELECT DISTINCT breed_code ,  size_code FROM dogs","Input: What are all the possible breed type and size type combinations? Answer: SELECT DISTINCT breed_code ,  size_code FROM dogs
"
What are the cost and treatment type description of each treatment?,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code","Input: What are the cost and treatment type description of each treatment? Answer: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code
"
What is the name of the semester with no students enrolled?,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),"Input: What is the name of the semester with no students enrolled? Answer: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )
"
Which region is the city Kabul located in?,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""","Input: Which region is the city Kabul located in? Answer: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""
"
How many paragraphs for the document with name 'Summer Show'?,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',"Input: How many paragraphs for the document with name 'Summer Show'? Answer: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'
"
What are the date and the operating professional's first name of each treatment?,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id","Input: What are the date and the operating professional's first name of each treatment? Answer: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id
"
What are the names of properties that are either houses or apartments with more than 1 room?,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1","Input: What are the names of properties that are either houses or apartments with more than 1 room? Answer: SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1
"
What is the name of the breed with the most dogs?,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the breed with the most dogs? Answer: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1
"
Show all the grades of the high schoolers.,SELECT grade FROM Highschooler,"Input: Show all the grades of the high schoolers. Answer: SELECT grade FROM Highschooler
"
How many car makers are there in france?,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france',"Input: How many car makers are there in france? Answer: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france'
"
Give the language that is spoken in the most countries.,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,"Input: Give the language that is spoken in the most countries. Answer: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1
"
What is the average miles per gallon(mpg) of the cars with 4 cylinders?,SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4,"Input: What is the average miles per gallon(mpg) of the cars with 4 cylinders? Answer: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4
"
What is the average edispl of the cars of model volvo?,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo',"Input: What is the average edispl of the cars of model volvo? Answer: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo'
"
How many official languages are spoken in Afghanistan?,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""","Input: How many official languages are spoken in Afghanistan? Answer: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""
"
"What are the ids, names, and descriptions for all documents?","SELECT document_id ,  document_name ,  document_description FROM Documents","Input: What are the ids, names, and descriptions for all documents? Answer: SELECT document_id ,  document_name ,  document_description FROM Documents
"
What is the number of distinct continents where Chinese is spoken?,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""","Input: What is the number of distinct continents where Chinese is spoken? Answer: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""
"
"What are the first names of all players, and their total ranking points?","SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","Input: What are the first names of all players, and their total ranking points? Answer: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
"
What is the area code in which the most voters voted?,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,"Input: What is the area code in which the most voters voted? Answer: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1
"
How is the math course described?,SELECT course_description FROM Courses WHERE course_name  =  'math',"Input: How is the math course described? Answer: SELECT course_description FROM Courses WHERE course_name  =  'math'
"
Give the city and country for the Alton airport.,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""","Input: Give the city and country for the Alton airport. Answer: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""
"
"What are flight numbers of Airline ""United Airlines""?","SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""","Input: What are flight numbers of Airline ""United Airlines""? Answer: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""
"
Count the number of templates of the type CV.,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""","Input: Count the number of templates of the type CV. Answer: SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""
"
What is the number of cars with a greater accelerate than the one with the most horsepower?,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 ),"Input: What is the number of cars with a greater accelerate than the one with the most horsepower? Answer: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 )
"
Return the names of the 3 most populated countries.,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,"Input: Return the names of the 3 most populated countries. Answer: SELECT Name FROM country ORDER BY Population DESC LIMIT 3
"
Show the record companies shared by orchestras founded before 2003 and after 2003.,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,"Input: Show the record companies shared by orchestras founded before 2003 and after 2003. Answer: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003
"
List the final tables made and the best finishes of poker players.,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player","Input: List the final tables made and the best finishes of poker players. Answer: SELECT Final_Table_Made ,  Best_Finish FROM poker_player
"
What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'","Input: What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open? Answer: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'
"
List the section_name in reversed lexicographical order.,SELECT section_name FROM Sections ORDER BY section_name DESC,"Input: List the section_name in reversed lexicographical order. Answer: SELECT section_name FROM Sections ORDER BY section_name DESC
"
Which employee received the most awards in evaluations? Give me the employee name.,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,"Input: Which employee received the most awards in evaluations? Give me the employee name. Answer: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1
"
How many friends does each student have?,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id","Input: How many friends does each student have? Answer: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id
"
"Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.","SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'","Input: Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email. Answer: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'
"
List the number of all matches who played in years of 2013 or 2016.,SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016,"Input: List the number of all matches who played in years of 2013 or 2016. Answer: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016
"
What is the average grade of students who have friends?,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),"Input: What is the average grade of students who have friends? Answer: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)
"
"What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.","SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1","Input: What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables. Answer: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1
"
"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.","SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'","Input: Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'. Answer: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'
"
Show the ID of the high schooler named Kyle.,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""","Input: Show the ID of the high schooler named Kyle. Answer: SELECT ID FROM Highschooler WHERE name  =  ""Kyle""
"
What are the names of nations speak both English and French?,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""","Input: What are the names of nations speak both English and French? Answer: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""
"
"What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?","SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2","Input: What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester? Answer: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2
"
What is last date created of votes from the state 'CA'?,SELECT max(created) FROM votes WHERE state  =  'CA',"Input: What is last date created of votes from the state 'CA'? Answer: SELECT max(created) FROM votes WHERE state  =  'CA'
"
Which Asian countries have a population that is larger than any country in Africa?,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")","Input: Which Asian countries have a population that is larger than any country in Africa? Answer: SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")
"
How many transcripts are released?,SELECT count(*) FROM Transcripts,"Input: How many transcripts are released? Answer: SELECT count(*) FROM Transcripts
"
Find the average ranking for each player and their first name.,"SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name","Input: Find the average ranking for each player and their first name. Answer: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name
"
What are the names of the countries that are in the continent of Europe and have a population of 80000?,"SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""","Input: What are the names of the countries that are in the continent of Europe and have a population of 80000? Answer: SELECT Name FROM country WHERE continent  =  ""Europe"" AND Population  =  ""80000""
"
What is the number of car models that are produced by each maker and what is the id and full name of each maker?,"SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id","Input: What is the number of car models that are produced by each maker and what is the id and full name of each maker? Answer: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id
"
Count the number of different templates used for documents.,SELECT count(DISTINCT template_id) FROM Documents,"Input: Count the number of different templates used for documents. Answer: SELECT count(DISTINCT template_id) FROM Documents
"
list all cartoon titles and their directors ordered by their air date,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date","Input: list all cartoon titles and their directors ordered by their air date Answer: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date
"
How many countries have a republic as their form of government?,"SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""","Input: How many countries have a republic as their form of government? Answer: SELECT count(*) FROM country WHERE GovernmentForm  =  ""Republic""
"
How many orchestras does each record company manage?,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company","Input: How many orchestras does each record company manage? Answer: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company
"
What is the feature type name of feature AirCon?,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""","Input: What is the feature type name of feature AirCon? Answer: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""
"
"For all of the 4 cylinder cars, which model has the most horsepower?",SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1,"Input: For all of the 4 cylinder cars, which model has the most horsepower? Answer: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1
"
What are the different models created by either the car maker General Motors or weighed more than 3500?,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500,"Input: What are the different models created by either the car maker General Motors or weighed more than 3500? Answer: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500
"
"Who is the first student to register? List the first name, middle name and last name.","SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1","Input: Who is the first student to register? List the first name, middle name and last name. Answer: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1
"
What are the African countries that have a  population less than any country in Asia?,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")","Input: What are the African countries that have a  population less than any country in Asia? Answer: SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")
"
What are 3 most highly rated episodes in the TV series table and what were those ratings?,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3","Input: What are 3 most highly rated episodes in the TV series table and what were those ratings? Answer: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3
"
Return the number of United Airlines flights leaving from AHD Airport.,"SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""","Input: Return the number of United Airlines flights leaving from AHD Airport. Answer: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  ""United Airlines"" AND T2.SourceAirport  =  ""AHD""
"
"What major is every student who does not own a cat as a pet, and also how old are they?","SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')","Input: What major is every student who does not own a cat as a pet, and also how old are they? Answer: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')
"
Find the number of pets whose weight is heavier than 10.,SELECT count(*) FROM pets WHERE weight  >  10,"Input: Find the number of pets whose weight is heavier than 10. Answer: SELECT count(*) FROM pets WHERE weight  >  10
"
How many flights depart from 'APG'?,"SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""","Input: How many flights depart from 'APG'? Answer: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  ""APG""
"
What are the Asian countries which have a population larger than that of any country in Africa?,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")","Input: What are the Asian countries which have a population larger than that of any country in Africa? Answer: SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")
"
Which grades have 4 or more high schoolers?,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,"Input: Which grades have 4 or more high schoolers? Answer: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4
"
What are the arriving date and the departing date of all the dogs?,"SELECT date_arrived ,  date_departed FROM Dogs","Input: What are the arriving date and the departing date of all the dogs? Answer: SELECT date_arrived ,  date_departed FROM Dogs
"
"What is the weekly rank for the episode ""A Love of a Lifetime""?","SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime""","Input: What is the weekly rank for the episode ""A Love of a Lifetime""? Answer: SELECT Weekly_Rank FROM TV_series WHERE Episode = ""A Love of a Lifetime""
"
Please show the name of the conductor that has conducted orchestras founded after 2008.,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008,"Input: Please show the name of the conductor that has conducted orchestras founded after 2008. Answer: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008
"
"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?","SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1","Input: What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets? Answer: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1
"
What are the names and ranks of the three youngest winners across all matches?,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3","Input: What are the names and ranks of the three youngest winners across all matches? Answer: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3
"
What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,"Input: What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011? Answer: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011
"
How many male students (sex is 'M') are allergic to any type of food?,"SELECT count(*) FROM Student WHERE sex  =  ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")","Input: How many male students (sex is 'M') are allergic to any type of food? Answer: SELECT count(*) FROM Student WHERE sex  =  ""M"" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"")
"
How many locations are listed in the database?,SELECT count(*) FROM Ref_locations,"Input: How many locations are listed in the database? Answer: SELECT count(*) FROM Ref_locations
"
Which job titles correspond to jobs with salaries over 9000?,SELECT job_title FROM jobs WHERE min_salary  >  9000,"Input: Which job titles correspond to jobs with salaries over 9000? Answer: SELECT job_title FROM jobs WHERE min_salary  >  9000
"
What are the salaries and manager ids for employees who have managers?,"SELECT salary ,  manager_id FROM employees WHERE manager_id != ""null""","Input: What are the salaries and manager ids for employees who have managers? Answer: SELECT salary ,  manager_id FROM employees WHERE manager_id != ""null""
"
"Show the studios that have not produced films with director ""Walter Hill"".","SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""","Input: Show the studios that have not produced films with director ""Walter Hill"". Answer: SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""
"
What are the headquarters without companies that are in the banking industry?,SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking',"Input: What are the headquarters without companies that are in the banking industry? Answer: SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'
"
What are the names of the top 8 countries by total invoice size and what are those sizes?,"SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8","Input: What are the names of the top 8 countries by total invoice size and what are those sizes? Answer: SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8
"
display the employee id and salary of all employees who report to Payam (first name).,"SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )","Input: display the employee id and salary of all employees who report to Payam (first name). Answer: SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )
"
Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.,"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""","Input: Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems. Answer: SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Dameon"" AND T2.staff_last_name = ""Frami"" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Jolie"" AND T2.staff_last_name = ""Weber""
"
What are the ids of the problems which are reported before 1978-06-26?,"SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""","Input: What are the ids of the problems which are reported before 1978-06-26? Answer: SELECT problem_id FROM problems WHERE date_problem_reported < ""1978-06-26""
"
Count the number of markets that have a number of cities lower than 300.,SELECT count(*) FROM market WHERE Number_cities  <  300,"Input: Count the number of markets that have a number of cities lower than 300. Answer: SELECT count(*) FROM market WHERE Number_cities  <  300
"
List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.,"SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10","Input: List the top 10 customers by total gross sales. List customers' first and last name and total gross sales. Answer: SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10
"
Return the top 3 greatest support rates.,SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3,"Input: Return the top 3 greatest support rates. Answer: SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
"
What are the names of all tracks that are on playlists titled Movies?,"SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies""","Input: What are the names of all tracks that are on playlists titled Movies? Answer: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = ""Movies""
"
"What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?","SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance","Input: What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances? Answer: SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance
"
What are the names of all of Bob's friends?,SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob',"Input: What are the names of all of Bob's friends? Answer: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'
"
Show the date and venue of each workshop in ascending alphabetical order of the venue.,"SELECT Date ,  Venue FROM workshop ORDER BY Venue","Input: Show the date and venue of each workshop in ascending alphabetical order of the venue. Answer: SELECT Date ,  Venue FROM workshop ORDER BY Venue
"
Find the customer who started a policy most recently.,SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies),"Input: Find the customer who started a policy most recently. Answer: SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)
"
Find the names of courses that have either 3 credits or 1 credit but 4 hours.,SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4,"Input: Find the names of courses that have either 3 credits or 1 credit but 4 hours. Answer: SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4
"
Who advises student 1004?,SELECT Advisor FROM Student WHERE StuID  =  1004,"Input: Who advises student 1004? Answer: SELECT Advisor FROM Student WHERE StuID  =  1004
"
Return the poll source corresponding to the candidate who has the oppose rate.,SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1,"Input: Return the poll source corresponding to the candidate who has the oppose rate. Answer: SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1
"
"Find the titles and studios of the films that are produced by some film studios that contained the word ""Universal"".","SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""","Input: Find the titles and studios of the films that are produced by some film studios that contained the word ""Universal"". Answer: SELECT title ,  Studio FROM film WHERE Studio LIKE ""%Universal%""
"
What are the top 10 customers' first and last names by total number of orders and how many orders did they make?,"SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10","Input: What are the top 10 customers' first and last names by total number of orders and how many orders did they make? Answer: SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10
"
"What are the name and assets of each company, sorted in ascending order of company name?","SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC","Input: What are the name and assets of each company, sorted in ascending order of company name? Answer: SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC
"
Which room has the highest base price?,"SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1","Input: Which room has the highest base price? Answer: SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1
"
Count the number of budget codes.,SELECT count(*) FROM Ref_budget_codes,"Input: Count the number of budget codes. Answer: SELECT count(*) FROM Ref_budget_codes
"
What are the names and types of the companies that have ever operated a flight?,"SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id","Input: What are the names and types of the companies that have ever operated a flight? Answer: SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id
"
What are the different names of friends who are younger than the average age for a friend?,SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person),"Input: What are the different names of friends who are younger than the average age for a friend? Answer: SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)
"
What are the ids of the problems which are reported after 1978-06-26?,"SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""","Input: What are the ids of the problems which are reported after 1978-06-26? Answer: SELECT problem_id FROM problems WHERE date_problem_reported > ""1978-06-26""
"
What is the last name of the musician that have produced the most number of songs?,SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1,"Input: What is the last name of the musician that have produced the most number of songs? Answer: SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1
"
Count the number of courses.,SELECT count(*) FROM COURSE,"Input: Count the number of courses. Answer: SELECT count(*) FROM COURSE
"
Who is the youngest employee in the company? List employee's first and last name.,"SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1","Input: Who is the youngest employee in the company? List employee's first and last name. Answer: SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1
"
Show the number of projects.,SELECT count(*) FROM Projects,"Input: Show the number of projects. Answer: SELECT count(*) FROM Projects
"
"Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.","SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC","Input: Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order. Answer: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC
"
"display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.","SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id","Input: display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number. Answer: SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id
"
Show names of pilots that have more than one record.,"SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1","Input: Show names of pilots that have more than one record. Answer: SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1
"
Which building does the instructor who teaches the most number of courses live in?,SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1,"Input: Which building does the instructor who teaches the most number of courses live in? Answer: SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1
"
"Return the budget type codes, budget type descriptions and document ids for documents with expenses.","SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code","Input: Return the budget type codes, budget type descriptions and document ids for documents with expenses. Answer: SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code
"
How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.,"SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name","Input: How many engineers did each staff contact? List both the contact staff name and number of engineers contacted. Answer: SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name
"
Count the number of distinct claim outcome codes.,SELECT count(DISTINCT claim_outcome_code) FROM claims_processing,"Input: Count the number of distinct claim outcome codes. Answer: SELECT count(DISTINCT claim_outcome_code) FROM claims_processing
"
How many songs have vocals of type lead?,"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""lead""","Input: How many songs have vocals of type lead? Answer: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""lead""
"
Who is the oldest person whose job is student?,SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' ),"Input: Who is the oldest person whose job is student? Answer: SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )
"
What are full names and salaries of employees working in the city of London?,"SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'","Input: What are full names and salaries of employees working in the city of London? Answer: SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'
"
Find the code of the location with the largest number of documents.,SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1,"Input: Find the code of the location with the largest number of documents. Answer: SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1
"
What is the number of days that had an average humity above 50 and an average visibility above 8?,SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8,"Input: What is the number of days that had an average humity above 50 and an average visibility above 8? Answer: SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8
"
"List the number of invoices from Chicago, IL.","SELECT COUNT(*) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL""","Input: List the number of invoices from Chicago, IL. Answer: SELECT COUNT(*) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL""
"
"Display the first name, and department number for all employees whose last name is ""McEwen"".","SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'","Input: Display the first name, and department number for all employees whose last name is ""McEwen"". Answer: SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'
"
How many trips stated from  a station in Mountain View and ended at one in Palo Alto?,"SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  ""Mountain View"" AND T3.city  =  ""Palo Alto""","Input: How many trips stated from  a station in Mountain View and ended at one in Palo Alto? Answer: SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  ""Mountain View"" AND T3.city  =  ""Palo Alto""
"
What is the total number of people who could stay in the modern rooms in this inn?,SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern',"Input: What is the total number of people who could stay in the modern rooms in this inn? Answer: SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern'
"
How many different projects are there?,SELECT count(DISTINCT name) FROM projects,"Input: How many different projects are there? Answer: SELECT count(DISTINCT name) FROM projects
"
Find all the songs that do not have a lead vocal.,"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""lead""","Input: Find all the songs that do not have a lead vocal. Answer: SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""lead""
"
What is the label with the most albums?,SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1,"Input: What is the label with the most albums? Answer: SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1
"
"What are the ids of the problems that are from the product ""voluptatem"" and are reported after 1995?","SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""","Input: What are the ids of the problems that are from the product ""voluptatem"" and are reported after 1995? Answer: SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = ""voluptatem"" AND T1.date_problem_reported > ""1995""
"
What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?,SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100,"Input: What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there? Answer: SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100
"
Return the hosts of competitions for which the theme is not Aliens?,SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens',"Input: Return the hosts of competitions for which the theme is not Aliens? Answer: SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'
"
which gender got the highest average uncertain ratio.,SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1,"Input: which gender got the highest average uncertain ratio. Answer: SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1
"
Show the average age for male and female students.,"SELECT avg(age) ,  sex FROM Student GROUP BY sex","Input: Show the average age for male and female students. Answer: SELECT avg(age) ,  sex FROM Student GROUP BY sex
"
Which problem id and log id are assigned to the staff named Rylan Homenick?,"SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""","Input: Which problem id and log id are assigned to the staff named Rylan Homenick? Answer: SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = ""Rylan"" AND T1.staff_last_name = ""Homenick""
"
Find the states which do not have any employee in their record.,SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees),"Input: Find the states which do not have any employee in their record. Answer: SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)
"
return all columns of the albums created in the year of 2012.,SELECT * FROM Albums WHERE YEAR  =  2012,"Input: return all columns of the albums created in the year of 2012. Answer: SELECT * FROM Albums WHERE YEAR  =  2012
"
What are the names of the people who have no friends who are students?,SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student',"Input: What are the names of the people who have no friends who are students? Answer: SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'
"
What is the name of the youngest male?,SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' ),"Input: What is the name of the youngest male? Answer: SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )
"
What are the ids of stations that are located in San Francisco and have average bike availability above 10.,"SELECT id FROM station WHERE city  =  ""San Francisco"" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10","Input: What are the ids of stations that are located in San Francisco and have average bike availability above 10. Answer: SELECT id FROM station WHERE city  =  ""San Francisco"" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10
"
"What is the latitude, longitude, and city of the station from which the trip with smallest duration started?","SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1","Input: What is the latitude, longitude, and city of the station from which the trip with smallest duration started? Answer: SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1
"
Find the number of people whose age is greater than all engineers.,SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer'),"Input: Find the number of people whose age is greater than all engineers. Answer: SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')
"
What is the first name of the band mate who perfomed in the most songs?,SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1,"Input: What is the first name of the band mate who perfomed in the most songs? Answer: SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1
"
Show the number of documents with document type code CV or BK.,"SELECT count(*) FROM All_documents WHERE document_type_code  =  ""CV"" OR document_type_code  =  ""BK""","Input: Show the number of documents with document type code CV or BK. Answer: SELECT count(*) FROM All_documents WHERE document_type_code  =  ""CV"" OR document_type_code  =  ""BK""
"
"How many instruments does the song ""Badlands"" use?","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""","Input: How many instruments does the song ""Badlands"" use? Answer: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Badlands""
"
"Find the name, checking balance and saving balance of all accounts in the bank.","SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid","Input: Find the name, checking balance and saving balance of all accounts in the bank. Answer: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid
"
What is the oldest log id and its corresponding problem id?,"SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1","Input: What is the oldest log id and its corresponding problem id? Answer: SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1
"
Return the dates of ceremony and the results of all music festivals,"SELECT Date_of_ceremony ,  RESULT FROM music_festival","Input: Return the dates of ceremony and the results of all music festivals Answer: SELECT Date_of_ceremony ,  RESULT FROM music_festival
"
Which city has the highest temperature in February?,SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1,"Input: Which city has the highest temperature in February? Answer: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1
"
What is the email and phone number of Astrid Gruber the customer?,"SELECT email ,  phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber""","Input: What is the email and phone number of Astrid Gruber the customer? Answer: SELECT email ,  phone FROM customers WHERE first_name = ""Astrid"" AND last_name = ""Gruber""
"
What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?,"SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80","Input: What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature? Answer: SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80
"
List name of all tracks in Balls to the Wall.,"SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall""","Input: List name of all tracks in Balls to the Wall. Answer: SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = ""Balls to the Wall""
"
Find the name of accounts whose checking balance is higher than corresponding saving balance.,SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance,"Input: Find the name of accounts whose checking balance is higher than corresponding saving balance. Answer: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance
"
What are the names of customers with checking balances lower than the average checking balance?,SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking),"Input: What are the names of customers with checking balances lower than the average checking balance? Answer: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)
"
"Return the name, rate, check in and check out date for the room with the highest rate.","SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1","Input: Return the name, rate, check in and check out date for the room with the highest rate. Answer: SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1
"
What are the low and high estimates of film markets?,"SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation","Input: What are the low and high estimates of film markets? Answer: SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation
"
Find the student first and last names and grade points of all enrollments.,"SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID","Input: Find the student first and last names and grade points of all enrollments. Answer: SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID
"
Show the id of each employee and the number of document destruction authorised by that employee.,"SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID","Input: Show the id of each employee and the number of document destruction authorised by that employee. Answer: SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID
"
How many companies are there?,SELECT count(*) FROM Companies,"Input: How many companies are there? Answer: SELECT count(*) FROM Companies
"
list all female (sex is F) candidate names in the alphabetical order.,SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name,"Input: list all female (sex is F) candidate names in the alphabetical order. Answer: SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name
"
"Find the number of vocal types used in song ""Demon Kitty Rag""?","SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Demon Kitty Rag""","Input: Find the number of vocal types used in song ""Demon Kitty Rag""? Answer: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Demon Kitty Rag""
"
"What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?","SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')","Input: What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name? Answer: SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')
"
What are the ids of the trips that lasted the longest and how long did they last?,"SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3","Input: What are the ids of the trips that lasted the longest and how long did they last? Answer: SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3
"
What is the last name of the musicians who has played back position the most?,"SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1","Input: What is the last name of the musicians who has played back position the most? Answer: SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  ""back"" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1
"
What are the songs in volumes with more than 1 week on top?,SELECT Song FROM volume WHERE Weeks_on_Top  >  1,"Input: What are the songs in volumes with more than 1 week on top? Answer: SELECT Song FROM volume WHERE Weeks_on_Top  >  1
"
What is the average number of working horses of farms with more than 5000 total number of horses?,SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000,"Input: What is the average number of working horses of farms with more than 5000 total number of horses? Answer: SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000
"
How many rooms have king beds? Report the number for each decor type.,"SELECT decor ,  count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor","Input: How many rooms have king beds? Report the number for each decor type. Answer: SELECT decor ,  count(*) FROM Rooms WHERE bedType = ""King"" GROUP BY decor
"
"What are the full names, departments, cities, and state provinces for each employee?","SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id","Input: What are the full names, departments, cities, and state provinces for each employee? Answer: SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id
"
Find the name and id of accounts whose checking balance is below the maximum checking balance.,"SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)","Input: Find the name and id of accounts whose checking balance is below the maximum checking balance. Answer: SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)
"
What information is there on albums from 2010?,SELECT * FROM Albums WHERE YEAR  =  2010,"Input: What information is there on albums from 2010? Answer: SELECT * FROM Albums WHERE YEAR  =  2010
"
What are the first and last names of the customers with the 10 cheapest invoices?,"SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10","Input: What are the first and last names of the customers with the 10 cheapest invoices? Answer: SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10
"
What are the first names of all students that are not enrolled in courses?,SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN),"Input: What are the first names of all students that are not enrolled in courses? Answer: SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)
"
display job title and average salary of employees.,"SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title","Input: display job title and average salary of employees. Answer: SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title
"
Find the name of account that has the lowest total checking and saving balance.,SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1,"Input: Find the name of account that has the lowest total checking and saving balance. Answer: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1
"
Who is the person that has no friend?,SELECT name FROM person EXCEPT SELECT name FROM PersonFriend,"Input: Who is the person that has no friend? Answer: SELECT name FROM person EXCEPT SELECT name FROM PersonFriend
"
What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?,SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103),"Input: What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103? Answer: SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)
"
"From the trip record, find the number of unique bikes.",SELECT count(DISTINCT bike_id) FROM trip,"Input: From the trip record, find the number of unique bikes. Answer: SELECT count(DISTINCT bike_id) FROM trip
"
"Find all the male members of club ""Hopkins Student Enterprises"". Show the first name and last name.","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t3.sex  =  ""M""","Input: Find all the male members of club ""Hopkins Student Enterprises"". Show the first name and last name. Answer: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t3.sex  =  ""M""
"
What is the average age for a male in each job?,"SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job","Input: What is the average age for a male in each job? Answer: SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job
"
Who has a friend that is from new york city?,SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city',"Input: Who has a friend that is from new york city? Answer: SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'
"
Find the average age of the students who have allergies with food and animal types.,"SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""animal"")","Input: Find the average age of the students who have allergies with food and animal types. Answer: SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""animal"")
"
What is all the information regarding employees with salaries above the minimum and under 2500?,SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500,"Input: What is all the information regarding employees with salaries above the minimum and under 2500? Answer: SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500
"
"Find the code of the document type ""Paper"".","SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  ""Paper""","Input: Find the code of the document type ""Paper"". Answer: SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  ""Paper""
"
How many rooms have a king bed?,"SELECT count(*) FROM Rooms WHERE bedType  =  ""King""","Input: How many rooms have a king bed? Answer: SELECT count(*) FROM Rooms WHERE bedType  =  ""King""
"
Find the name of the first 5 customers.,SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5,"Input: Find the name of the first 5 customers. Answer: SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5
"
Which cities have lower temperature in March than in Dec and have never served as host cities?,SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city,"Input: Which cities have lower temperature in March than in Dec and have never served as host cities? Answer: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city
"
"For the problem with id 10, return the ids and dates of its problem logs.","SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10","Input: For the problem with id 10, return the ids and dates of its problem logs. Answer: SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10
"
What are the average profits of companies?,SELECT avg(Profits_billion) FROM Companies,"Input: What are the average profits of companies? Answer: SELECT avg(Profits_billion) FROM Companies
"
Who are the friends of Bob?,SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob',"Input: Who are the friends of Bob? Answer: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'
"
What are the main industries of the companies without gas stations and what are the companies?,"SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)","Input: What are the main industries of the companies without gas stations and what are the companies? Answer: SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)
"
What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?,SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport',"Input: What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'? Answer: SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'
"
"What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?","SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000","Input: What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000? Answer: SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000
"
Find the number of matches in different competitions.,"SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition","Input: Find the number of matches in different competitions. Answer: SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition
"
"What are the days that had the smallest temperature range, and what was that range?","SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1","Input: What are the days that had the smallest temperature range, and what was that range? Answer: SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1
"
Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.,SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,"Input: Which employees have either destroyed a document or made an authorization to do so? Return their employee ids. Answer: SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
"
Show the statement id and the statement detail for the statement with most number of accounts.,"SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1","Input: Show the statement id and the statement detail for the statement with most number of accounts. Answer: SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1
"
Find the name of persons who are friends with Alice for the shortest years.,SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice'),"Input: Find the name of persons who are friends with Alice for the shortest years. Answer: SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')
"
What is the checking balance of the account whose owner’s name contains the substring ‘ee’?,SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%',"Input: What is the checking balance of the account whose owner’s name contains the substring ‘ee’? Answer: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'
"
How many albums does Billy Cobham has?,"SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham""","Input: How many albums does Billy Cobham has? Answer: SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Billy Cobham""
"
Which cities have served as host cities more than once? Return me their GDP and population.,"SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1","Input: Which cities have served as host cities more than once? Return me their GDP and population. Answer: SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1
"
How many unique labels are there for albums?,SELECT count(DISTINCT label) FROM albums,"Input: How many unique labels are there for albums? Answer: SELECT count(DISTINCT label) FROM albums
"
Find the different first names and cities of the students who have allergy to milk or cat.,"SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  ""Milk"" OR T2.Allergy  =  ""Cat""","Input: Find the different first names and cities of the students who have allergy to milk or cat. Answer: SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  ""Milk"" OR T2.Allergy  =  ""Cat""
"
"For each station, find its latitude and the minimum duration of trips that ended at the station.","SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id","Input: For each station, find its latitude and the minimum duration of trips that ended at the station. Answer: SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id
"
Find the checking balance and saving balance in the Brown’s account.,"SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'","Input: Find the checking balance and saving balance in the Brown’s account. Answer: SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'
"
"Find the starting date and ending data in location for the document named ""Robin CV"".","SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Robin CV""","Input: Find the starting date and ending data in location for the document named ""Robin CV"". Answer: SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Robin CV""
"
Which skill is used in fixing the most number of faults? List the skill id and description.,"SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1","Input: Which skill is used in fixing the most number of faults? List the skill id and description. Answer: SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1
"
"Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?","SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate","Input: Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates? Answer: SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate
"
What is the the phone number of Nancy Edwards?,"SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""","Input: What is the the phone number of Nancy Edwards? Answer: SELECT phone FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""
"
"What is the average number of votes of representatives from party ""Republican""?","SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  ""Republican""","Input: What is the average number of votes of representatives from party ""Republican""? Answer: SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  ""Republican""
"
"What are the naems of all the projects, and how many scientists were assigned to each of them?","SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name","Input: What are the naems of all the projects, and how many scientists were assigned to each of them? Answer: SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name
"
"What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?","SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'","Input: What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009? Answer: SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'
"
Which friend of Zach has the longest-lasting friendship?,SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach'),"Input: Which friend of Zach has the longest-lasting friendship? Answer: SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')
"
What is the first and last name of the employee who reports to Nancy Edwards?,"SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards""","Input: What is the first and last name of the employee who reports to Nancy Edwards? Answer: SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = ""Nancy"" AND T1.last_name = ""Edwards""
"
Find the name of the candidates whose oppose percentage is the lowest for each sex.,"SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex","Input: Find the name of the candidates whose oppose percentage is the lowest for each sex. Answer: SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex
"
display the average salary of employees for each department who gets a commission percentage.,"SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id","Input: display the average salary of employees for each department who gets a commission percentage. Answer: SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != ""null"" GROUP BY department_id
"
display the ID for those employees who did two or more jobs in the past.,SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2,"Input: display the ID for those employees who did two or more jobs in the past. Answer: SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2
"
Which buildings have more than one company offices? Give me the building names.,SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1,"Input: Which buildings have more than one company offices? Give me the building names. Answer: SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1
"
display the country ID and number of cities for each country.,"SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id","Input: display the country ID and number of cities for each country. Answer: SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id
"
Which part fault requires the most number of skills to fix? List part id and name.,"SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1","Input: Which part fault requires the most number of skills to fix? List part id and name. Answer: SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1
"
Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.,SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200),"Input: Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200. Answer: SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)
"
"List the id, country, city and name of the airports ordered alphabetically by the name.","SELECT id ,  country ,  city ,  name FROM airport ORDER BY name","Input: List the id, country, city and name of the airports ordered alphabetically by the name. Answer: SELECT id ,  country ,  city ,  name FROM airport ORDER BY name
"
How many trips did not end in San Francisco?,"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != ""San Francisco""","Input: How many trips did not end in San Francisco? Answer: SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != ""San Francisco""
"
How long does track Fast As a Shark has?,"SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark""","Input: How long does track Fast As a Shark has? Answer: SELECT milliseconds FROM tracks WHERE name = ""Fast As a Shark""
"
"Find all the songs performed by artist with last name ""Heilo""","SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  ""Heilo""","Input: Find all the songs performed by artist with last name ""Heilo"" Answer: SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  ""Heilo""
"
Which events id does not have any participant with detail 'Kenyatta Kuhn'?,SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn',"Input: Which events id does not have any participant with detail 'Kenyatta Kuhn'? Answer: SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'
"
What are the full names of faculty members who are a part of department 520?,"SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520","Input: What are the full names of faculty members who are a part of department 520? Answer: SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520
"
On which day and in which zip code was the min dew point lower than any day in zip code 94107?,"SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)","Input: On which day and in which zip code was the min dew point lower than any day in zip code 94107? Answer: SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)
"
Find the ids and names of stations from which at least 200 trips started.,"SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200","Input: Find the ids and names of stations from which at least 200 trips started. Answer: SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200
"
What are the id of each employee and the number of document destroyed by that employee?,"SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID","Input: What are the id of each employee and the number of document destroyed by that employee? Answer: SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID
"
Which claim processing stage has the most claims? Show the claim status name.,SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1,"Input: Which claim processing stage has the most claims? Show the claim status name. Answer: SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1
"
Show the theme for exhibitions with both records of an attendance below 100 and above 500.,SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500,"Input: Show the theme for exhibitions with both records of an attendance below 100 and above 500. Answer: SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500
"
What are all the fault descriptions and the fault status of all the faults recoreded in the logs?,"SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id","Input: What are all the fault descriptions and the fault status of all the faults recoreded in the logs? Answer: SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id
"
What are the ages of all of Zach's friends who are in the longest relationship?,SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach'),"Input: What are the ages of all of Zach's friends who are in the longest relationship? Answer: SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')
"
Find the checking balance of the accounts whose savings balance is higher than the average savings balance.,SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings)),"Input: Find the checking balance of the accounts whose savings balance is higher than the average savings balance. Answer: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))
"
What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?,"SELECT Studio FROM film WHERE Director  =  ""Nicholas Meyer"" INTERSECT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""","Input: What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill? Answer: SELECT Studio FROM film WHERE Director  =  ""Nicholas Meyer"" INTERSECT SELECT Studio FROM film WHERE Director  =  ""Walter Hill""
"
Which building has the largest number of company offices? Give me the building name.,SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which building has the largest number of company offices? Give me the building name. Answer: SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1
"
How many assets can each parts be used in? List the part name and the number.,"SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name","Input: How many assets can each parts be used in? List the part name and the number. Answer: SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name
"
What is the maximum and minimum grade point of students who live in NYC?,"SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""","Input: What is the maximum and minimum grade point of students who live in NYC? Answer: SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  ""NYC""
"
Find the number of distinct stages in claim processing.,SELECT count(*) FROM claims_processing_stages,"Input: Find the number of distinct stages in claim processing. Answer: SELECT count(*) FROM claims_processing_stages
"
List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.,SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security',"Input: List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born. Answer: SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'
"
Give me the start station and end station for the trips with the three oldest id.,"SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3","Input: Give me the start station and end station for the trips with the three oldest id. Answer: SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3
"
"How many vocal types are used in the song ""Le Pop""?","SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""","Input: How many vocal types are used in the song ""Le Pop""? Answer: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""
"
List the authors who do not have submission to any workshop.,SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance),"Input: List the authors who do not have submission to any workshop. Answer: SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)
"
In which country does Roberto Almeida?,"SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida""","Input: In which country does Roberto Almeida? Answer: SELECT country FROM customers WHERE first_name = ""Roberto"" AND last_name = ""Almeida""
"
"What are the names of customers with accounts, and what are the total savings balances for each?","SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name","Input: What are the names of customers with accounts, and what are the total savings balances for each? Answer: SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name
"
Who are the friends of Alice that are doctors?,SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor',"Input: Who are the friends of Alice that are doctors? Answer: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'
"
What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?,"SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop"" AND T2.staff_last_name = ""Berge"" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Ashley"" AND T2.staff_last_name = ""Medhurst""","Input: What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst? Answer: SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop"" AND T2.staff_last_name = ""Berge"" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Ashley"" AND T2.staff_last_name = ""Medhurst""
"
Show the details of all trucks in the order of their license number.,SELECT truck_details FROM trucks ORDER BY truck_licence_number,"Input: Show the details of all trucks in the order of their license number. Answer: SELECT truck_details FROM trucks ORDER BY truck_licence_number
"
"Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.","SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate","Input: Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate. Answer: SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate
"
Return names of songs in volumes that are by artists that are at least 32 years old.,SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32,"Input: Return names of songs in volumes that are by artists that are at least 32 years old. Answer: SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32
"
"For each city, list their names in decreasing order by their highest station latitude.",SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC,"Input: For each city, list their names in decreasing order by their highest station latitude. Answer: SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC
"
How many friends does Dan have?,SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan',"Input: How many friends does Dan have? Answer: SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'
"
"For each product which has problems, what are the number of problems and the product id?","SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id","Input: For each product which has problems, what are the number of problems and the product id? Answer: SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id
"
Which service id and type has the least number of participants?,"SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1","Input: Which service id and type has the least number of participants? Answer: SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1
"
What are the maximum and minumum grade points?,"SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION","Input: What are the maximum and minumum grade points? Answer: SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION
"
"Display the first and last name, and salary for those employees whose first name is ending with the letter m.","SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'","Input: Display the first and last name, and salary for those employees whose first name is ending with the letter m. Answer: SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'
"
Show all artist names and the number of exhibitions for each artist.,"SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id","Input: Show all artist names and the number of exhibitions for each artist. Answer: SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id
"
How many orders does Luca Mancini have in his invoices?,"SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini""","Input: How many orders does Luca Mancini have in his invoices? Answer: SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini""
"
"Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.",SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings),"Input: Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance. Answer: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)
"
On what dates were employees without the letter M in their first names hired?,SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%',"Input: On what dates were employees without the letter M in their first names hired? Answer: SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
"
"For each player, show the team and the location of school they belong to.","SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID","Input: For each player, show the team and the location of school they belong to. Answer: SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID
"
"Count the members of the club ""Tennis Club"".","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""","Input: Count the members of the club ""Tennis Club"". Answer: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Tennis Club""
"
What is all the job history info done by employees earning a salary greater than or equal to 12000?,SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000,"Input: What is all the job history info done by employees earning a salary greater than or equal to 12000? Answer: SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000
"
What are the course names for courses taught on MTW?,"SELECT CName FROM COURSE WHERE Days  =  ""MTW""","Input: What are the course names for courses taught on MTW? Answer: SELECT CName FROM COURSE WHERE Days  =  ""MTW""
"
Count the total number of clubs.,SELECT count(*) FROM club,"Input: Count the total number of clubs. Answer: SELECT count(*) FROM club
"
"Show the location name for document ""Robin CV"".","SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  ""Robin CV""","Input: Show the location name for document ""Robin CV"". Answer: SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  ""Robin CV""
"
How many females are in the network?,SELECT count(*) FROM Person WHERE gender  =  'female',"Input: How many females are in the network? Answer: SELECT count(*) FROM Person WHERE gender  =  'female'
"
"Find all the female members of club ""Bootup Baltimore"". Show the first name and last name.","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""","Input: Find all the female members of club ""Bootup Baltimore"". Show the first name and last name. Answer: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.sex  =  ""F""
"
Count the number of courses with more than 2 credits.,SELECT count(*) FROM COURSE WHERE Credits  >  2,"Input: Count the number of courses with more than 2 credits. Answer: SELECT count(*) FROM COURSE WHERE Credits  >  2
"
How many assets does each third party company supply? List the count and the company id.,"SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id","Input: How many assets does each third party company supply? List the count and the company id. Answer: SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id
"
What are the names of customers who do not have any policies?,SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id,"Input: What are the names of customers who do not have any policies? Answer: SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id
"
How many animal type allergies exist?,"SELECT count(*) FROM Allergy_type WHERE allergytype  =  ""animal""","Input: How many animal type allergies exist? Answer: SELECT count(*) FROM Allergy_type WHERE allergytype  =  ""animal""
"
List the company name and rank for all companies in the decreasing order of their sales.,"SELECT company ,  rank FROM company ORDER BY Sales_billion DESC","Input: List the company name and rank for all companies in the decreasing order of their sales. Answer: SELECT company ,  rank FROM company ORDER BY Sales_billion DESC
"
What is the name and sex of the candidate with the highest support rate?,"SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1","Input: What is the name and sex of the candidate with the highest support rate? Answer: SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1
"
"Which vocal type did the musician with last name ""Heilo"" played in the song with title ""Der Kapitan""?","SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  ""Heilo"" AND T2.title  =  ""Der Kapitan""","Input: Which vocal type did the musician with last name ""Heilo"" played in the song with title ""Der Kapitan""? Answer: SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  ""Heilo"" AND T2.title  =  ""Der Kapitan""
"
What are the different main industries for all companies?,SELECT DISTINCT main_industry FROM company,"Input: What are the different main industries for all companies? Answer: SELECT DISTINCT main_industry FROM company
"
What are the different album labels listed?,SELECT DISTINCT label FROM Albums,"Input: What are the different album labels listed? Answer: SELECT DISTINCT label FROM Albums
"
Provide the full names of employees earning more than the employee with id 163.,"SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )","Input: Provide the full names of employees earning more than the employee with id 163. Answer: SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )
"
Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.,"SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)","Input: Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments. Answer: SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)
"
"Find the name of all the clubs at ""AKW"".","SELECT clubname FROM club WHERE clublocation  =  ""AKW""","Input: Find the name of all the clubs at ""AKW"". Answer: SELECT clubname FROM club WHERE clublocation  =  ""AKW""
"
"Find all members of ""Bootup Baltimore"" whose major is ""600"". Show the first name and last name.","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.major  =  ""600""","Input: Find all members of ""Bootup Baltimore"" whose major is ""600"". Show the first name and last name. Answer: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.major  =  ""600""
"
Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.,SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10,"Input: Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10. Answer: SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10
"
What are the room name and base price of the room with the lowest base price?,"SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1","Input: What are the room name and base price of the room with the lowest base price? Answer: SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1
"
What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.,"SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5","Input: What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate. Answer: SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5
"
What is the mean longitude for all stations that have never had more than 10 bikes available?,SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10),"Input: What is the mean longitude for all stations that have never had more than 10 bikes available? Answer: SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)
"
"For each trip, return its ending station's installation date.","SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id","Input: For each trip, return its ending station's installation date. Answer: SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id
"
What is the name and country for the artist with most number of exhibitions?,"SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1","Input: What is the name and country for the artist with most number of exhibitions? Answer: SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1
"
What are the ages of all music artists?,SELECT Age FROM artist,"Input: What are the ages of all music artists? Answer: SELECT Age FROM artist
"
What are the three largest cities in terms of regional population?,SELECT city FROM city ORDER BY regional_population DESC LIMIT 3,"Input: What are the three largest cities in terms of regional population? Answer: SELECT city FROM city ORDER BY regional_population DESC LIMIT 3
"
What are the dates in which the mean sea level pressure was between 30.3 and 31?,SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31,"Input: What are the dates in which the mean sea level pressure was between 30.3 and 31? Answer: SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31
"
What are the names and headquarters of all companies ordered by descending market value?,"SELECT company ,  headquarters FROM company ORDER BY market_value DESC","Input: What are the names and headquarters of all companies ordered by descending market value? Answer: SELECT company ,  headquarters FROM company ORDER BY market_value DESC
"
"Where is the club ""Pen and Paper Gaming"" located?","SELECT clublocation FROM club WHERE clubname  =  ""Pen and Paper Gaming""","Input: Where is the club ""Pen and Paper Gaming"" located? Answer: SELECT clublocation FROM club WHERE clubname  =  ""Pen and Paper Gaming""
"
What is Nancy Edwards's address?,"SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""","Input: What is Nancy Edwards's address? Answer: SELECT address FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""
"
"Find the names of the buildings in ""on-hold"" status, and sort them in ascending order of building stories.","SELECT name FROM buildings WHERE Status  =  ""on-hold"" ORDER BY Stories ASC","Input: Find the names of the buildings in ""on-hold"" status, and sort them in ascending order of building stories. Answer: SELECT name FROM buildings WHERE Status  =  ""on-hold"" ORDER BY Stories ASC
"
"How many songs have used the instrument ""drums""?","SELECT count(*) FROM instruments WHERE instrument  =  ""drums""","Input: How many songs have used the instrument ""drums""? Answer: SELECT count(*) FROM instruments WHERE instrument  =  ""drums""
"
How many submissions are there?,SELECT count(*) FROM submission,"Input: How many submissions are there? Answer: SELECT count(*) FROM submission
"
"How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?","SELECT Adults FROM Reservations WHERE CheckIn  =  ""2010-10-23"" AND FirstName  =  ""CONRAD"" AND LastName  =  ""SELBIG""","Input: How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010? Answer: SELECT Adults FROM Reservations WHERE CheckIn  =  ""2010-10-23"" AND FirstName  =  ""CONRAD"" AND LastName  =  ""SELBIG""
"
"Find the first name and last name for the ""CTO"" of the club ""Hopkins Student Enterprises""?","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""","Input: Find the first name and last name for the ""CTO"" of the club ""Hopkins Student Enterprises""? Answer: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Hopkins Student Enterprises"" AND t2.position  =  ""CTO""
"
What are the ids and details of all statements?,"SELECT STATEMENT_ID ,  statement_details FROM Statements","Input: What are the ids and details of all statements? Answer: SELECT STATEMENT_ID ,  statement_details FROM Statements
"
Which kind of part has the least number of faults? List the part name.,SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1,"Input: Which kind of part has the least number of faults? List the part name. Answer: SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1
"
What are the last names and ages of the students who are allergic to milk and cat?,"SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Cat"")","Input: What are the last names and ages of the students who are allergic to milk and cat? Answer: SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Milk"" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Cat"")
"
"How many musicians play in the song ""Flash""?","SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  ""Flash""","Input: How many musicians play in the song ""Flash""? Answer: SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  ""Flash""
"
What are the ids of all the employees who have destroyed documents?,SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed,"Input: What are the ids of all the employees who have destroyed documents? Answer: SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
"
Show the denomination shared by more than one school.,SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1,"Input: Show the denomination shared by more than one school. Answer: SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1
"
Find the number of scientists involved for the projects that require more than 300 hours.,"SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name","Input: Find the number of scientists involved for the projects that require more than 300 hours. Answer: SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name
"
"List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name.","SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name","Input: List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name. Answer: SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name
"
What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance?,"SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)","Input: What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance? Answer: SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)
"
What is the zip code in which the average mean sea level pressure is the lowest?,SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1,"Input: What is the zip code in which the average mean sea level pressure is the lowest? Answer: SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1
"
How many students who are female are allergic to milk or eggs?,"SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  ""F"" AND T1.allergy  =  ""Milk"" OR T1.allergy  =  ""Eggs""","Input: How many students who are female are allergic to milk or eggs? Answer: SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  ""F"" AND T1.allergy  =  ""Milk"" OR T1.allergy  =  ""Eggs""
"
How many roles are there?,SELECT count(*) FROM ROLES,"Input: How many roles are there? Answer: SELECT count(*) FROM ROLES
"
"What are each document's location code, and starting date and ending data in that location?","SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations","Input: What are each document's location code, and starting date and ending data in that location? Answer: SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations
"
"What instruments did the musician with the last name ""Heilo"" play in the song ""Le Pop""?","SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""","Input: What instruments did the musician with the last name ""Heilo"" play in the song ""Le Pop""? Answer: SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Le Pop""
"
Find the names of departments that are either in division AS or in division EN and in Building NEB.,"SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""","Input: Find the names of departments that are either in division AS or in division EN and in Building NEB. Answer: SELECT DName FROM DEPARTMENT WHERE Division  =  ""AS"" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  ""EN"" AND Building  =  ""NEB""
"
How many customers does Steve Johnson support?,"SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson""","Input: How many customers does Steve Johnson support? Answer: SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = ""Steve"" AND T1.last_name = ""Johnson""
"
Find the name of the customer that has been involved in the most policies.,SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1,"Input: Find the name of the customer that has been involved in the most policies. Answer: SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1
"
Find the number of songs in all the studio albums.,"SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  ""Studio""","Input: Find the number of songs in all the studio albums. Answer: SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  ""Studio""
"
What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?,SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7,"Input: What are the ids of stations that have latitude above 37.4 and never had bike availability below 7? Answer: SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7
"
display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.,"SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id","Input: display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working. Answer: SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id
"
"Return the decor of the room named ""Recluse and defiance"".","SELECT decor FROM Rooms WHERE roomName  =  ""Recluse and defiance""","Input: Return the decor of the room named ""Recluse and defiance"". Answer: SELECT decor FROM Rooms WHERE roomName  =  ""Recluse and defiance""
"
What are the ids of documents with the type code CV that do not have expenses.,"SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses","Input: What are the ids of documents with the type code CV that do not have expenses. Answer: SELECT document_id FROM Documents WHERE document_type_code  =  ""CV"" EXCEPT SELECT document_id FROM Documents_with_expenses
"
What is the denomination of the school the most players belong to?,SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is the denomination of the school the most players belong to? Answer: SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1
"
How many statements do we have?,SELECT count(*) FROM Statements,"Input: How many statements do we have? Answer: SELECT count(*) FROM Statements
"
"What is the name of the project that requires the fewest number of hours, and the names of the scientists assigned to it?","SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)","Input: What is the name of the project that requires the fewest number of hours, and the names of the scientists assigned to it? Answer: SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)
"
"What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?","SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3","Input: What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds? Answer: SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3
"
What is the list of distinct product names sorted by product id?,SELECT DISTINCT product_name FROM product ORDER BY product_id,"Input: What is the list of distinct product names sorted by product id? Answer: SELECT DISTINCT product_name FROM product ORDER BY product_id
"
Count the number of artists who have had volumes.,SELECT COUNT(DISTINCT Artist_ID) FROM volume,"Input: Count the number of artists who have had volumes. Answer: SELECT COUNT(DISTINCT Artist_ID) FROM volume
"
What is the budget type code with most number of documents.,SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1,"Input: What is the budget type code with most number of documents. Answer: SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1
"
What are the venues of all the matches? Sort them in the descending order of match date.,SELECT venue FROM MATCH ORDER BY date DESC,"Input: What are the venues of all the matches? Sort them in the descending order of match date. Answer: SELECT venue FROM MATCH ORDER BY date DESC
"
What is the average latitude and longitude of the starting points of all trips?,"SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id","Input: What is the average latitude and longitude of the starting points of all trips? Answer: SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id
"
"For each city, return the highest latitude among its stations.","SELECT city ,  max(lat) FROM station GROUP BY city","Input: For each city, return the highest latitude among its stations. Answer: SELECT city ,  max(lat) FROM station GROUP BY city
"
get the details of employees who manage a department.,SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id,"Input: get the details of employees who manage a department. Answer: SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id
"
What are all the different zip codes that have a maximum dew point that was always below 70?,SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70,"Input: What are all the different zip codes that have a maximum dew point that was always below 70? Answer: SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70
"
Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.,"SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY""","Input: Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ. Answer: SELECT kids FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY""
"
What is the id of the trip that started from the station with the highest dock count?,SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1,"Input: What is the id of the trip that started from the station with the highest dock count? Answer: SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1
"
How many exhibition are there in year 2005 or after?,SELECT count(*) FROM exhibition WHERE YEAR  >=  2005,"Input: How many exhibition are there in year 2005 or after? Answer: SELECT count(*) FROM exhibition WHERE YEAR  >=  2005
"
"What instrument did the musician with last name ""Heilo"" use in the song ""Badlands""?","SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Badlands""","Input: What instrument did the musician with last name ""Heilo"" use in the song ""Badlands""? Answer: SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo"" AND T3.title  =  ""Badlands""
"
What is the total checking balance in all accounts?,SELECT sum(balance) FROM checking,"Input: What is the total checking balance in all accounts? Answer: SELECT sum(balance) FROM checking
"
"display the department name, city, and state province for each department.","SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id","Input: display the department name, city, and state province for each department. Answer: SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id
"
What are the names of stations that have latitude lower than 37.5?,SELECT name FROM station WHERE lat  <  37.5,"Input: What are the names of stations that have latitude lower than 37.5? Answer: SELECT name FROM station WHERE lat  <  37.5
"
How many students are affected by cat allergies?,"SELECT count(*) FROM Has_allergy WHERE Allergy  =  ""Cat""","Input: How many students are affected by cat allergies? Answer: SELECT count(*) FROM Has_allergy WHERE Allergy  =  ""Cat""
"
Find the name of scientists who are assigned to some project.,SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn,"Input: Find the name of scientists who are assigned to some project. Answer: SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn
"
Show the denomination shared by schools founded before 1890 and schools founded after 1900,SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900,"Input: Show the denomination shared by schools founded before 1890 and schools founded after 1900 Answer: SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900
"
What is the minimum salary in each department?,"SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id","Input: What is the minimum salary in each department? Answer: SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id
"
What are the dates for the documents with both 'GV' type and 'SF' type expenses?,SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF',"Input: What are the dates for the documents with both 'GV' type and 'SF' type expenses? Answer: SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'
"
Please show the date of ceremony of the volumes that last more than 2 weeks on top.,SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2,"Input: Please show the date of ceremony of the volumes that last more than 2 weeks on top. Answer: SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2
"
Give the names of the courses with at least five enrollments.,SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5,"Input: Give the names of the courses with at least five enrollments. Answer: SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5
"
Show the student id of the oldest student.,SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student),"Input: Show the student id of the oldest student. Answer: SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)
"
What are the names of rooms whose reservation frequency exceeds 60 times?,SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60,"Input: What are the names of rooms whose reservation frequency exceeds 60 times? Answer: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60
"
How many calendar items do we have?,SELECT count(*) FROM Ref_calendar,"Input: How many calendar items do we have? Answer: SELECT count(*) FROM Ref_calendar
"
Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.,"SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2","Input: Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail. Answer: SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2
"
"What is the match id of the competition called ""1994 FIFA World Cup qualification""?","SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""","Input: What is the match id of the competition called ""1994 FIFA World Cup qualification""? Answer: SELECT match_id FROM MATCH WHERE competition = ""1994 FIFA World Cup qualification""
"
What is the name and checking balance of the account which has the lowest savings balance?,"SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1","Input: What is the name and checking balance of the account which has the lowest savings balance? Answer: SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1
"
How many documents are with document type code BK for each product id?,"SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id","Input: How many documents are with document type code BK for each product id? Answer: SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  ""BK"" GROUP BY project_id
"
Find the ids of the departments where any manager is managing 4 or more employees.,"SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4","Input: Find the ids of the departments where any manager is managing 4 or more employees. Answer: SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4
"
Count the number of trips that did not end in San Francisco city.,"SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  ""San Francisco""","Input: Count the number of trips that did not end in San Francisco city. Answer: SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  ""San Francisco""
"
"What is the number of departments in Division ""AS""?","SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""","Input: What is the number of departments in Division ""AS""? Answer: SELECT count(*) FROM DEPARTMENT WHERE Division  =  ""AS""
"
Which customer made the smallest amount of claim in one claim? Return the customer details.,SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers),"Input: Which customer made the smallest amount of claim in one claim? Return the customer details. Answer: SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)
"
What is the first name and job id for all employees in the Finance department?,"SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'","Input: What is the first name and job id for all employees in the Finance department? Answer: SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'
"
Find the distinct student first names of all students that have grade point at least 3.8 in one course.,SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8,"Input: Find the distinct student first names of all students that have grade point at least 3.8 in one course. Answer: SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8
"
Which city has the lowest GDP? Please list the city name and its GDP.,"SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1","Input: Which city has the lowest GDP? Please list the city name and its GDP. Answer: SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1
"
"Find the name, age, and job title of persons who are friends with Alice for the longest years.","SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')","Input: Find the name, age, and job title of persons who are friends with Alice for the longest years. Answer: SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')
"
"What are the names of the scientists, and how many projects are each of them working on?","SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name","Input: What are the names of the scientists, and how many projects are each of them working on? Answer: SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name
"
What are the phones of departments in Room 268?,SELECT DPhone FROM DEPARTMENT WHERE Room  =  268,"Input: What are the phones of departments in Room 268? Answer: SELECT DPhone FROM DEPARTMENT WHERE Room  =  268
"
"What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?","SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'","Input: What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents? Answer: SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'
"
Which of the mill names contains the french word 'Moulin'?,SELECT name FROM mill WHERE name LIKE '%Moulin%',"Input: Which of the mill names contains the french word 'Moulin'? Answer: SELECT name FROM mill WHERE name LIKE '%Moulin%'
"
Give the name of each department and the number of employees in each.,"SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name","Input: Give the name of each department and the number of employees in each. Answer: SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name
"
"How many different instruments does the musician with the last name ""Heilo"" use?","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""","Input: How many different instruments does the musician with the last name ""Heilo"" use? Answer: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  ""Heilo""
"
Which staff have contacted which engineers? List the staff name and the engineer first name and last name.,"SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id","Input: Which staff have contacted which engineers? List the staff name and the engineer first name and last name. Answer: SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id
"
"display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.","SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id","Input: display the department ID, full name (first and last name), salary for those employees who is highest salary in every department. Answer: SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id
"
"What are the first and last names of the artist who perfomed the song ""Badlands""?","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""","Input: What are the first and last names of the artist who perfomed the song ""Badlands""? Answer: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands""
"
"display those employees who joined after 7th September, 1987.",SELECT * FROM employees WHERE hire_date  >  '1987-09-07',"Input: display those employees who joined after 7th September, 1987. Answer: SELECT * FROM employees WHERE hire_date  >  '1987-09-07'
"
How many students have a food allergy?,"SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  ""food""","Input: How many students have a food allergy? Answer: SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  ""food""
"
Find the number of bands.,SELECT count(*) FROM Band,"Input: Find the number of bands. Answer: SELECT count(*) FROM Band
"
What is the total number of people who has no friend living in the city of Austin.,SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin'),"Input: What is the total number of people who has no friend living in the city of Austin. Answer: SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')
"
What are the famous title of the artists associated with volumes with more than 2 weeks on top?,SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2,"Input: What are the famous title of the artists associated with volumes with more than 2 weeks on top? Answer: SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2
"
Show the nicknames of schools that are not in division 1.,"SELECT Nickname FROM school_details WHERE Division != ""Division 1""","Input: Show the nicknames of schools that are not in division 1. Answer: SELECT Nickname FROM school_details WHERE Division != ""Division 1""
"
What are the id and name of the stations that have ever had more than 12 bikes available?,"SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12","Input: What are the id and name of the stations that have ever had more than 12 bikes available? Answer: SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12
"
display those departments where more than ten employees work who got a commission percentage.,SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10,"Input: display those departments where more than ten employees work who got a commission percentage. Answer: SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10
"
What are the names of artists who did not have an exhibition in 2004?,SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004,"Input: What are the names of artists who did not have an exhibition in 2004? Answer: SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004
"
What are all the different start station names for a trip that lasted less than 100?,SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100,"Input: What are all the different start station names for a trip that lasted less than 100? Answer: SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100
"
What are the ids of all the employees who authorize document destruction?,SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,"Input: What are the ids of all the employees who authorize document destruction? Answer: SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
"
List the name of a building along with the name of a company whose office is in the building.,"SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id","Input: List the name of a building along with the name of a company whose office is in the building. Answer: SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id
"
Find the name and price of the product that has been ordered the greatest number of times.,"SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1","Input: Find the name and price of the product that has been ordered the greatest number of times. Answer: SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1
"
What is the full name of the employee who has the most customers?,"SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Input: What is the full name of the employee who has the most customers? Answer: SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
"
"What is the composer who created the track ""Fast As a Shark""?","SELECT composer FROM tracks WHERE name = ""Fast As a Shark""","Input: What is the composer who created the track ""Fast As a Shark""? Answer: SELECT composer FROM tracks WHERE name = ""Fast As a Shark""
"
What are the issue dates of volumes associated with the artist aged 23 or younger?,SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23,"Input: What are the issue dates of volumes associated with the artist aged 23 or younger? Answer: SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23
"
display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.,"SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )","Input: display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’. Answer: SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )
"
What is all the information about all people?,SELECT * FROM people,"Input: What is all the information about all people? Answer: SELECT * FROM people
"
What are all the employees without a department number?,"SELECT * FROM employees WHERE department_id  =  ""null""","Input: What are all the employees without a department number? Answer: SELECT * FROM employees WHERE department_id  =  ""null""
"
Find the saving balance of the account with the highest checking balance.,SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1,"Input: Find the saving balance of the account with the highest checking balance. Answer: SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1
"
"What are the first and last name of the president of the club ""Bootup Baltimore""?","SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""","Input: What are the first and last name of the president of the club ""Bootup Baltimore""? Answer: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t2.position  =  ""President""
"
In which year did the most recent crime happen?,SELECT max(YEAR) FROM perpetrator,"Input: In which year did the most recent crime happen? Answer: SELECT max(YEAR) FROM perpetrator
"
"Which catalog publishers have substring ""Murray"" in their names?","SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""","Input: Which catalog publishers have substring ""Murray"" in their names? Answer: SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE ""%Murray%""
"
What are the names of all cities and states?,SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses,"Input: What are the names of all cities and states? Answer: SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses
"
What is the highest acc percent score in the competition?,SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1,"Input: What is the highest acc percent score in the competition? Answer: SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1
"
What are the countries for appelations with at most 3 wines?,SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3,"Input: What are the countries for appelations with at most 3 wines? Answer: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3
"
Which publishers did not publish a book in 1989?,SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989,"Input: Which publishers did not publish a book in 1989? Answer: SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989
"
How many residents does each property have? List property id and resident count.,"SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id","Input: How many residents does each property have? List property id and resident count. Answer: SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id
"
Count the number of climbers.,SELECT count(*) FROM climber,"Input: Count the number of climbers. Answer: SELECT count(*) FROM climber
"
"Show the season, the player, and the name of the team that players belong to.","SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id","Input: Show the season, the player, and the name of the team that players belong to. Answer: SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id
"
What is the total number of routes for each country and airline in that country?,"SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name","Input: What is the total number of routes for each country and airline in that country? Answer: SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name
"
How many events are there?,SELECT count(*) FROM event,"Input: How many events are there? Answer: SELECT count(*) FROM event
"
"What are the name, origin and owner of each program?","SELECT name ,  origin ,  OWNER FROM program","Input: What are the name, origin and owner of each program? Answer: SELECT name ,  origin ,  OWNER FROM program
"
Give the maximum price and score for wines produced in the appelation St. Helena.,"SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  ""St. Helena""","Input: Give the maximum price and score for wines produced in the appelation St. Helena. Answer: SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  ""St. Helena""
"
"Which catalog contents have a product stock number that starts from ""2""? Show the catalog entry names.","SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""","Input: Which catalog contents have a product stock number that starts from ""2""? Show the catalog entry names. Answer: SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE ""2%""
"
What is all the customer information for customers in NY state?,"SELECT * FROM CUSTOMER WHERE State  =  ""NY""","Input: What is all the customer information for customers in NY state? Answer: SELECT * FROM CUSTOMER WHERE State  =  ""NY""
"
Find all the customer last names that do not have invoice totals larger than 20.,SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20,"Input: Find all the customer last names that do not have invoice totals larger than 20. Answer: SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20
"
How many distinct locations have the things with service detail 'Unsatisfied' been located in?,SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied',"Input: How many distinct locations have the things with service detail 'Unsatisfied' been located in? Answer: SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'
"
What are the distinct names of nurses on call?,SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse,"Input: What are the distinct names of nurses on call? Answer: SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse
"
"What are the distinct reigns of wrestlers whose location is not ""Tokyo,Japan"" ?","SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""","Input: What are the distinct reigns of wrestlers whose location is not ""Tokyo,Japan"" ? Answer: SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != ""Tokyo , Japan""
"
Return the names of teams that have no match season record.,SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season),"Input: Return the names of teams that have no match season record. Answer: SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)
"
"For each product, return its id and the number of times it was ordered.","SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","Input: For each product, return its id and the number of times it was ordered. Answer: SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id
"
"Find the number of characteristics that the product ""flax"" has.","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""flax""","Input: Find the number of characteristics that the product ""flax"" has. Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""flax""
"
How many proteins are associated with an institution in a building with at least 20 floors?,SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20,"Input: How many proteins are associated with an institution in a building with at least 20 floors? Answer: SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20
"
Please list the name and id of all artists that have at least 3 albums in alphabetical order.,"SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name","Input: Please list the name and id of all artists that have at least 3 albums in alphabetical order. Answer: SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name
"
What is the id of the instructor who advises of all students from History department?,SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History',"Input: What is the id of the instructor who advises of all students from History department? Answer: SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'
"
Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.,"SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""","Input: Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians. Answer: SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  ""X""
"
What is the salaray and name of the employee that is certified to fly the most planes?,"SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1","Input: What is the salaray and name of the employee that is certified to fly the most planes? Answer: SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
"
What is the year and semester with the most courses?,"SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1","Input: What is the year and semester with the most courses? Answer: SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1
"
Count the number of courses without prerequisites.,SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq),"Input: Count the number of courses without prerequisites. Answer: SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)
"
How many regions do we have?,SELECT count(*) FROM region,"Input: How many regions do we have? Answer: SELECT count(*) FROM region
"
Count the number of different characteristic names the product 'cumin' has.,"SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""","Input: Count the number of different characteristic names the product 'cumin' has. Answer: SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame""
"
What is the name of the medication used for the patient staying in room 111?,SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111,"Input: What is the name of the medication used for the patient staying in room 111? Answer: SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111
"
Return the most common full name among all actors.,"SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1","Input: Return the most common full name among all actors. Answer: SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1
"
What are the maximum and minimum number of cows across all farms.,"SELECT max(Cows) ,  min(Cows) FROM farm","Input: What are the maximum and minimum number of cows across all farms. Answer: SELECT max(Cows) ,  min(Cows) FROM farm
"
What is the id of the student who most recently registered course 301?,SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1,"Input: What is the id of the student who most recently registered course 301? Answer: SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1
"
Count the number of stores the chain South has.,"SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  ""South""","Input: Count the number of stores the chain South has. Answer: SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  ""South""
"
What are each physician's employee id and department id primarily affiliated.,"SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1","Input: What are each physician's employee id and department id primarily affiliated. Answer: SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1
"
What is the id of the patient who stayed in room 111 most recently?,SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1,"Input: What is the id of the patient who stayed in room 111 most recently? Answer: SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1
"
Which department has the largest number of employees?,SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1,"Input: Which department has the largest number of employees? Answer: SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1
"
Which wineries produce at least four wines?,SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4,"Input: Which wineries produce at least four wines? Answer: SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4
"
Find the first and last name of students who are not in the largest major.,"SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)","Input: Find the first and last name of students who are not in the largest major. Answer: SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)
"
Find the first names of all customers that live in Brazil and have an invoice.,"SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Brazil""","Input: Find the first names of all customers that live in Brazil and have an invoice. Answer: SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Brazil""
"
Which catalog content has the smallest capacity? Return the catalog entry name.,SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1,"Input: Which catalog content has the smallest capacity? Return the catalog entry name. Answer: SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1
"
"What are card ids, customer ids, card types, and card numbers for each customer card?","SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards","Input: What are card ids, customer ids, card types, and card numbers for each customer card? Answer: SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards
"
What are the id and the amount of refund of the booking that incurred the most times of payments?,"SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1","Input: What are the id and the amount of refund of the booking that incurred the most times of payments? Answer: SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1
"
Return the address of store 1.,SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1,"Input: Return the address of store 1. Answer: SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1
"
Give me all the phone numbers and email addresses of the workshop groups where services are performed.,"SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID","Input: Give me all the phone numbers and email addresses of the workshop groups where services are performed. Answer: SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID
"
What are the card numbers of members from Kentucky?,"SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""","Input: What are the card numbers of members from Kentucky? Answer: SELECT card_number FROM member WHERE Hometown LIKE ""%Kentucky%""
"
How many products are there in the records?,SELECT count(*) FROM catalog_contents,"Input: How many products are there in the records? Answer: SELECT count(*) FROM catalog_contents
"
What is the first and last name of all the German drivers?,"SELECT forename ,  surname FROM drivers WHERE nationality = ""German""","Input: What is the first and last name of all the German drivers? Answer: SELECT forename ,  surname FROM drivers WHERE nationality = ""German""
"
What are the ids and names of department stores with both marketing and managing departments?,"SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  ""marketing"" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  ""managing""","Input: What are the ids and names of department stores with both marketing and managing departments? Answer: SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  ""marketing"" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  ""managing""
"
Find the average order quantity per order.,SELECT avg(order_quantity) FROM order_items,"Input: Find the average order quantity per order. Answer: SELECT avg(order_quantity) FROM order_items
"
What are the distinct ids of customers who made an order after any order that was Cancelled?,"SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  ""Cancelled"")","Input: What are the distinct ids of customers who made an order after any order that was Cancelled? Answer: SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  ""Cancelled"")
"
Find the name of each user and number of tweets tweeted by each of them.,"SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid","Input: Find the name of each user and number of tweets tweeted by each of them. Answer: SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid
"
Who is the delegate of district 1 in the elections?,SELECT Delegate FROM election WHERE District  =  1,"Input: Who is the delegate of district 1 in the elections? Answer: SELECT Delegate FROM election WHERE District  =  1
"
What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21',"SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'","Input: What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21' Answer: SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'
"
How many followers does each user have?,SELECT count(*) FROM follows,"Input: How many followers does each user have? Answer: SELECT count(*) FROM follows
"
Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000,SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001,"Input: Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000 Answer: SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001
"
How many different card types are there?,SELECT count(DISTINCT card_type_code) FROM Customers_Cards,"Input: How many different card types are there? Answer: SELECT count(DISTINCT card_type_code) FROM Customers_Cards
"
Find the states where have some college students in tryout.,SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName,"Input: Find the states where have some college students in tryout. Answer: SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName
"
"What is the unit of measurement of product named ""cumin""?","SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""","Input: What is the unit of measurement of product named ""cumin""? Answer: SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  ""cumin""
"
Find the name of the customer who made an order most recently.,SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1,"Input: Find the name of the customer who made an order most recently. Answer: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1
"
How many entrepreneurs are there?,SELECT count(*) FROM entrepreneur,"Input: How many entrepreneurs are there? Answer: SELECT count(*) FROM entrepreneur
"
Count the number of different languages in these films.,SELECT count(DISTINCT language_id) FROM film,"Input: Count the number of different languages in these films. Answer: SELECT count(DISTINCT language_id) FROM film
"
Show different nominees and the number of musicals they have been nominated.,"SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee","Input: Show different nominees and the number of musicals they have been nominated. Answer: SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee
"
What are the id and name of the photos for mountains?,"SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000","Input: What are the id and name of the photos for mountains? Answer: SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000
"
List the name of actors whose age is not 20.,SELECT Name FROM actor WHERE Age != 20,"Input: List the name of actors whose age is not 20. Answer: SELECT Name FROM actor WHERE Age != 20
"
"What are the distinct names of customers with an order status of Pending, sorted by customer id?","SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending"" ORDER BY T2.customer_id","Input: What are the distinct names of customers with an order status of Pending, sorted by customer id? Answer: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending"" ORDER BY T2.customer_id
"
What are the names and types of the dorms that have a capacity greater than 300 or less than 100?,"SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100","Input: What are the names and types of the dorms that have a capacity greater than 300 or less than 100? Answer: SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100
"
Find the names of Japanese constructors that have once earned more than 5 points?,"SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5","Input: Find the names of Japanese constructors that have once earned more than 5 points? Answer: SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = ""Japanese"" AND T2.points > 5
"
Find the name and email of the user followed by the least number of people.,"SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1","Input: Find the name and email of the user followed by the least number of people. Answer: SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1
"
Who are the different players and how many years has each played?,"SELECT Player ,  Years_Played FROM player","Input: Who are the different players and how many years has each played? Answer: SELECT Player ,  Years_Played FROM player
"
How many dorms have amenities?,SELECT count(DISTINCT dormid) FROM has_amenity,"Input: How many dorms have amenities? Answer: SELECT count(DISTINCT dormid) FROM has_amenity
"
What is the first name of the students who are in age 20 to 25 and living in PHL city?,SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25,"Input: What is the first name of the students who are in age 20 to 25 and living in PHL city? Answer: SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25
"
"Which product's detail contains the word ""Latte"" or ""Americano""? Return the full detail.","SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""","Input: Which product's detail contains the word ""Latte"" or ""Americano""? Return the full detail. Answer: SELECT product_details FROM products WHERE product_details LIKE ""%Latte%"" OR product_details LIKE ""%Americano%""
"
"Find all 200 meter and 300 meter results of swimmers with nationality ""Australia"".","SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'","Input: Find all 200 meter and 300 meter results of swimmers with nationality ""Australia"". Answer: SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'
"
What are the different cities that have more than 100 memberships?,SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100,"Input: What are the different cities that have more than 100 memberships? Answer: SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100
"
Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.,SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff'),"Input: Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff. Answer: SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')
"
What are the names of customers who never made an order.,SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id,"Input: What are the names of customers who never made an order. Answer: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id
"
List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.,"SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges","Input: List the names and locations of all stations ordered by their yearly entry exit and interchange amounts. Answer: SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges
"
Count the number of different colleges that players who play for Columbus Crew are from.,"SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""","Input: Count the number of different colleges that players who play for Columbus Crew are from. Answer: SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  ""Columbus Crew""
"
"Return the name, phone number and email address for the customer with the most orders.","SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1","Input: Return the name, phone number and email address for the customer with the most orders. Answer: SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1
"
How many books fall into each category?,"SELECT category ,  count(*) FROM book_club GROUP BY category","Input: How many books fall into each category? Answer: SELECT category ,  count(*) FROM book_club GROUP BY category
"
What college has a student who successfully made the team in the role of a goalie?,SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie',"Input: What college has a student who successfully made the team in the role of a goalie? Answer: SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'
"
"Tell me the total quantity of products bought by the customer called ""Rodrick Heaney"".","SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""","Input: Tell me the total quantity of products bought by the customer called ""Rodrick Heaney"". Answer: SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""
"
Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.,SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64,"Input: Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64. Answer: SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64
"
How many different genders are there in the dorms?,SELECT count(DISTINCT gender) FROM dorm,"Input: How many different genders are there in the dorms? Answer: SELECT count(DISTINCT gender) FROM dorm
"
Which delegates are from counties with population smaller than 100000?,SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000,"Input: Which delegates are from counties with population smaller than 100000? Answer: SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000
"
Which organizations are not a parent organization of others? List the organization id.,SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations,"Input: Which organizations are not a parent organization of others? List the organization id. Answer: SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations
"
What are the names of regions with two or more storms?,SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2,"Input: What are the names of regions with two or more storms? Answer: SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2
"
Find the names of the products with length smaller than 3 or height greater than 5.,SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5,"Input: Find the names of the products with length smaller than 3 or height greater than 5. Answer: SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5
"
Find the name of the instructors who taught C Programming course before.,SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming',"Input: Find the name of the instructors who taught C Programming course before. Answer: SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'
"
Find the patient who has the most recent undergoing treatment?,SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1,"Input: Find the patient who has the most recent undergoing treatment? Answer: SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1
"
What is the most frequently ordered product? Tell me the detail of the product,SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1,"Input: What is the most frequently ordered product? Tell me the detail of the product Answer: SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1
"
What are the names of the products that have a color description of 'red' and the 'fast' characteristic?,"SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""fast""","Input: What are the names of the products that have a color description of 'red' and the 'fast' characteristic? Answer: SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""fast""
"
List the names of all courses ordered by their titles and credits.,"SELECT title FROM course ORDER BY title ,  credits","Input: List the names of all courses ordered by their titles and credits. Answer: SELECT title FROM course ORDER BY title ,  credits
"
What are the name and level of catalog structure with level number between 5 and 10,"SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10","Input: What are the name and level of catalog structure with level number between 5 and 10 Answer: SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10
"
"What are the names of the workshop groups that have bookings with status code ""stop""?","SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  ""stop""","Input: What are the names of the workshop groups that have bookings with status code ""stop""? Answer: SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  ""stop""
"
What is the total revenue of each manufacturer?,"SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name","Input: What is the total revenue of each manufacturer? Answer: SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name
"
Which countries do not have a stadium that was opened after 2006?,SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006,"Input: Which countries do not have a stadium that was opened after 2006? Answer: SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006
"
"How many products have the characteristic named ""hot""?","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""hot""","Input: How many products have the characteristic named ""hot""? Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""hot""
"
Which colleges does each player with a name that starts with the letter D  who tried out go to?,SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%',"Input: Which colleges does each player with a name that starts with the letter D  who tried out go to? Answer: SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'
"
What is the origin and destination for all flights whose price is higher than 300?,"SELECT origin ,  destination FROM Flight WHERE price  >  300","Input: What is the origin and destination for all flights whose price is higher than 300? Answer: SELECT origin ,  destination FROM Flight WHERE price  >  300
"
What are the names and years of all races that had a driver with the last name Lewis?,"SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""","Input: What are the names and years of all races that had a driver with the last name Lewis? Answer: SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = ""Lewis""
"
What are the names of all races held between 2009 and 2011?,SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011,"Input: What are the names of all races held between 2009 and 2011? Answer: SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011
"
What is the code of the product type with an average price higher than the average price of all products?,SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products),"Input: What is the code of the product type with an average price higher than the average price of all products? Answer: SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)
"
How many diffrent dorm amenities are there?,SELECT count(*) FROM dorm_amenity,"Input: How many diffrent dorm amenities are there? Answer: SELECT count(*) FROM dorm_amenity
"
"What are the official native languages that contain the string ""English"".","SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""","Input: What are the official native languages that contain the string ""English"". Answer: SELECT Official_native_language FROM country WHERE Official_native_language LIKE ""%English%""
"
Find the names of states that have some college students playing in the mid position but not in the goalie position.,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie',"Input: Find the names of states that have some college students playing in the mid position but not in the goalie position. Answer: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'
"
Find the names of users whose emails contain ‘superstar’ or ‘edu’.,SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%',"Input: Find the names of users whose emails contain ‘superstar’ or ‘edu’. Answer: SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'
"
Count the number of tracks that are part of the rock genre.,"SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""","Input: Count the number of tracks that are part of the rock genre. Answer: SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""
"
Return the id of the department with the fewest staff assignments.,SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1,"Input: Return the id of the department with the fewest staff assignments. Answer: SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1
"
"Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.","SELECT College FROM match_season WHERE POSITION  =  ""Midfielder"" INTERSECT SELECT College FROM match_season WHERE POSITION  =  ""Defender""","Input: Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position. Answer: SELECT College FROM match_season WHERE POSITION  =  ""Midfielder"" INTERSECT SELECT College FROM match_season WHERE POSITION  =  ""Defender""
"
"List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.","SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR","Input: List the grape, winery and year of the wines whose price is bigger than 100 ordered by year. Answer: SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR
"
"What are the name and typical buying and selling prices of the products that have color described as ""yellow""?","SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""yellow""","Input: What are the name and typical buying and selling prices of the products that have color described as ""yellow""? Answer: SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""yellow""
"
What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?,SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200,"Input: What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace? Answer: SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200
"
What is the description of the color for most products?,SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1,"Input: What is the description of the color for most products? Answer: SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1
"
Who were the governors of the parties associated with delegates from district 1?,SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1,"Input: Who were the governors of the parties associated with delegates from district 1? Answer: SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1
"
Which people severed as governor most frequently?,SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which people severed as governor most frequently? Answer: SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1
"
Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.,"SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1","Input: Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies. Answer: SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1
"
Show the name of colleges that have at least two players in descending alphabetical order.,SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC,"Input: Show the name of colleges that have at least two players in descending alphabetical order. Answer: SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC
"
Find the average and total capacity of dorms for the students with gender X.,"SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'","Input: Find the average and total capacity of dorms for the students with gender X. Answer: SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'
"
Find number of products which Sony does not make.,SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'),"Input: Find number of products which Sony does not make. Answer: SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')
"
Find the name of physicians who are affiliated with both Surgery and Psychiatry departments.,SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry',"Input: Find the name of physicians who are affiliated with both Surgery and Psychiatry departments. Answer: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'
"
How many students attend course English?,"SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""","Input: How many students attend course English? Answer: SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""English""
"
"What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?","SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   ""Cancelled"" ORDER BY order_date","Input: What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates? Answer: SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   ""Cancelled"" ORDER BY order_date
"
Count the number of customers who are active.,SELECT count(*) FROM customer WHERE active = '1',"Input: Count the number of customers who are active. Answer: SELECT count(*) FROM customer WHERE active = '1'
"
List the id of students who attended  statistics courses in the order of attendance date.,"SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance","Input: List the id of students who attended  statistics courses in the order of attendance date. Answer: SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.date_of_attendance
"
Find the first name of students who are living in the dorm that has most number of amenities.,SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1),"Input: Find the first name of students who are living in the dorm that has most number of amenities. Answer: SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)
"
Who is the founder of Sony?,SELECT founder FROM manufacturers WHERE name  =  'Sony',"Input: Who is the founder of Sony? Answer: SELECT founder FROM manufacturers WHERE name  =  'Sony'
"
What are the all games score and location of the school called Clemson?,"SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'","Input: What are the all games score and location of the school called Clemson? Answer: SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'
"
What is the name of the youngest editor?,SELECT Name FROM editor ORDER BY Age ASC LIMIT 1,"Input: What is the name of the youngest editor? Answer: SELECT Name FROM editor ORDER BY Age ASC LIMIT 1
"
How many debit cards do we have?,"SELECT count(*) FROM Customers_cards WHERE card_type_code  =  ""Debit""","Input: How many debit cards do we have? Answer: SELECT count(*) FROM Customers_cards WHERE card_type_code  =  ""Debit""
"
What are the times of elimination for any instances in which the elimination was done by Punk or Orton?,"SELECT TIME FROM elimination WHERE Eliminated_By  =  ""Punk"" OR Eliminated_By  =  ""Orton""","Input: What are the times of elimination for any instances in which the elimination was done by Punk or Orton? Answer: SELECT TIME FROM elimination WHERE Eliminated_By  =  ""Punk"" OR Eliminated_By  =  ""Orton""
"
What are the names of perpetrators?,SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID,"Input: What are the names of perpetrators? Answer: SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID
"
How many different courses offered by Physics department?,SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics',"Input: How many different courses offered by Physics department? Answer: SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'
"
List all channel names ordered by their rating in percent from big to small.,SELECT name FROM channel ORDER BY rating_in_percent DESC,"Input: List all channel names ordered by their rating in percent from big to small. Answer: SELECT name FROM channel ORDER BY rating_in_percent DESC
"
What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?,SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000,"Input: What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000? Answer: SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000
"
"What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students?","SELECT cName FROM College WHERE enr  <  13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = ""LA""","Input: What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students? Answer: SELECT cName FROM College WHERE enr  <  13000 AND state = ""AZ"" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = ""LA""
"
Return the titles of films that include 'Deleted Scenes' in their special feature section.,SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%',"Input: Return the titles of films that include 'Deleted Scenes' in their special feature section. Answer: SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'
"
"Which programs' origins are not ""Beijing""? Give me the program names.",SELECT name FROM program WHERE origin != 'Beijing',"Input: Which programs' origins are not ""Beijing""? Give me the program names. Answer: SELECT name FROM program WHERE origin != 'Beijing'
"
Find the number of medications prescribed for each brand.,"SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand","Input: Find the number of medications prescribed for each brand. Answer: SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand
"
Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.,"SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0","Input: Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID. Answer: SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0
"
What are the names of races held after 12:00:00 or before 09:00:00?,"SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""","Input: What are the names of races held after 12:00:00 or before 09:00:00? Answer: SELECT name FROM races WHERE TIME > ""12:00:00"" OR TIME < ""09:00:00""
"
Find the name and address of the customers who have both New and Pending orders.,"SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""New"" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending""","Input: Find the name and address of the customers who have both New and Pending orders. Answer: SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""New"" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  ""Pending""
"
Find the names of the top 3 departments that provide the largest amount of courses?,SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3,"Input: Find the names of the top 3 departments that provide the largest amount of courses? Answer: SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3
"
Find the number of schools that have more than one donator whose donation amount is less than 8.5.,SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1),"Input: Find the number of schools that have more than one donator whose donation amount is less than 8.5. Answer: SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)
"
What is the name of the most common genre in all tracks?,SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is the name of the most common genre in all tracks? Answer: SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1
"
Find the state and country of all cities with post code starting with 4.,"SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE ""4%""","Input: Find the state and country of all cities with post code starting with 4. Answer: SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE ""4%""
"
"List the names, color descriptions and product descriptions of products with category ""Herbs"".","SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  ""Herbs""","Input: List the names, color descriptions and product descriptions of products with category ""Herbs"". Answer: SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  ""Herbs""
"
"For each manufacturer name, what are the names and prices of their most expensive product?","SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name","Input: For each manufacturer name, what are the names and prices of their most expensive product? Answer: SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name
"
Find the first name of students who are living in the Smith Hall.,SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall',"Input: Find the first name of students who are living in the Smith Hall. Answer: SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'
"
How many employees have certificate.,SELECT count(DISTINCT eid) FROM Certificate,"Input: How many employees have certificate. Answer: SELECT count(DISTINCT eid) FROM Certificate
"
What is the average distance and average price for flights from Los Angeles.,"SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  ""Los Angeles""","Input: What is the average distance and average price for flights from Los Angeles. Answer: SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  ""Los Angeles""
"
What is the channel code and contact number of the customer contact channel that was active for the longest time?,"SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)","Input: What is the channel code and contact number of the customer contact channel that was active for the longest time? Answer: SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)
"
What are the ids of the students who either registered or attended a course?,SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance,"Input: What are the ids of the students who either registered or attended a course? Answer: SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance
"
What is the description and code of the type of service that is performed the most often?,"SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1","Input: What is the description and code of the type of service that is performed the most often? Answer: SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1
"
What are the ids of the top three products that were purchased in the largest amount?,SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3,"Input: What are the ids of the top three products that were purchased in the largest amount? Answer: SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3
"
Which party has the largest number of delegates?,SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which party has the largest number of delegates? Answer: SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1
"
Which programs are never broadcasted in the morning? Give me the names of the programs.,"SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning""","Input: Which programs are never broadcasted in the morning? Give me the names of the programs. Answer: SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning""
"
Find the name of dorms which have TV Lounge but no Study Room as amenity.,SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room',"Input: Find the name of dorms which have TV Lounge but no Study Room as amenity. Answer: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'
"
What are the distinct names of customers who have purchased a keyboard?,"SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  ""keyboard""","Input: What are the distinct names of customers who have purchased a keyboard? Answer: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  ""keyboard""
"
How many different majors are there and how many different city codes are there for each student?,"SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student","Input: How many different majors are there and how many different city codes are there for each student? Answer: SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student
"
"What is the color description of the product with name ""catnip""?","SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""catnip""","Input: What is the color description of the product with name ""catnip""? Answer: SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  ""catnip""
"
"Return the product type, name, and price for products supplied by supplier 3.","SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3","Input: Return the product type, name, and price for products supplied by supplier 3. Answer: SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3
"
What are the names of customers who have purchased both products Latte and Americano?,SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano',"Input: What are the names of customers who have purchased both products Latte and Americano? Answer: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'
"
What is the characteristic name used by most number of the products?,SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1,"Input: What is the characteristic name used by most number of the products? Answer: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1
"
Count the number of characteristics.,SELECT count(*) FROM CHARACTERISTICS,"Input: Count the number of characteristics. Answer: SELECT count(*) FROM CHARACTERISTICS
"
Show the park of the roller coaster with the highest speed.,SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1,"Input: Show the park of the roller coaster with the highest speed. Answer: SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1
"
Which reign is the most common among wrestlers?,SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which reign is the most common among wrestlers? Answer: SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1
"
Give the name of the student in the History department with the most credits.,SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1,"Input: Give the name of the student in the History department with the most credits. Answer: SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1
"
"Find the number of the products that have their color described as ""red"" and have a characteristic named ""slow"".","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""slow""","Input: Find the number of the products that have their color described as ""red"" and have a characteristic named ""slow"". Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""red"" AND t3.characteristic_name  =  ""slow""
"
Find the names of the top 10 airlines that operate the most number of routes.,"SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10","Input: Find the names of the top 10 airlines that operate the most number of routes. Answer: SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10
"
What are the names of tracks that contain the the word you in them?,SELECT Name FROM TRACK WHERE Name LIKE '%you%',"Input: What are the names of tracks that contain the the word you in them? Answer: SELECT Name FROM TRACK WHERE Name LIKE '%you%'
"
How many different instructors have taught some course?,SELECT COUNT (DISTINCT id) FROM teaches,"Input: How many different instructors have taught some course? Answer: SELECT COUNT (DISTINCT id) FROM teaches
"
How many storms had death records?,SELECT count(*) FROM storm WHERE Number_Deaths  >  0,"Input: How many storms had death records? Answer: SELECT count(*) FROM storm WHERE Number_Deaths  >  0
"
Show aircraft names and number of flights for each aircraft.,"SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid","Input: Show aircraft names and number of flights for each aircraft. Answer: SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid
"
What is the location of the party with the most hosts?,SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1,"Input: What is the location of the party with the most hosts? Answer: SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1
"
Find the name and position of the head of the department with the least employees.,"SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1","Input: Find the name and position of the head of the department with the least employees. Answer: SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1
"
Find the name of students who didn't take any course from Biology department.,SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology'),"Input: Find the name of students who didn't take any course from Biology department. Answer: SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')
"
Find courses that ran in Fall 2009 but not in Spring 2010.,SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010,"Input: Find courses that ran in Fall 2009 but not in Spring 2010. Answer: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010
"
Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.,"SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1","Input: Which people severed as comptroller most frequently? Give me the name of the person and the frequency count. Answer: SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1
"
"What are the mission codes, fates, and names of the ships involved?","SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID","Input: What are the mission codes, fates, and names of the ships involved? Answer: SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID
"
Find the number of rooms for different block code?,"SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode","Input: Find the number of rooms for different block code? Answer: SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode
"
List the names of departments where some physicians are primarily affiliated with.,SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1,"Input: List the names of departments where some physicians are primarily affiliated with. Answer: SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1
"
What is the entry name of the most expensive catalog (in USD)?,SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1,"Input: What is the entry name of the most expensive catalog (in USD)? Answer: SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1
"
What are the product ids and color descriptions for products with two or more characteristics?,"SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2","Input: What are the product ids and color descriptions for products with two or more characteristics? Answer: SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2
"
"For each delegate, find the names of the party they are part of.","SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID","Input: For each delegate, find the names of the party they are part of. Answer: SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID
"
What is the county that produces the most wines scoring higher than 90?,SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1,"Input: What is the county that produces the most wines scoring higher than 90? Answer: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1
"
Show ids for the faculty members who don't advise any student.,SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student,"Input: Show ids for the faculty members who don't advise any student. Answer: SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student
"
"Count the number of tracks that are of the media type ""AAC audio file"".","SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""","Input: Count the number of tracks that are of the media type ""AAC audio file"". Answer: SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  ""AAC audio file""
"
What is the total kills of the perpetrators with height more than 1.84.,SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84,"Input: What is the total kills of the perpetrators with height more than 1.84. Answer: SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84
"
Find the name of all students who were in the tryout sorted in alphabetic order.,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName,"Input: Find the name of all students who were in the tryout sorted in alphabetic order. Answer: SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName
"
"What are the different card types, and how many cards are there of each?","SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code","Input: What are the different card types, and how many cards are there of each? Answer: SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code
"
What are the catalog entry names of the products with next entry ID above 8?,SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8,"Input: What are the catalog entry names of the products with next entry ID above 8? Answer: SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8
"
What are the names of the members that have never registered at any branch?,SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch),"Input: What are the names of the members that have never registered at any branch? Answer: SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)
"
What is the description of the most popular role among users that have logged in?,SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1),"Input: What is the description of the most popular role among users that have logged in? Answer: SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)
"
Count the number of distinct channel owners.,SELECT count(DISTINCT OWNER) FROM channel,"Input: Count the number of distinct channel owners. Answer: SELECT count(DISTINCT OWNER) FROM channel
"
Show the id and salary of Mark Young.,"SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'","Input: Show the id and salary of Mark Young. Answer: SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'
"
Show all city with a branch opened in 2001 and a branch with more than 100 membership.,SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100,"Input: Show all city with a branch opened in 2001 and a branch with more than 100 membership. Answer: SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100
"
List the name and phone number of all suppliers in the alphabetical order of their addresses.,"SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details","Input: List the name and phone number of all suppliers in the alphabetical order of their addresses. Answer: SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details
"
What are the names of enzymes who does not produce 'Heme'?,SELECT name FROM enzyme WHERE product != 'Heme',"Input: What are the names of enzymes who does not produce 'Heme'? Answer: SELECT name FROM enzyme WHERE product != 'Heme'
"
Find the physicians who are trained in a procedure that costs more than 5000.,SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000,"Input: Find the physicians who are trained in a procedure that costs more than 5000. Answer: SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000
"
Where does the customer with the first name Linda live? And what is her email?,"SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'","Input: Where does the customer with the first name Linda live? And what is her email? Answer: SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'
"
List the time of elimination of the wrestlers with largest days held.,SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1,"Input: List the time of elimination of the wrestlers with largest days held. Answer: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1
"
Return the category code and typical price of 'cumin'.,"SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  ""cumin""","Input: Return the category code and typical price of 'cumin'. Answer: SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  ""cumin""
"
What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?,"SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame"" AND t3.characteristic_type_code  =  ""Grade""","Input: What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'? Answer: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""sesame"" AND t3.characteristic_type_code  =  ""Grade""
"
How many parties are there?,SELECT count(*) FROM party,"Input: How many parties are there? Answer: SELECT count(*) FROM party
"
List the names of all the physicians who prescribe Thesisin as medication.,"SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""","Input: List the names of all the physicians who prescribe Thesisin as medication. Answer: SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  ""Thesisin""
"
"List the season, home team, away team of all the games.","SELECT season ,  home_team ,  away_team FROM game","Input: List the season, home team, away team of all the games. Answer: SELECT season ,  home_team ,  away_team FROM game
"
What is the film title and inventory id of the item in the inventory which was rented most frequently?,"SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1","Input: What is the film title and inventory id of the item in the inventory which was rented most frequently? Answer: SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1
"
Return the number of accounts that the customer with the first name Art and last name Turcotte has.,"SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""","Input: Return the number of accounts that the customer with the first name Art and last name Turcotte has. Answer: SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""
"
Give the neames of wines with prices below 50 and with appelations in Monterey county.,"SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Monterey"" AND T2.price  <  50","Input: Give the neames of wines with prices below 50 and with appelations in Monterey county. Answer: SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Monterey"" AND T2.price  <  50
"
Return the official native languages of countries who have players from Maryland or Duke colleges.,"SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  ""Maryland"" OR T2.College  =  ""Duke""","Input: Return the official native languages of countries who have players from Maryland or Duke colleges. Answer: SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  ""Maryland"" OR T2.College  =  ""Duke""
"
Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.,SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5,"Input: Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate. Answer: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5
"
Show the names of players and names of their coaches in descending order of the votes of players.,"SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC","Input: Show the names of players and names of their coaches in descending order of the votes of players. Answer: SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC
"
What is the first name and the last name of the customer who made the earliest rental?,"SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1","Input: What is the first name and the last name of the customer who made the earliest rental? Answer: SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1
"
What are the average and minimum price (in Euro) of all products?,"SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents","Input: What are the average and minimum price (in Euro) of all products? Answer: SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents
"
Give the names of tracks that do not have a race in the class 'GT'.,SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT',"Input: Give the names of tracks that do not have a race in the class 'GT'. Answer: SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'
"
Show the ids for all the students who participate in an activity and are under 20.,SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20,"Input: Show the ids for all the students who participate in an activity and are under 20. Answer: SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20
"
how many ships are there?,SELECT count(*) FROM ship,"Input: how many ships are there? Answer: SELECT count(*) FROM ship
"
Find the average price of wines that are not produced from Sonoma county.,SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma'),"Input: Find the average price of wines that are not produced from Sonoma county. Answer: SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')
"
What are the name and publication date of the catalogs with catalog level number above 5?,"SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5","Input: What are the name and publication date of the catalogs with catalog level number above 5? Answer: SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5
"
"Show all storm names affecting region ""Denmark"".",SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark',"Input: Show all storm names affecting region ""Denmark"". Answer: SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'
"
Find the title of course whose prerequisite is course Differential Geometry.,SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry'),"Input: Find the title of course whose prerequisite is course Differential Geometry. Answer: SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')
"
"How many customers are living in city ""Lake Geovannyton""?","SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  ""Lake Geovannyton""","Input: How many customers are living in city ""Lake Geovannyton""? Answer: SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  ""Lake Geovannyton""
"
Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.,"SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)","Input: Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products. Answer: SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)
"
Find the number of patients' prescriptions physician John Dorian made.,"SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""","Input: Find the number of patients' prescriptions physician John Dorian made. Answer: SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = ""John Dorian""
"
Which film has the most copies in the inventory? List both title and id.,"SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1","Input: Which film has the most copies in the inventory? List both title and id. Answer: SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1
"
"Tell me the number of orders with ""Second time"" as order detail.","SELECT count(*) FROM customer_orders WHERE order_details  =  ""Second time""","Input: Tell me the number of orders with ""Second time"" as order detail. Answer: SELECT count(*) FROM customer_orders WHERE order_details  =  ""Second time""
"
What are the cities no customers live in?,SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id),"Input: What are the cities no customers live in? Answer: SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)
"
"What are the country names, area and population which has both roller coasters with speed higher","SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55","Input: What are the country names, area and population which has both roller coasters with speed higher Answer: SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55
"
How many kinds of different ratings are listed?,SELECT count(DISTINCT rating) FROM film,"Input: How many kinds of different ratings are listed? Answer: SELECT count(DISTINCT rating) FROM film
"
"What are the minimum, average, and maximum quantities ordered? Check all the invoices.","SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES","Input: What are the minimum, average, and maximum quantities ordered? Check all the invoices. Answer: SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES
"
What is the average weight of all players?,SELECT avg(weight) FROM Player,"Input: What is the average weight of all players? Answer: SELECT avg(weight) FROM Player
"
"What is the total budget amount for school ""Glenn"" in all years?",SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn',"Input: What is the total budget amount for school ""Glenn"" in all years? Answer: SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'
"
What is the aircraft name for the flight with number 99,SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99,"Input: What is the aircraft name for the flight with number 99 Answer: SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99
"
How many cities are in Australia?,SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia',"Input: How many cities are in Australia? Answer: SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'
"
How many aircrafts exist in the database?,SELECT count(*) FROM Aircraft,"Input: How many aircrafts exist in the database? Answer: SELECT count(*) FROM Aircraft
"
What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?,SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole',"Input: What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'? Answer: SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'
"
List the names of all left-footed players who have overall rating between 85 and 90.,"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  ""left"" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90","Input: List the names of all left-footed players who have overall rating between 85 and 90. Answer: SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  ""left"" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90
"
List the name of physicians who took some appointment.,SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID,"Input: List the name of physicians who took some appointment. Answer: SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID
"
"What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?","SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title","Input: What are the building, room number, semester and year of courses in the Psychology department, sorted using course title? Answer: SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title
"
Show the draft pick numbers and draft classes of players whose positions are defenders.,"SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  ""Defender""","Input: Show the draft pick numbers and draft classes of players whose positions are defenders. Answer: SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  ""Defender""
"
Find the entry names of the catalog with the attribute that have the most entries.,SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1),"Input: Find the entry names of the catalog with the attribute that have the most entries. Answer: SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)
"
What are the positions of players whose average number of points scored by that position is larger than 20?,SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20,"Input: What are the positions of players whose average number of points scored by that position is larger than 20? Answer: SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20
"
What are the total number of students who are living in a male dorm?,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M',"Input: What are the total number of students who are living in a male dorm? Answer: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'
"
What are the names of wines made from red grapes and with prices above 50?,"SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red"" AND T2.price  >  50","Input: What are the names of wines made from red grapes and with prices above 50? Answer: SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red"" AND T2.price  >  50
"
Find the average number of followers for the users who had some tweets.,SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets),"Input: Find the average number of followers for the users who had some tweets. Answer: SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)
"
Count the number of different statuses.,SELECT count(DISTINCT Status) FROM city,"Input: Count the number of different statuses. Answer: SELECT count(DISTINCT Status) FROM city
"
Find the name of physicians who are in charge of more than one patient.,SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1,"Input: Find the name of physicians who are in charge of more than one patient. Answer: SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1
"
Find the id and name of the staff who has been assigned for the shortest period.,"SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1","Input: Find the id and name of the staff who has been assigned for the shortest period. Answer: SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1
"
What is the id and market share of the browser Safari?,"SELECT id ,  market_share FROM browser WHERE name  =  'Safari'","Input: What is the id and market share of the browser Safari? Answer: SELECT id ,  market_share FROM browser WHERE name  =  'Safari'
"
What are the names of teams from universities that have a below average enrollment?,SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university),"Input: What are the names of teams from universities that have a below average enrollment? Answer: SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)
"
"What is the list of program names, sorted by the order of launch date?",SELECT name FROM program ORDER BY launch,"Input: What is the list of program names, sorted by the order of launch date? Answer: SELECT name FROM program ORDER BY launch
"
What are the maximum and minimum number of silver medals for all the clubs?,"SELECT max(Silver) ,  min(Silver) FROM club_rank","Input: What are the maximum and minimum number of silver medals for all the clubs? Answer: SELECT max(Silver) ,  min(Silver) FROM club_rank
"
Count how many appointments have been made in total.,SELECT count(*) FROM appointment,"Input: Count how many appointments have been made in total. Answer: SELECT count(*) FROM appointment
"
"What is the average quantities ordered with payment method code ""MasterCard"" on invoices?","SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  ""MasterCard""","Input: What is the average quantities ordered with payment method code ""MasterCard"" on invoices? Answer: SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  ""MasterCard""
"
"Count the products that have the color description ""white"" or have the characteristic name ""hot"".","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""white"" OR t3.characteristic_name  =  ""hot""","Input: Count the products that have the color description ""white"" or have the characteristic name ""hot"". Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  ""white"" OR t3.characteristic_name  =  ""hot""
"
Select the names of manufacturer whose products have an average price higher than or equal to $150.,"SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150","Input: Select the names of manufacturer whose products have an average price higher than or equal to $150. Answer: SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150
"
Find distinct cities of address of students?,SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id,"Input: Find distinct cities of address of students? Answer: SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id
"
Find the names of nurses who are nursing an undergoing treatment.,SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID,"Input: Find the names of nurses who are nursing an undergoing treatment. Answer: SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID
"
"What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?","SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","Input: What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges? Answer: SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'
"
What are the names of all aircrafts that John Williams have certificates to be able to fly?,"SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  ""John Williams""","Input: What are the names of all aircrafts that John Williams have certificates to be able to fly? Answer: SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  ""John Williams""
"
"What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.","SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC","Input: What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with. Answer: SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC
"
What are the names of staff who have been assigned multiple jobs?,SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1,"Input: What are the names of staff who have been assigned multiple jobs? Answer: SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1
"
List the names of all distinct nurses ordered by alphabetical order?,SELECT DISTINCT name FROM nurse ORDER BY name,"Input: List the names of all distinct nurses ordered by alphabetical order? Answer: SELECT DISTINCT name FROM nurse ORDER BY name
"
"Find the number of albums by the artist ""Metallica"".","SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""Metallica""","Input: Find the number of albums by the artist ""Metallica"". Answer: SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  ""Metallica""
"
On which days more than one revisions were made on catalogs.,SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1,"Input: On which days more than one revisions were made on catalogs. Answer: SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1
"
Find the id and name of the stadium where the largest number of injury accidents occurred.,"SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Input: Find the id and name of the stadium where the largest number of injury accidents occurred. Answer: SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
"
"How many proteins are associated with an institution founded after 1880 or an institution with type ""Private""?",SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private',"Input: How many proteins are associated with an institution founded after 1880 or an institution with type ""Private""? Answer: SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'
"
Show the protein name and the institution name.,"SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id","Input: Show the protein name and the institution name. Answer: SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id
"
What are the ids and trade names of the medicine that can interact with at least 3 enzymes?,"SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3","Input: What are the ids and trade names of the medicine that can interact with at least 3 enzymes? Answer: SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3
"
What is the salaray and name of the employee with the most certificates to fly planes more than 5000?,SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1,"Input: What is the salaray and name of the employee with the most certificates to fly planes more than 5000? Answer: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
"
Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10.,SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10,"Input: Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10. Answer: SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10
"
What are the numbers of all flights that can cover a distance of more than 2000?,SELECT flno FROM Flight WHERE distance  >  2000,"Input: What are the numbers of all flights that can cover a distance of more than 2000? Answer: SELECT flno FROM Flight WHERE distance  >  2000
"
What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?,SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010,"Input: What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010? Answer: SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010
"
"List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.","SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name","Input: List the grape, appelation and name of wines whose score is higher than 93 ordered by Name. Answer: SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name
"
How many instructors teach a course in the Spring of 2010?,SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010,"Input: How many instructors teach a course in the Spring of 2010? Answer: SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010
"
Find the number of courses provided in each semester and year.,"SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR","Input: Find the number of courses provided in each semester and year. Answer: SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR
"
What is the number of technicians?,SELECT count(*) FROM technician,"Input: What is the number of technicians? Answer: SELECT count(*) FROM technician
"
Find the average age and number of male students (with sex M) from each city.,"SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code","Input: Find the average age and number of male students (with sex M) from each city. Answer: SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code
"
Find the names of stadiums that some Australian swimmers have been to.,SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia',"Input: Find the names of stadiums that some Australian swimmers have been to. Answer: SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'
"
What is the id of the candidate who most recently accessed the course?,SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1,"Input: What is the id of the candidate who most recently accessed the course? Answer: SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1
"
What are the names and salaries of instructors who advise students in the Math department?,"SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'","Input: What are the names and salaries of instructors who advise students in the Math department? Answer: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'
"
Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.,"SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1","Input: Which shipping agent shipped the most documents? List the shipping agent name and the number of documents. Answer: SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1
"
"Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.","SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'","Input: Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia. Answer: SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'
"
Find the name and capacity of products with price greater than 700 (in USD).,"SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700","Input: Find the name and capacity of products with price greater than 700 (in USD). Answer: SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700
"
What is the employee id of the head whose department has the least number of employees?,SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1,"Input: What is the employee id of the head whose department has the least number of employees? Answer: SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1
"
"List the name, location, mascot for all schools.","SELECT school_name ,  LOCATION ,  mascot FROM school","Input: List the name, location, mascot for all schools. Answer: SELECT school_name ,  LOCATION ,  mascot FROM school
"
List all of the ids for left-footed players with a height between 180cm and 190cm.,"SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  ""left""","Input: List all of the ids for left-footed players with a height between 180cm and 190cm. Answer: SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  ""left""
"
List the nominees that have been nominated more than two musicals.,SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2,"Input: List the nominees that have been nominated more than two musicals. Answer: SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2
"
How many products are there for each manufacturer?,"SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name","Input: How many products are there for each manufacturer? Answer: SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name
"
How many medicines have the FDA approval status 'No' ?,SELECT count(*) FROM medicine WHERE FDA_approved  =  'No',"Input: How many medicines have the FDA approval status 'No' ? Answer: SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'
"
Who is the nominee who has been nominated for the most musicals?,SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1,"Input: Who is the nominee who has been nominated for the most musicals? Answer: SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1
"
What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?,"SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""","Input: What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ? Answer: SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""
"
Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.,SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1,"Input: Return the names of products that have had complaints filed by the customer who has filed the fewest complaints. Answer: SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1
"
"List total amount of  invoice from Chicago, IL.","SELECT sum(total) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL""","Input: List total amount of  invoice from Chicago, IL. Answer: SELECT sum(total) FROM invoices WHERE billing_city  =  ""Chicago"" AND billing_state  =  ""IL""
"
How many students are affected by each allergy type?,"SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype","Input: How many students are affected by each allergy type? Answer: SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype
"
Show the company name with the number of gas station.,"SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id","Input: Show the company name with the number of gas station. Answer: SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id
"
Find the name and checking balance of the account with the lowest savings balance.,"SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1","Input: Find the name and checking balance of the account with the lowest savings balance. Answer: SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1
"
List the top 5 genres by number of tracks. List genres name and total tracks.,"SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5","Input: List the top 5 genres by number of tracks. List genres name and total tracks. Answer: SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5
"
What is the name of the customer who has made the largest amount of claim in a single claim?,SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers),"Input: What is the name of the customer who has made the largest amount of claim in a single claim? Answer: SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)
"
How much is the track Fast As a Shark?,"SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark""","Input: How much is the track Fast As a Shark? Answer: SELECT unit_price FROM tracks WHERE name = ""Fast As a Shark""
"
What are the titles of all albums that start with A in alphabetical order?,SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title,"Input: What are the titles of all albums that start with A in alphabetical order? Answer: SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title
"
What is the total and maximum duration for all trips with the bike id 636?,"SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636","Input: What is the total and maximum duration for all trips with the bike id 636? Answer: SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636
"
What is the average latitude and longitude of stations located in San Jose city?,"SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  ""San Jose""","Input: What is the average latitude and longitude of stations located in San Jose city? Answer: SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  ""San Jose""
"
"find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.","SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion","Input: find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion. Answer: SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion
"
What are the 3 most common cloud covers in the zip code of 94107?,SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3,"Input: What are the 3 most common cloud covers in the zip code of 94107? Answer: SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3
"
Show the names of pilots and the number of records they have.,"SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name","Input: Show the names of pilots and the number of records they have. Answer: SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name
"
"Find the description of the claim status ""Open"".","SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  ""Open""","Input: Find the description of the claim status ""Open"". Answer: SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  ""Open""
"
On which day has it neither been foggy nor rained in the zip code of 94107?,"SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""","Input: On which day has it neither been foggy nor rained in the zip code of 94107? Answer: SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != ""Fog"" AND EVENTS != ""Rain""
"
How many pilots are there?,SELECT count(*) FROM pilot,"Input: How many pilots are there? Answer: SELECT count(*) FROM pilot
"
What is the average bike availablility for stations not in Palo Alto?,"SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  ""Palo Alto"")","Input: What is the average bike availablility for stations not in Palo Alto? Answer: SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  ""Palo Alto"")
"
"What are the name, latitude, and city of the station with the lowest latitude?","SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1","Input: What are the name, latitude, and city of the station with the lowest latitude? Answer: SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1
"
"What is the title, phone and hire date of Nancy Edwards?","SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""","Input: What is the title, phone and hire date of Nancy Edwards? Answer: SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = ""Nancy"" AND last_name = ""Edwards""
"
"What are the names of customers with accounts, and how many checking accounts do each of them have?","SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name","Input: What are the names of customers with accounts, and how many checking accounts do each of them have? Answer: SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name
"
What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?,"SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE ""12/%""","Input: What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December? Answer: SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE ""12/%""
"
What is the total number of students?,SELECT count(*) FROM Student,"Input: What is the total number of students? Answer: SELECT count(*) FROM Student
"
What are names of stations that have average bike availability above 10 and are not located in San Jose city?,"SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  ""San Jose""","Input: What are names of stations that have average bike availability above 10 and are not located in San Jose city? Answer: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  ""San Jose""
"
"Show minimum, maximum, and average market value for all companies.","SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company","Input: Show minimum, maximum, and average market value for all companies. Answer: SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company
"
What are the start station's name and id for the one that had the most start trips in August?,"SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1","Input: What are the start station's name and id for the one that had the most start trips in August? Answer: SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE ""8/%"" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1
"
What are the names of modern rooms that have a base price lower than $160 and two beds.,SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern',"Input: What are the names of modern rooms that have a base price lower than $160 and two beds. Answer: SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern'
"
Find the name of tracks which are in Movies playlist but not in music playlist.,SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music',"Input: Find the name of tracks which are in Movies playlist but not in music playlist. Answer: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'
"
Find the names of the customers who have an deputy policy.,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""","Input: Find the names of the customers who have an deputy policy. Answer: SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy""
"
What are the first and last names of all the employees and how many people report to them?,"SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1","Input: What are the first and last names of all the employees and how many people report to them? Answer: SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1
"
Which allergy has most number of students affected?,SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1,"Input: Which allergy has most number of students affected? Answer: SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1
"
Find the zip code in which the average mean visibility is lower than 10.,SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10,"Input: Find the zip code in which the average mean visibility is lower than 10. Answer: SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10
"
How many students have each different allergy?,"SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy","Input: How many students have each different allergy? Answer: SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy
"
What is the id of the bike that traveled the most in 94002?,SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is the id of the bike that traveled the most in 94002? Answer: SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1
"
What are the student ids for students over 20 years old?,SELECT StuID FROM Student WHERE age  >  20,"Input: What are the student ids for students over 20 years old? Answer: SELECT StuID FROM Student WHERE age  >  20
"
What is the average and minimum age of all artists from United States.,"SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'","Input: What is the average and minimum age of all artists from United States. Answer: SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'
"
find all dependent names who have a spouse relation with some employee.,SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse',"Input: find all dependent names who have a spouse relation with some employee. Answer: SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'
"
What are the names of candidates who have a lower support rate than oppose rate?,SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate,"Input: What are the names of candidates who have a lower support rate than oppose rate? Answer: SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate
"
What are the first name and gender of the students who have allergy to milk but can put up with cats?,"SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Milk"" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Cat"")","Input: What are the first name and gender of the students who have allergy to milk but can put up with cats? Answer: SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Milk"" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  ""Cat"")
"
List Aerosmith's albums.,"SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Aerosmith""","Input: List Aerosmith's albums. Answer: SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = ""Aerosmith""
"
What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?,"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file""","Input: What are the names of all tracks that belong to the Rock genre and whose media type is MPEG? Answer: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" OR T3.name = ""MPEG audio file""
"
"For each zip code, return how many times max wind speed reached 25?","SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code","Input: For each zip code, return how many times max wind speed reached 25? Answer: SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code
"
Find the number of times ROY SWEAZY has reserved a room.,"SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY""","Input: Find the number of times ROY SWEAZY has reserved a room. Answer: SELECT count(*) FROM Reservations WHERE FirstName = ""ROY"" AND LastName  =  ""SWEAZY""
"
Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.,"SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3","Input: Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order. Answer: SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3
"
What are the different parties of representative? Show the party name and the number of representatives in each party.,"SELECT Party ,  COUNT(*) FROM representative GROUP BY Party","Input: What are the different parties of representative? Show the party name and the number of representatives in each party. Answer: SELECT Party ,  COUNT(*) FROM representative GROUP BY Party
"
Find the name of tracks which are in both Movies and music playlists.,SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music',"Input: Find the name of tracks which are in both Movies and music playlists. Answer: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'
"
What are the full names and ages for all female students whose sex is F?,"SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'","Input: What are the full names and ages for all female students whose sex is F? Answer: SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'
"
List the name of playlist which has number of tracks greater than 100.,SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100,"Input: List the name of playlist which has number of tracks greater than 100. Answer: SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100
"
Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.,SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60,"Input: Give me ids for all the trip that took place in a zip code area with average mean temperature above 60. Answer: SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60
"
List the name of albums that are released by aritist whose name has 'Led',SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%',"Input: List the name of albums that are released by aritist whose name has 'Led' Answer: SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'
"
What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?,"SELECT name FROM station WHERE city  =  ""Palo Alto"" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100","Input: What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times? Answer: SELECT name FROM station WHERE city  =  ""Palo Alto"" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100
"
What is title of album which track Balls to the Wall belongs to?,"SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall""","Input: What is title of album which track Balls to the Wall belongs to? Answer: SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = ""Balls to the Wall""
"
List the main industry with highest total market value and its number of companies.,"SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1","Input: List the main industry with highest total market value and its number of companies. Answer: SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1
"
Show all student IDs who have at least two allergies.,SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2,"Input: Show all student IDs who have at least two allergies. Answer: SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2
"
"Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.","SELECT Kids FROM Reservations WHERE CheckIn  =  ""2010-09-21"" AND FirstName  =  ""DAMIEN"" AND LastName  =  ""TRACHSEL""","Input: Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010. Answer: SELECT Kids FROM Reservations WHERE CheckIn  =  ""2010-09-21"" AND FirstName  =  ""DAMIEN"" AND LastName  =  ""TRACHSEL""
"
Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.,"SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2","Input: Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids. Answer: SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2
"
What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?,"SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3","Input: What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets? Answer: SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3
"
"List the number of invoices from the US, grouped by state.","SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state","Input: List the number of invoices from the US, grouped by state. Answer: SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state
"
What are the names of all Rock tracks that are stored on MPEG audio files?,"SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file""","Input: What are the names of all Rock tracks that are stored on MPEG audio files? Answer: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = ""Rock"" AND T3.name = ""MPEG audio file""
"
Eduardo Martins is a customer at which company?,"SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins""","Input: Eduardo Martins is a customer at which company? Answer: SELECT company FROM customers WHERE first_name = ""Eduardo"" AND last_name = ""Martins""
"
"For each zip code, return the average mean temperature of August there.","SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code","Input: For each zip code, return the average mean temperature of August there. Answer: SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE ""8/%"" GROUP BY zip_code
"
What are the names of people who have a height greater than 200 or less than 190?,SELECT name FROM people WHERE height  >  200 OR height  <  190,"Input: What are the names of people who have a height greater than 200 or less than 190? Answer: SELECT name FROM people WHERE height  >  200 OR height  <  190
"
How many king beds are there?,SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King',"Input: How many king beds are there? Answer: SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King'
"
Which room has the largest number of reservations?,SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1,"Input: Which room has the largest number of reservations? Answer: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1
"
What are all the distinct participant ids who attended any events?,SELECT count(DISTINCT participant_id) FROM participants_in_Events,"Input: What are all the distinct participant ids who attended any events? Answer: SELECT count(DISTINCT participant_id) FROM participants_in_Events
"
What are the student ids of students who don't have any allergies?,SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy,"Input: What are the student ids of students who don't have any allergies? Answer: SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy
"
What is the id of the shortest trip?,SELECT id FROM trip ORDER BY duration LIMIT 1,"Input: What is the id of the shortest trip? Answer: SELECT id FROM trip ORDER BY duration LIMIT 1
"
How many tracks are in each genre?,"SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name","Input: How many tracks are in each genre? Answer: SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name
"
List the state in the US with the most invoices.,"SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1","Input: List the state in the US with the most invoices. Answer: SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  ""USA"" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1
"
Find the names of customers who either have an deputy policy or uniformed policy.,"SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""","Input: Find the names of customers who either have an deputy policy or uniformed policy. Answer: SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  ""Deputy"" OR t1.policy_type_code  =  ""Uniform""
"
"For each station, return its longitude and the average duration of trips that started from the station.","SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id","Input: For each station, return its longitude and the average duration of trips that started from the station. Answer: SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id
"
How many distinct allergies are there?,SELECT count(DISTINCT allergytype) FROM Allergy_type,"Input: How many distinct allergies are there? Answer: SELECT count(DISTINCT allergytype) FROM Allergy_type
"
Find the number of employees whose title is IT Staff from each city?,"SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city","Input: Find the number of employees whose title is IT Staff from each city? Answer: SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city
"
Give me the dates when the max temperature was higher than 85.,SELECT date FROM weather WHERE max_temperature_f  >  85,"Input: Give me the dates when the max temperature was higher than 85. Answer: SELECT date FROM weather WHERE max_temperature_f  >  85
"
Show all locations where a gas station for company with market value greater than 100 is located.,SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100,"Input: Show all locations where a gas station for company with market value greater than 100 is located. Answer: SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100
"
What are the different names for each station that has ever had 7 bikes available?,SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7,"Input: What are the different names for each station that has ever had 7 bikes available? Answer: SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7
"
Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.,SELECT POSITION FROM pilot WHERE Join_Year	 <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year	 >  2005,"Input: Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000. Answer: SELECT POSITION FROM pilot WHERE Join_Year	 <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year	 >  2005
"
Find the number of students who are older than 18 and do not have allergy to either food or animal.,"SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")","Input: Find the number of students who are older than 18 and do not have allergy to either food or animal. Answer: SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  ""food"" OR T2.allergytype  =  ""animal"")
"
List the name of all playlist.,SELECT name FROM playlists,"Input: List the name of all playlist. Answer: SELECT name FROM playlists
"
What are the ids and details of events that have more than one participants?,"SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1","Input: What are the ids and details of events that have more than one participants? Answer: SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1
"
What is the number of invoices and total money billed in them from CA?,"SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  ""CA""","Input: What is the number of invoices and total money billed in them from CA? Answer: SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  ""CA""
"
How many advisors are there?,SELECT count(DISTINCT advisor) FROM Student,"Input: How many advisors are there? Answer: SELECT count(DISTINCT advisor) FROM Student
"
How many events had participants whose details had the substring 'Dr.',SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%',"Input: How many events had participants whose details had the substring 'Dr.' Answer: SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
"
What are the first and last names of the top 10 longest-serving employees?,"SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10","Input: What are the first and last names of the top 10 longest-serving employees? Answer: SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10
"
Show all headquarters with both a company in banking industry and a company in Oil and gas.,SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas',"Input: Show all headquarters with both a company in banking industry and a company in Oil and gas. Answer: SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'
"
How much money did Lucas Mancini spend?,"SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini""","Input: How much money did Lucas Mancini spend? Answer: SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = ""Lucas"" AND T1.last_name = ""Mancini""
"
What are all the different food allergies?,"SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  ""food""","Input: What are all the different food allergies? Answer: SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  ""food""
"
What are the ids and names of the architects who built at least 3 bridges ?,"SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3","Input: What are the ids and names of the architects who built at least 3 bridges ? Answer: SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3
"
"What is the first and last name of artist who performed ""Le Pop""?","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Le Pop""","Input: What is the first and last name of artist who performed ""Le Pop""? Answer: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Le Pop""
"
What is the name of the department htat has no students minoring in it?,SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO,"Input: What is the name of the department htat has no students minoring in it? Answer: SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO
"
"What are the famous titles of the artist ""Triumfall""?","SELECT Famous_Title FROM artist WHERE Artist  =  ""Triumfall""","Input: What are the famous titles of the artist ""Triumfall""? Answer: SELECT Famous_Title FROM artist WHERE Artist  =  ""Triumfall""
"
List the type of bed and name of all traditional rooms.,"SELECT roomName ,  bedType FROM Rooms WHERE decor = ""traditional""","Input: List the type of bed and name of all traditional rooms. Answer: SELECT roomName ,  bedType FROM Rooms WHERE decor = ""traditional""
"
"display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.","SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )","Input: display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN. Answer: SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )
"
"What are the codes, names, and descriptions of the different document types?","SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types","Input: What are the codes, names, and descriptions of the different document types? Answer: SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types
"
What are the full name (first and last name) and salary for all employees who does not have any value for commission?,"SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  ""null""","Input: What are the full name (first and last name) and salary for all employees who does not have any value for commission? Answer: SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  ""null""
"
How many times the number of adults and kids staying in a room reached the maximum capacity of the room?,SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids,"Input: How many times the number of adults and kids staying in a room reached the maximum capacity of the room? Answer: SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids
"
"What are the first and last names of the performer who was in the back stage position for the song ""Badlands""?","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands"" AND T1.StagePosition  =  ""back""","Input: What are the first and last names of the performer who was in the back stage position for the song ""Badlands""? Answer: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Badlands"" AND T1.StagePosition  =  ""back""
"
"How many problems did the product called ""voluptatem"" have in record?","SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""","Input: How many problems did the product called ""voluptatem"" have in record? Answer: SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = ""voluptatem""
"
"For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?","SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id","Input: For each product that has problems, find the number of problems reported after 1986-11-13 and the product id? Answer: SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > ""1986-11-13"" GROUP BY T2.product_id
"
"List the all the assets make, model, details by the disposed date ascendingly.","SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC","Input: List the all the assets make, model, details by the disposed date ascendingly. Answer: SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC
"
What are project ids of projects that have 2 or more corresponding documents?,SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2,"Input: What are project ids of projects that have 2 or more corresponding documents? Answer: SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2
"
"What is the first and last name of the artist who performed back stage for the song ""Der Kapitan""?","SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Der Kapitan"" AND T1.StagePosition  =  ""back""","Input: What is the first and last name of the artist who performed back stage for the song ""Der Kapitan""? Answer: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  ""Der Kapitan"" AND T1.StagePosition  =  ""back""
"
Find the number of customers in total.,SELECT count(*) FROM customers,"Input: Find the number of customers in total. Answer: SELECT count(*) FROM customers
"
Find the female friends of Alice.,SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female',"Input: Find the female friends of Alice. Answer: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'
"
Find the names of females who are friends with Zach,SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female',"Input: Find the names of females who are friends with Zach Answer: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'
"
"Which problems are reported by the staff with first name ""Christop""? Show the descriptions of the problems.","SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""","Input: Which problems are reported by the staff with first name ""Christop""? Show the descriptions of the problems. Answer: SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = ""Christop""
"
How many different jobs are listed?,SELECT count(DISTINCT job) FROM Person,"Input: How many different jobs are listed? Answer: SELECT count(DISTINCT job) FROM Person
"
"What is the temperature of ""Shanghai"" city in January?","SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""","Input: What is the temperature of ""Shanghai"" city in January? Answer: SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = ""Shanghai""
"
Which cities have regional population above 8000000 or below 5000000?,SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000,"Input: Which cities have regional population above 8000000 or below 5000000? Answer: SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000
"
"Find the number of students that have at least one grade ""B"".","SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  ""B""","Input: Find the number of students that have at least one grade ""B"". Answer: SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  ""B""
"
What are the first and last names of the instructors who teach the top 3 number of courses?,"SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3","Input: What are the first and last names of the instructors who teach the top 3 number of courses? Answer: SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3
"
Count the number of documents with expenses.,SELECT count(*) FROM Documents_with_expenses,"Input: Count the number of documents with expenses. Answer: SELECT count(*) FROM Documents_with_expenses
"
HOw many engineers are older than 30?,SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer',"Input: HOw many engineers are older than 30? Answer: SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'
"
How many companies operates airlines in each airport?,"SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id","Input: How many companies operates airlines in each airport? Answer: SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id
"
"What is all the information about employees with D or S in their first name, ordered by salary descending?",SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC,"Input: What is all the information about employees with D or S in their first name, ordered by salary descending? Answer: SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
"
Find the average grade point of student whose last name is Smith.,"SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""","Input: Find the average grade point of student whose last name is Smith. Answer: SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  ""Smith""
"
"List the asset id, details, make and model for every asset.","SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets","Input: List the asset id, details, make and model for every asset. Answer: SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets
"
What are the names of all of Alice's friends of friends?,SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice',"Input: What are the names of all of Alice's friends of friends? Answer: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'
"
Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?,"SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Lacey"" AND T3.staff_last_name = ""Bosco"" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Kenton"" AND T3.staff_last_name = ""Champlin""","Input: Find the products which have problems reported by both Lacey Bosco and Kenton Champlin? Answer: SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Lacey"" AND T3.staff_last_name = ""Bosco"" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = ""Kenton"" AND T3.staff_last_name = ""Champlin""
"
What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?,"SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id","Input: What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents? Answer: SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id
"
"What are the employee ids of the employees whose role name is ""Human Resource"" or ""Manager""?","SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Human Resource"" OR T2.role_name  =  ""Manager""","Input: What are the employee ids of the employees whose role name is ""Human Resource"" or ""Manager""? Answer: SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  ""Human Resource"" OR T2.role_name  =  ""Manager""
"
What are the full names and hire dates for employees in the same department as someone with the first name Clara?,"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  ""Clara"")","Input: What are the full names and hire dates for employees in the same department as someone with the first name Clara? Answer: SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  ""Clara"")
"
"List the clubs having ""Davis Steven"" as a member.","SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Davis"" AND t3.lname  =  ""Steven""","Input: List the clubs having ""Davis Steven"" as a member. Answer: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Davis"" AND t3.lname  =  ""Steven""
"
Show the ids of the employees who don't authorize destruction for any document.,SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed,"Input: Show the ids of the employees who don't authorize destruction for any document. Answer: SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
"
Find the name and age of all males in order of their age.,SELECT name FROM Person WHERE gender  =  'male' ORDER BY age,"Input: Find the name and age of all males in order of their age. Answer: SELECT name FROM Person WHERE gender  =  'male' ORDER BY age
"
Return the song in the volume that has spent the most weeks on top?,SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1,"Input: Return the song in the volume that has spent the most weeks on top? Answer: SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1
"
"How many members of ""Bootup Baltimore"" are older than 18?","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18","Input: How many members of ""Bootup Baltimore"" are older than 18? Answer: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Bootup Baltimore"" AND t3.age  >  18
"
What are the full names and cities of employees who have the letter Z in their first names?,"SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'","Input: What are the full names and cities of employees who have the letter Z in their first names? Answer: SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'
"
"Find the number of clubs where ""Tracy Kim"" is a member.","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Tracy"" AND t3.lname  =  ""Kim""","Input: Find the number of clubs where ""Tracy Kim"" is a member. Answer: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Tracy"" AND t3.lname  =  ""Kim""
"
What are the names of departments that have at least one employee.,SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id,"Input: What are the names of departments that have at least one employee. Answer: SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id
"
Find the rooms of faculties with rank professor who live in building NEB.,"SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""","Input: Find the rooms of faculties with rank professor who live in building NEB. Answer: SELECT Room FROM FACULTY WHERE Rank  =  ""Professor"" AND Building  =  ""NEB""
"
what is the GDP of the city with the largest population.,SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1,"Input: what is the GDP of the city with the largest population. Answer: SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1
"
Please show the industries of companies in descending order of the number of companies.,SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC,"Input: Please show the industries of companies in descending order of the number of companies. Answer: SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC
"
Give the ids for documents that have the budget description 'Government'.,"SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""","Input: Give the ids for documents that have the budget description 'Government'. Answer: SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  ""Government""
"
How many assets does each maintenance contract contain? List the number and the contract id.,"SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id","Input: How many assets does each maintenance contract contain? List the number and the contract id. Answer: SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id
"
display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.,"SELECT email FROM employees WHERE commission_pct  =  ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50","Input: display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50. Answer: SELECT email FROM employees WHERE commission_pct  =  ""null"" AND salary BETWEEN 7000 AND 12000 AND department_id = 50
"
What is the name of all the people who are older than at least one engineer? Order them by age.,SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age,"Input: What is the name of all the people who are older than at least one engineer? Order them by age. Answer: SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age
"
What is the song with the most vocals?,SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1,"Input: What is the song with the most vocals? Answer: SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1
"
What are all the employee ids and the names of the countries in which they work?,"SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id","Input: What are all the employee ids and the names of the countries in which they work? Answer: SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id
"
Show the authors of submissions and the acceptance results of their submissions.,"SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID","Input: Show the authors of submissions and the acceptance results of their submissions. Answer: SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID
"
What are the document ids for the budget type code 'SF'?,SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF',"Input: What are the document ids for the budget type code 'SF'? Answer: SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'
"
Which company started the earliest the maintenance contract? Show the company name.,SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1,"Input: Which company started the earliest the maintenance contract? Show the company name. Answer: SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1
"
"Find the venue of the competition ""1994 FIFA World Cup qualification"" which was hosted by ""Nanjing ( Jiangsu )"".","SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""","Input: Find the venue of the competition ""1994 FIFA World Cup qualification"" which was hosted by ""Nanjing ( Jiangsu )"". Answer: SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = ""Nanjing ( Jiangsu )"" AND T3.competition = ""1994 FIFA World Cup qualification""
"
Please list the countries and years of film market estimations.,"SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID","Input: Please list the countries and years of film market estimations. Answer: SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID
"
How many different songs have shared vocals?,"SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""shared""","Input: How many different songs have shared vocals? Answer: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  ""shared""
"
Return the ids and details corresponding to projects for which there are more than two documents.,"SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2","Input: Return the ids and details corresponding to projects for which there are more than two documents. Answer: SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2
"
Which engineers have never visited to maintain the assets? List the engineer first name and last name.,"SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)","Input: Which engineers have never visited to maintain the assets? List the engineer first name and last name. Answer: SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)
"
Whah are the name of each industry and the number of companies in that industry?,"SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry","Input: Whah are the name of each industry and the number of companies in that industry? Answer: SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry
"
Find the first and last names of people who payed more than the rooms' base prices.,"SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0","Input: Find the first and last names of people who payed more than the rooms' base prices. Answer: SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0
"
Find the number of employees we have.,SELECT count(*) FROM Employees,"Input: Find the number of employees we have. Answer: SELECT count(*) FROM Employees
"
How many people are under 40 for each gender?,"SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender","Input: How many people are under 40 for each gender? Answer: SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender
"
"What is the id, name and nationality of the architect who built most mills?","SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Input: What is the id, name and nationality of the architect who built most mills? Answer: SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
"
What is the day Number and date of all the documents?,"SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date","Input: What is the day Number and date of all the documents? Answer: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date
"
What are the job ids for jobs done more than once for a period of more than 300 days?,SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2,"Input: What are the job ids for jobs done more than once for a period of more than 300 days? Answer: SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2
"
What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?,SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80,"Input: What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters? Answer: SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80
"
What is the name of the room that can accommodate the most people?,SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1,"Input: What is the name of the room that can accommodate the most people? Answer: SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1
"
What is the total number of rooms available in this inn?,SELECT count(*) FROM Rooms,"Input: What is the total number of rooms available in this inn? Answer: SELECT count(*) FROM Rooms
"
what are the employee ids and job titles for employees in department 80?,"SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80","Input: what are the employee ids and job titles for employees in department 80? Answer: SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80
"
Find all the songs that do not have a back vocal.,"SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""back""","Input: Find all the songs that do not have a back vocal. Answer: SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  ""back""
"
Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.,"SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR  department_id != 40","Input: Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40. Answer: SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != ""null"" OR  department_id != 40
"
How many airports haven't the pilot 'Thompson' driven an aircraft?,SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' ),"Input: How many airports haven't the pilot 'Thompson' driven an aircraft? Answer: SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' )
"
Find the names of scientists who are not working on the project with the highest hours.,SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects),"Input: Find the names of scientists who are not working on the project with the highest hours. Answer: SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)
"
Find the employee id for all employees who earn more than the average salary.,SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees),"Input: Find the employee id for all employees who earn more than the average salary. Answer: SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)
"
What is id of the city that hosted events in the most recent year?,SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1,"Input: What is id of the city that hosted events in the most recent year? Answer: SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1
"
Which cities have higher temperature in Feb than in Jun or have once served as host cities?,SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city,"Input: Which cities have higher temperature in Feb than in Jun or have once served as host cities? Answer: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city
"
Give me the name and description of the document type code RV.,"SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  ""RV""","Input: Give me the name and description of the document type code RV. Answer: SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  ""RV""
"
Which city has hosted the most events?,SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1,"Input: Which city has hosted the most events? Answer: SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1
"
Show each author and the number of workshops they submitted to.,"SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author","Input: Show each author and the number of workshops they submitted to. Answer: SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author
"
What are the distinct names and nationalities of the architects who have ever built a mill?,"SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id","Input: What are the distinct names and nationalities of the architects who have ever built a mill? Answer: SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id
"
display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.,"SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  ""Clara"") AND first_name != ""Clara""","Input: display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara. Answer: SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  ""Clara"") AND first_name != ""Clara""
"
Show the location codes with at least 3 documents.,SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3,"Input: Show the location codes with at least 3 documents. Answer: SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3
"
Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems.,"SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )","Input: Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems. Answer: SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = ""Lysanne"" AND T4.staff_last_name = ""Turcotte"" )
"
What are the famous titles of artists who do not have any volumes?,SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume),"Input: What are the famous titles of artists who do not have any volumes? Answer: SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)
"
"Which staff members who reported problems from the product ""rem"" but not ""aut""? Give me their first and last names.","SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""rem"" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""aut""","Input: Which staff members who reported problems from the product ""rem"" but not ""aut""? Give me their first and last names. Answer: SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""rem"" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = ""aut""
"
What are all the distinct asset models?,SELECT DISTINCT asset_model FROM Assets,"Input: What are all the distinct asset models? Answer: SELECT DISTINCT asset_model FROM Assets
"
What are the first names and last names of the students that minor in the department with DNO 140.,"SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140","Input: What are the first names and last names of the students that minor in the department with DNO 140. Answer: SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140
"
Return the code of the document type that is most common.,SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1,"Input: Return the code of the document type that is most common. Answer: SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1
"
Which cities' temperature in March is lower than that in July or higher than that in Oct?,SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct,"Input: Which cities' temperature in March is lower than that in July or higher than that in Oct? Answer: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct
"
"What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?","SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'","Input: What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'? Answer: SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'
"
What is the maximum length in meters for the bridges and what are the architects' names?,"SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id","Input: What is the maximum length in meters for the bridges and what are the architects' names? Answer: SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id
"
What are the names of every person who has a friend over 40 and under 30?,SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30),"Input: What are the names of every person who has a friend over 40 and under 30? Answer: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)
"
Find the author for each submission and list them in ascending order of submission score.,SELECT Author FROM submission ORDER BY Scores ASC,"Input: Find the author for each submission and list them in ascending order of submission score. Answer: SELECT Author FROM submission ORDER BY Scores ASC
"
"What is all the information about employees hired before June 21, 2002?",SELECT * FROM employees WHERE hire_date  <  '2002-06-21',"Input: What is all the information about employees hired before June 21, 2002? Answer: SELECT * FROM employees WHERE hire_date  <  '2002-06-21'
"
Return the issue date of the volume that has spent the fewest weeks on top.,SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1,"Input: Return the issue date of the volume that has spent the fewest weeks on top. Answer: SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1
"
What are the full names of faculties with sex M and who live in building NEB?,"SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""","Input: What are the full names of faculties with sex M and who live in building NEB? Answer: SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  ""M"" AND Building  =  ""NEB""
"
Find the job ID for those jobs which average salary is above 8000.,SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000,"Input: Find the job ID for those jobs which average salary is above 8000. Answer: SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000
"
Give the ids of documents that have expenses and contain the letter s in their names.,SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%',"Input: Give the ids of documents that have expenses and contain the letter s in their names. Answer: SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'
"
What are the department names and how many employees work in each of them?,"SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name","Input: What are the department names and how many employees work in each of them? Answer: SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name
"
What is the code of each location and the number of documents in that location?,"SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code","Input: What is the code of each location and the number of documents in that location? Answer: SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code
"
Show the authors who have submissions to more than one workshop.,SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1,"Input: Show the authors who have submissions to more than one workshop. Answer: SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1
"
What is the school color of the school with the largest enrollment?,SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1,"Input: What is the school color of the school with the largest enrollment? Answer: SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1
"
List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.,SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services',"Input: List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities. Answer: SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'
"
Which team has the oldest player?,SELECT Team FROM player ORDER BY Age DESC LIMIT 1,"Input: Which team has the oldest player? Answer: SELECT Team FROM player ORDER BY Age DESC LIMIT 1
"
Which schools have more than 1 player? Give me the school locations.,SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1,"Input: Which schools have more than 1 player? Give me the school locations. Answer: SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1
"
What are the names and ages of every person who is a friend of both Dan and Alice?,"SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'","Input: What are the names and ages of every person who is a friend of both Dan and Alice? Answer: SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'
"
Return the issue dates of volumes that are by the artist named Gorgoroth.,"SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  ""Gorgoroth""","Input: Return the issue dates of volumes that are by the artist named Gorgoroth. Answer: SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  ""Gorgoroth""
"
List the name of film studio that have the most number of films.,SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1,"Input: List the name of film studio that have the most number of films. Answer: SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1
"
Which part has the least chargeable amount? List the part id and amount.,"SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1","Input: Which part has the least chargeable amount? List the part id and amount. Answer: SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1
"
Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?,SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city,"Input: Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities? Answer: SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city
"
Find the SSN and name of scientists who are assigned to the project with the longest hours.,"SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)","Input: Find the SSN and name of scientists who are assigned to the project with the longest hours. Answer: SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)
"
List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.,"SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1","Input: List the first and last names of all distinct staff members who are assigned to the problem whose id is 1. Answer: SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1
"
What are the full names and salaries for any employees earning less than 6000?,"SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000","Input: What are the full names and salaries for any employees earning less than 6000? Answer: SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000
"
What are the employee ids for each employee and final dates of employment at their last job?,"SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id","Input: What are the employee ids for each employee and final dates of employment at their last job? Answer: SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id
"
"What are the full name, hire date, salary, and department id for employees without the letter M in their first name?","SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'","Input: What are the full name, hire date, salary, and department id for employees without the letter M in their first name? Answer: SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'
"
Show the location name and code with the least documents.,"SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1","Input: Show the location name and code with the least documents. Answer: SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1
"
What are the different instruments listed in the database?,SELECT DISTINCT instrument FROM Instruments,"Input: What are the different instruments listed in the database? Answer: SELECT DISTINCT instrument FROM Instruments
"
What is the name of the department with the most students minoring in it?,SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the department with the most students minoring in it? Answer: SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1
"
What is the average weeks on top of volumes associated with the artist aged 25 or younger?,SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25,"Input: What is the average weeks on top of volumes associated with the artist aged 25 or younger? Answer: SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25
"
"What are the statement ids, statement details, and account details, for all accounts?","SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id","Input: What are the statement ids, statement details, and account details, for all accounts? Answer: SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id
"
What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?,"SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'","Input: What are the names and dates for documents corresponding to project that has the details 'Graph Database project'? Answer: SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'
"
What is the least popular kind of decor?,SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1,"Input: What is the least popular kind of decor? Answer: SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1
"
"list the name, job title of all people ordered by their names.","SELECT name ,  job FROM Person ORDER BY name","Input: list the name, job title of all people ordered by their names. Answer: SELECT name ,  job FROM Person ORDER BY name
"
"How many people have membership in the club ""Pen and Paper Gaming""?","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Pen and Paper Gaming""","Input: How many people have membership in the club ""Pen and Paper Gaming""? Answer: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  ""Pen and Paper Gaming""
"
"Which fault log included the most number of faulty parts? List the fault log id, description and record time.","SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1","Input: Which fault log included the most number of faulty parts? List the fault log id, description and record time. Answer: SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1
"
Which person whose friends have the oldest average age?,"SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1","Input: Which person whose friends have the oldest average age? Answer: SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1
"
Please show different denominations and the corresponding number of schools.,"SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination","Input: Please show different denominations and the corresponding number of schools. Answer: SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination
"
"Return the account details with the greatest value, as well as those that include the character 5.","SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""","Input: Return the account details with the greatest value, as well as those that include the character 5. Answer: SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE ""%5%""
"
"How many clubs does ""Linda Smith"" belong to?","SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Linda"" AND t3.lname  =  ""Smith""","Input: How many clubs does ""Linda Smith"" belong to? Answer: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Linda"" AND t3.lname  =  ""Smith""
"
What are the log id and entry description of each problem?,"SELECT problem_log_id ,  log_entry_description FROM problem_log","Input: What are the log id and entry description of each problem? Answer: SELECT problem_log_id ,  log_entry_description FROM problem_log
"
"Return the dates of ceremony corresponding to music festivals that had the category ""Best Song"" and result ""Awarded"".","SELECT Date_of_ceremony FROM music_festival WHERE Category  =  ""Best Song"" AND RESULT  =  ""Awarded""","Input: Return the dates of ceremony corresponding to music festivals that had the category ""Best Song"" and result ""Awarded"". Answer: SELECT Date_of_ceremony FROM music_festival WHERE Category  =  ""Best Song"" AND RESULT  =  ""Awarded""
"
What are the distinct types of the companies that have operated any flights with velocity less than 200?,SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200,"Input: What are the distinct types of the companies that have operated any flights with velocity less than 200? Answer: SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200
"
Give the maximum and minimum weeks on top across all volumes.,"SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume","Input: Give the maximum and minimum weeks on top across all volumes. Answer: SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume
"
Sort all the rooms according to the price. Just report the room names.,SELECT roomName FROM Rooms ORDER BY basePrice,"Input: Sort all the rooms according to the price. Just report the room names. Answer: SELECT roomName FROM Rooms ORDER BY basePrice
"
"How many instruments does the song ""Le Pop"" use?","SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""","Input: How many instruments does the song ""Le Pop"" use? Answer: SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  ""Le Pop""
"
"What are the songs in album ""A Kiss Before You Go: Live in Hamburg""?","SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  ""A Kiss Before You Go: Live in Hamburg""","Input: What are the songs in album ""A Kiss Before You Go: Live in Hamburg""? Answer: SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  ""A Kiss Before You Go: Live in Hamburg""
"
"List all every engineer's first name, last name, details and coresponding skill description.","SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id","Input: List all every engineer's first name, last name, details and coresponding skill description. Answer: SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id
"
What are the three products that have the most problems?s,SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3,"Input: What are the three products that have the most problems?s Answer: SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3
"
What are the full names of employees who with in department 70 or 90?,"SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90","Input: What are the full names of employees who with in department 70 or 90? Answer: SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90
"
"How many clubs does the student named ""Eric Tai"" belong to?","SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""","Input: How many clubs does the student named ""Eric Tai"" belong to? Answer: SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  ""Eric"" AND t3.lname  =  ""Tai""
"
Which product has the most problems? Give me the number of problems and the product name.,"SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1","Input: Which product has the most problems? Give me the number of problems and the product name. Answer: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1
"
"What are the ids, names and genders of the architects who built two bridges or one mill?","SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1","Input: What are the ids, names and genders of the architects who built two bridges or one mill? Answer: SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1
"
"Show the name, role code, and date of birth for the employee with name 'Armani'.","SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'","Input: Show the name, role code, and date of birth for the employee with name 'Armani'. Answer: SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'
"
"What are the types of vocals that the musician with the first name ""Solveig"" played in the song ""A Bar in Amsterdam""?","SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  ""Solveig"" AND T2.title  =  ""A Bar In Amsterdam""","Input: What are the types of vocals that the musician with the first name ""Solveig"" played in the song ""A Bar in Amsterdam""? Answer: SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  ""Solveig"" AND T2.title  =  ""A Bar In Amsterdam""
"
What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?,"SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id","Input: What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers? Answer: SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id
"
"Find the first names of students whose first names contain letter ""a"".",SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%',"Input: Find the first names of students whose first names contain letter ""a"". Answer: SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'
"
"For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.","SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id","Input: For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description. Answer: SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id
"
What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top?,SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2,"Input: What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top? Answer: SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2
"
Find the name of route that has the highest number of deliveries.,SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1,"Input: Find the name of route that has the highest number of deliveries. Answer: SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1
"
Find the author who achieved the highest score in a submission.,SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1,"Input: Find the author who achieved the highest score in a submission. Answer: SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1
"
How old is the youngest person for each job?,"SELECT min(age) ,  job FROM Person GROUP BY job","Input: How old is the youngest person for each job? Answer: SELECT min(age) ,  job FROM Person GROUP BY job
"
"Return the type name, type description, and date of creation for each document.","SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code","Input: Return the type name, type description, and date of creation for each document. Answer: SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code
"
What is the age of the doctor named Zach?,SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach',"Input: What is the age of the doctor named Zach? Answer: SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'
"
How many fault status codes are recorded in the fault log parts table?,SELECT DISTINCT fault_status FROM Fault_Log_Parts,"Input: How many fault status codes are recorded in the fault log parts table? Answer: SELECT DISTINCT fault_status FROM Fault_Log_Parts
"
Who has friends that are older than the average age? Print their friends and their ages as well,"SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)","Input: Who has friends that are older than the average age? Print their friends and their ages as well Answer: SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)
"
What are the songs in volumes that have resulted in a nomination at music festivals?,"SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  ""Nominated""","Input: What are the songs in volumes that have resulted in a nomination at music festivals? Answer: SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  ""Nominated""
"
How many document types are there?,SELECT count(*) FROM Ref_document_types,"Input: How many document types are there? Answer: SELECT count(*) FROM Ref_document_types
"
List the state names and the number of customers living in each state.,"SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county","Input: List the state names and the number of customers living in each state. Answer: SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county
"
"What are the name of rooms booked by customers whose first name has ""ROY"" in part?",SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%',"Input: What are the name of rooms booked by customers whose first name has ""ROY"" in part? Answer: SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'
"
Find the number of followers for each user.,SELECT count(*) FROM follows GROUP BY f1,"Input: Find the number of followers for each user. Answer: SELECT count(*) FROM follows GROUP BY f1
"
Show all flight number from Los Angeles.,"SELECT flno FROM Flight WHERE origin  =  ""Los Angeles""","Input: Show all flight number from Los Angeles. Answer: SELECT flno FROM Flight WHERE origin  =  ""Los Angeles""
"
What are the numbers of the shortest flights?,SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3,"Input: What are the numbers of the shortest flights? Answer: SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3
"
How many distinct governors are there?,SELECT count(DISTINCT Governor) FROM party,"Input: How many distinct governors are there? Answer: SELECT count(DISTINCT Governor) FROM party
"
Show the distinct position of players from college UCLA or Duke.,"SELECT DISTINCT POSITION FROM match_season WHERE College  =  ""UCLA"" OR College  =  ""Duke""","Input: Show the distinct position of players from college UCLA or Duke. Answer: SELECT DISTINCT POSITION FROM match_season WHERE College  =  ""UCLA"" OR College  =  ""Duke""
"
How many stores are there?,SELECT count(*) FROM store,"Input: How many stores are there? Answer: SELECT count(*) FROM store
"
Find the names of patients who are not using the medication of Procrastin-X.,SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X',"Input: Find the names of patients who are not using the medication of Procrastin-X. Answer: SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'
"
Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.,SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000,"Input: Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000. Answer: SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000
"
List all the names of schools with an endowment amount smaller than or equal to 10.,SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10,"Input: List all the names of schools with an endowment amount smaller than or equal to 10. Answer: SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10
"
"Show the teams that have both wrestlers eliminated by ""Orton"" and wrestlers eliminated by ""Benjamin"".","SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Orton"" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Benjamin""","Input: Show the teams that have both wrestlers eliminated by ""Orton"" and wrestlers eliminated by ""Benjamin"". Answer: SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Orton"" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  ""Benjamin""
"
Which countries have at least 3 cities?,SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3,"Input: Which countries have at least 3 cities? Answer: SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3
"
How many leagues are there in England?,"SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  ""England""","Input: How many leagues are there in England? Answer: SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  ""England""
"
What are the ids of the two department store chains with the largest number of department stores?,SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2,"Input: What are the ids of the two department store chains with the largest number of department stores? Answer: SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2
"
"What are the census rankings of cities that do not have the status ""Village""?","SELECT Census_Ranking FROM city WHERE Status !=  ""Village""","Input: What are the census rankings of cities that do not have the status ""Village""? Answer: SELECT Census_Ranking FROM city WHERE Status !=  ""Village""
"
Show the id and name of the employee with maximum salary.,"SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1","Input: Show the id and name of the employee with maximum salary. Answer: SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1
"
How many distinct official languages are there among countries of players whose positions are defenders.,"SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Defender""","Input: How many distinct official languages are there among countries of players whose positions are defenders. Answer: SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  ""Defender""
"
Find the number of users who posted some tweets.,SELECT count(DISTINCT UID) FROM tweets,"Input: Find the number of users who posted some tweets. Answer: SELECT count(DISTINCT UID) FROM tweets
"
Return the name of each physician and the number of patients he or she treats.,"SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid","Input: Return the name of each physician and the number of patients he or she treats. Answer: SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid
"
What are the names of the physicians who have 'senior' in their titles.,SELECT name FROM physician WHERE POSITION LIKE '%senior%',"Input: What are the names of the physicians who have 'senior' in their titles. Answer: SELECT name FROM physician WHERE POSITION LIKE '%senior%'
"
Return the names of wrestlers with fewer than 100 days held.,SELECT Name FROM wrestler WHERE Days_held  <  100,"Input: Return the names of wrestlers with fewer than 100 days held. Answer: SELECT Name FROM wrestler WHERE Days_held  <  100
"
Tell me the distinct block codes where some rooms are available.,SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0,"Input: Tell me the distinct block codes where some rooms are available. Answer: SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0
"
Which channels are not owned by CCTV? Give me the channel names.,SELECT name FROM channel WHERE OWNER != 'CCTV',"Input: Which channels are not owned by CCTV? Give me the channel names. Answer: SELECT name FROM channel WHERE OWNER != 'CCTV'
"
What are id and name of the products whose price is lower than 600 or higher than 900?,"SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900","Input: What are id and name of the products whose price is lower than 600 or higher than 900? Answer: SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900
"
What is the average number of employees of the departments whose rank is between 10 and 15?,SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15,"Input: What is the average number of employees of the departments whose rank is between 10 and 15? Answer: SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15
"
Show names for all employees who do not have certificate of Boeing 737-800.,"SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  ""Boeing 737-800""","Input: Show names for all employees who do not have certificate of Boeing 737-800. Answer: SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  ""Boeing 737-800""
"
What is the name of the nurse has the most appointments?,SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the nurse has the most appointments? Answer: SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1
"
Count the number of items store 1 has in stock.,SELECT count(*) FROM inventory WHERE store_id  =  1,"Input: Count the number of items store 1 has in stock. Answer: SELECT count(*) FROM inventory WHERE store_id  =  1
"
What are the id and name of the mountains that have at least 2 photos?,"SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2","Input: What are the id and name of the mountains that have at least 2 photos? Answer: SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2
"
Return the name and gender of the staff who was assigned in 2016.,"SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""","Input: Return the name and gender of the staff who was assigned in 2016. Answer: SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE ""2016%""
"
Give the product id for the product that was ordered most frequently.,SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1,"Input: Give the product id for the product that was ordered most frequently. Answer: SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1
"
List the names of buildings with at least 200 feet of height and with at least 20 floors.,SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20,"Input: List the names of buildings with at least 200 feet of height and with at least 20 floors. Answer: SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20
"
Find the names of schools that have more than one donator with donation amount above 8.5.,SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1,"Input: Find the names of schools that have more than one donator with donation amount above 8.5. Answer: SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1
"
How many distinct delegates are from counties with population larger than 50000?,SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000,"Input: How many distinct delegates are from counties with population larger than 50000? Answer: SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000
"
What are the distinct names of customers who have purchased at least three different products?,SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3,"Input: What are the distinct names of customers who have purchased at least three different products? Answer: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3
"
"Return the different statuses of cities, ascending by frequency.",SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC,"Input: Return the different statuses of cities, ascending by frequency. Answer: SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC
"
Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?,SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2,"Input: Who were the comptrollers of the parties associated with the delegates from district 1 or district 2? Answer: SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2
"
Return the text of tweets about the topic 'intern'.,SELECT text FROM tweets WHERE text LIKE '%intern%',"Input: Return the text of tweets about the topic 'intern'. Answer: SELECT text FROM tweets WHERE text LIKE '%intern%'
"
What are names of patients who made an appointment?,SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn,"Input: What are names of patients who made an appointment? Answer: SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn
"
Find the number of tweets in record.,SELECT count(*) FROM tweets,"Input: Find the number of tweets in record. Answer: SELECT count(*) FROM tweets
"
What is the most popular first name of the actors?,SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1,"Input: What is the most popular first name of the actors? Answer: SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1
"
Show names for all aircraft with at least two flights.,SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2,"Input: Show names for all aircraft with at least two flights. Answer: SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2
"
What is the average price for flights from LA to Honolulu?,"SELECT avg(price) FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""","Input: What is the average price for flights from LA to Honolulu? Answer: SELECT avg(price) FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""
"
Find the name of physicians who are affiliated with Surgery or Psychiatry department.,SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry',"Input: Find the name of physicians who are affiliated with Surgery or Psychiatry department. Answer: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'
"
"Of all players with an overall rating greater than 80, how many are right-footed and left-footed?","SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot","Input: Of all players with an overall rating greater than 80, how many are right-footed and left-footed? Answer: SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot
"
Show institution names along with the number of proteins for each institution.,"SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id","Input: Show institution names along with the number of proteins for each institution. Answer: SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id
"
Find the physician who prescribed the highest dose. What is his or her name?,SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1,"Input: Find the physician who prescribed the highest dose. What is his or her name? Answer: SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1
"
"For each party, return the name of the party and the number of delegates from that party.","SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party","Input: For each party, return the name of the party and the number of delegates from that party. Answer: SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party
"
"How many distinct programs are broadcast at ""Night"" time?",SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night',"Input: How many distinct programs are broadcast at ""Night"" time? Answer: SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'
"
"For each county, find the name of the county and the number of delegates from that county.","SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id","Input: For each county, find the name of the county and the number of delegates from that county. Answer: SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id
"
What are the names of all the clubs starting with the oldest?,SELECT name FROM club ORDER BY Start_year ASC,"Input: What are the names of all the clubs starting with the oldest? Answer: SELECT name FROM club ORDER BY Start_year ASC
"
What is the name of the wrestler with the fewest days held?,SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1,"Input: What is the name of the wrestler with the fewest days held? Answer: SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1
"
Who are the owners of the programs that broadcast both in the morning and at night?,"SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning"" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Night""","Input: Who are the owners of the programs that broadcast both in the morning and at night? Answer: SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Morning"" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  ""Night""
"
Which destination has least number of flights?,SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1,"Input: Which destination has least number of flights? Answer: SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1
"
Return all the information for each election record.,SELECT * FROM election,"Input: Return all the information for each election record. Answer: SELECT * FROM election
"
Which physician was trained in the procedure that costs the most.,SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1,"Input: Which physician was trained in the procedure that costs the most. Answer: SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1
"
How many patients stay in room 112?,SELECT count(patient) FROM stay WHERE room  =  112,"Input: How many patients stay in room 112? Answer: SELECT count(patient) FROM stay WHERE room  =  112
"
"Find the names of the users whose number of followers is greater than that of the user named ""Tyler Swift"".",SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift'),"Input: Find the names of the users whose number of followers is greater than that of the user named ""Tyler Swift"". Answer: SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')
"
What is the genre name of the film HUNGER ROOF?,SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF',"Input: What is the genre name of the film HUNGER ROOF? Answer: SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'
"
Which patients made more than one appointment? Tell me the name and phone number of these patients.,"SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1","Input: Which patients made more than one appointment? Tell me the name and phone number of these patients. Answer: SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1
"
Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.,"SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""","Input: Show me the departure date and arrival date for all flights from Los Angeles to Honolulu. Answer: SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  ""Los Angeles"" AND destination  =  ""Honolulu""
"
Find the number of patients who are not using the medication of Procrastin-X.,SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' ),"Input: Find the number of patients who are not using the medication of Procrastin-X. Answer: SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )
"
Find the names of all the catalog entries.,SELECT distinct(catalog_entry_name) FROM catalog_contents,"Input: Find the names of all the catalog entries. Answer: SELECT distinct(catalog_entry_name) FROM catalog_contents
"
What are the names of catalog entries with level number 8?,"SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""","Input: What are the names of catalog entries with level number 8? Answer: SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  ""8""
"
Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.,SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000,"Input: Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment. Answer: SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000
"
Find the name and partition id for users who tweeted less than twice.,"SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2","Input: Find the name and partition id for users who tweeted less than twice. Answer: SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2
"
"List the name, born state and age of the heads of departments ordered by age.","SELECT name ,  born_state ,  age FROM head ORDER BY age","Input: List the name, born state and age of the heads of departments ordered by age. Answer: SELECT name ,  born_state ,  age FROM head ORDER BY age
"
What are the name and primarily affiliated department name of each physician?,"SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1","Input: What are the name and primarily affiliated department name of each physician? Answer: SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1
"
What is the flight number and its distance for the one with the maximum price?,"SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1","Input: What is the flight number and its distance for the one with the maximum price? Answer: SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1
"
What is the average number of gold medals for clubs?,SELECT avg(Gold) FROM club_rank,"Input: What is the average number of gold medals for clubs? Answer: SELECT avg(Gold) FROM club_rank
"
Find the names of products that were bought by at least two distinct customers.,SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2,"Input: Find the names of products that were bought by at least two distinct customers. Answer: SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2
"
How many camera lenses are not used in taking any photos?,SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ),"Input: How many camera lenses are not used in taking any photos? Answer: SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )
"
How many performances are there?,SELECT count(*) FROM performance,"Input: How many performances are there? Answer: SELECT count(*) FROM performance
"
In which year were most departments established?,SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1,"Input: In which year were most departments established? Answer: SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1
"
What is the id and name of the aircraft that can cover the maximum distance?,"SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1","Input: What is the id and name of the aircraft that can cover the maximum distance? Answer: SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1
"
What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.,"SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)","Input: What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos. Answer: SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)
"
"Which parties have delegates in both the ""Appropriations"" committee and the ""Economic Matters"" committee?","SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Appropriations"" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Economic Matters""","Input: Which parties have delegates in both the ""Appropriations"" committee and the ""Economic Matters"" committee? Answer: SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Appropriations"" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  ""Economic Matters""
"
Find the maximum and total number of followers of all users.,"SELECT max(followers) ,  sum(followers) FROM user_profiles","Input: Find the maximum and total number of followers of all users. Answer: SELECT max(followers) ,  sum(followers) FROM user_profiles
"
Which program was launched most recently? Return the program name.,SELECT name FROM program ORDER BY launch DESC LIMIT 1,"Input: Which program was launched most recently? Return the program name. Answer: SELECT name FROM program ORDER BY launch DESC LIMIT 1
"
How many players are from each country?,"SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name","Input: How many players are from each country? Answer: SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name
"
"List the camera lens names containing substring ""Digital"".","SELECT name FROM camera_lens WHERE name LIKE ""%Digital%""","Input: List the camera lens names containing substring ""Digital"". Answer: SELECT name FROM camera_lens WHERE name LIKE ""%Digital%""
"
What is the level name of the cheapest catalog (in USD)?,SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1,"Input: What is the level name of the cheapest catalog (in USD)? Answer: SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1
"
How many users are there?,SELECT count(*) FROM user_profiles,"Input: How many users are there? Answer: SELECT count(*) FROM user_profiles
"
Who are the lieutenant governor and comptroller from the democratic party?,"SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""","Input: Who are the lieutenant governor and comptroller from the democratic party? Answer: SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  ""Democratic""
"
Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.,SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products),"Input: Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products. Answer: SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)
"
Show the names of all the donors except those whose donation amount less than 9.,SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9,"Input: Show the names of all the donors except those whose donation amount less than 9. Answer: SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9
"
Which film has the highest rental rate? And what is the rate?,"SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1","Input: Which film has the highest rental rate? And what is the rate? Answer: SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1
"
"What is the total horses record for each farm, sorted ascending?",SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC,"Input: What is the total horses record for each farm, sorted ascending? Answer: SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC
"
List all country and league names.,"SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id","Input: List all country and league names. Answer: SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id
"
"What are all the players who played in match season, sorted by college in ascending alphabetical order?",SELECT player FROM match_season ORDER BY College ASC,"Input: What are all the players who played in match season, sorted by college in ascending alphabetical order? Answer: SELECT player FROM match_season ORDER BY College ASC
"
Show the names of counties that have at least two delegates.,SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2,"Input: Show the names of counties that have at least two delegates. Answer: SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2
"
Return the staff ids and genders for any staff with the title Department Manager.,"SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Department Manager""","Input: Return the staff ids and genders for any staff with the title Department Manager. Answer: SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Department Manager""
"
find the total percentage share of all channels owned by CCTV.,SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV',"Input: find the total percentage share of all channels owned by CCTV. Answer: SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'
"
What are the names of all colleges that have two or more players?,SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2,"Input: What are the names of all colleges that have two or more players? Answer: SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2
"
Show all the distinct districts for elections.,SELECT DISTINCT District FROM election,"Input: Show all the distinct districts for elections. Answer: SELECT DISTINCT District FROM election
"
What are the names of the aircraft that the least people are certified to fly?,SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1,"Input: What are the names of the aircraft that the least people are certified to fly? Answer: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1
"
When did the first payment happen?,SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1,"Input: When did the first payment happen? Answer: SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1
"
What are the times of elimination for wrestlers with over 50 days held?,SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50,"Input: What are the times of elimination for wrestlers with over 50 days held? Answer: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50
"
What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?,SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama',"Input: What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'? Answer: SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'
"
What are the names of the cameras that have taken picture of the most mountains?,SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1,"Input: What are the names of the cameras that have taken picture of the most mountains? Answer: SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1
"
Which language does the film AIRPORT POLLOCK use? List the language name.,SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK',"Input: Which language does the film AIRPORT POLLOCK use? List the language name. Answer: SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'
"
What is the average rating for right-footed players and left-footed players?,"SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot","Input: What is the average rating for right-footed players and left-footed players? Answer: SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot
"
"What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?","SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin","Input: What is the flight number, origin, and destination for all flights in alphabetical order by departure cities? Answer: SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin
"
List all of the player ids with a height of at least 180cm and an overall rating higher than 85.,SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85,"Input: List all of the player ids with a height of at least 180cm and an overall rating higher than 85. Answer: SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85
"
"How many donors have endowment for school named ""Glenn""?","SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  ""Glenn""","Input: How many donors have endowment for school named ""Glenn""? Answer: SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  ""Glenn""
"
What are the names of the heads who are born outside the California state?,SELECT name FROM head WHERE born_state != 'California',"Input: What are the names of the heads who are born outside the California state? Answer: SELECT name FROM head WHERE born_state != 'California'
"
"Show each school name, its budgeted amount, and invested amount in year 2002 or after.","SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002","Input: Show each school name, its budgeted amount, and invested amount in year 2002 or after. Answer: SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002
"
"Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.","SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1","Input: Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id. Answer: SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1
"
"Among the procedures that cost more than 1000, which were not specialized in by physician John Wen?","SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""","Input: Among the procedures that cost more than 1000, which were not specialized in by physician John Wen? Answer: SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  ""John Wen""
"
What are the names of wrestlers and the elimination moves?,"SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID","Input: What are the names of wrestlers and the elimination moves? Answer: SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID
"
Return the maximum and minimum customer codes.,"SELECT max(customer_code) ,  min(customer_code) FROM Customers","Input: Return the maximum and minimum customer codes. Answer: SELECT max(customer_code) ,  min(customer_code) FROM Customers
"
Which channels are broadcast in the morning? Give me the channel names.,SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning',"Input: Which channels are broadcast in the morning? Give me the channel names. Answer: SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'
"
List the names and birthdays of the top five players in terms of potential.,"SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5","Input: List the names and birthdays of the top five players in terms of potential. Answer: SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5
"
What are the names of players who have the best dribbling?,SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes),"Input: What are the names of players who have the best dribbling? Answer: SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)
"
Find the names of all patients who have an undergoing treatment and are staying in room 111.,SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111,"Input: Find the names of all patients who have an undergoing treatment and are staying in room 111. Answer: SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111
"
How many acting statuses are there?,SELECT count(DISTINCT temporary_acting) FROM management,"Input: How many acting statuses are there? Answer: SELECT count(DISTINCT temporary_acting) FROM management
"
What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?,SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' ),"Input: What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'? Answer: SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )
"
Show the name of aircrafts with top three lowest distances.,SELECT name FROM Aircraft ORDER BY distance LIMIT 3,"Input: Show the name of aircrafts with top three lowest distances. Answer: SELECT name FROM Aircraft ORDER BY distance LIMIT 3
"
List the names of all players who have a crossing score higher than 90 and prefer their right foot.,"SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  ""right""","Input: List the names of all players who have a crossing score higher than 90 and prefer their right foot. Answer: SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  ""right""
"
What are the distinct ages of the heads who are acting?,SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes',"Input: What are the distinct ages of the heads who are acting? Answer: SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'
"
"In which distinct years was the governor ""Eliot Spitzer""?","SELECT DISTINCT YEAR FROM party WHERE Governor  =  ""Eliot Spitzer""","Input: In which distinct years was the governor ""Eliot Spitzer""? Answer: SELECT DISTINCT YEAR FROM party WHERE Governor  =  ""Eliot Spitzer""
"
List the names of editors that are not on any journal committee.,SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee),"Input: List the names of editors that are not on any journal committee. Answer: SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)
"
Return the names and ids of customers who have TN in their address.,"SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE ""%TN%""","Input: Return the names and ids of customers who have TN in their address. Answer: SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE ""%TN%""
"
What are the full names of actors who had roles in more than 30 films?,"SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30","Input: What are the full names of actors who had roles in more than 30 films? Answer: SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30
"
"What are the title, id, and description of the movie with the greatest number of actors?","SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1","Input: What are the title, id, and description of the movie with the greatest number of actors? Answer: SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1
"
List all program origins in the alphabetical order.,SELECT origin FROM program ORDER BY origin,"Input: List all program origins in the alphabetical order. Answer: SELECT origin FROM program ORDER BY origin
"
How many editors are there?,SELECT count(*) FROM editor,"Input: How many editors are there? Answer: SELECT count(*) FROM editor
"
What is the name of the patient who made the most recent appointment?,SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1,"Input: What is the name of the patient who made the most recent appointment? Answer: SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1
"
Find the names of users who have more than one tweet.,SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1,"Input: Find the names of users who have more than one tweet. Answer: SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1
"
How many employees do we have?,SELECT count(*) FROM Employee,"Input: How many employees do we have? Answer: SELECT count(*) FROM Employee
"
How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?,SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia',"Input: How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'? Answer: SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'
"
How many farms are there?,SELECT count(*) FROM farm,"Input: How many farms are there? Answer: SELECT count(*) FROM farm
"
Show the names and heights of buildings with at least two institutions founded after 1880.,"SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2","Input: Show the names and heights of buildings with at least two institutions founded after 1880. Answer: SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2
"
What are the statuses and average populations of each city?,"SELECT Status ,  avg(Population) FROM city GROUP BY Status","Input: What are the statuses and average populations of each city? Answer: SELECT Status ,  avg(Population) FROM city GROUP BY Status
"
What place has the most flights coming from there?,SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1,"Input: What place has the most flights coming from there? Answer: SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
"
What is the alphabetically ordered list of all distinct medications?,SELECT DISTINCT name FROM medication ORDER BY name,"Input: What is the alphabetically ordered list of all distinct medications? Answer: SELECT DISTINCT name FROM medication ORDER BY name
"
What is the total number of clubs that have less than 10 medals in total?,SELECT count(*) FROM club_rank WHERE Total  <  10,"Input: What is the total number of clubs that have less than 10 medals in total? Answer: SELECT count(*) FROM club_rank WHERE Total  <  10
"
Find the name and email for the users who have more than one follower.,"SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1","Input: Find the name and email for the users who have more than one follower. Answer: SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1
"
List the amount and donor name for the largest amount of donation.,"SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1","Input: List the amount and donor name for the largest amount of donation. Answer: SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1
"
What are all the movies rated as R? List the titles.,SELECT title FROM film WHERE rating  =  'R',"Input: What are all the movies rated as R? List the titles. Answer: SELECT title FROM film WHERE rating  =  'R'
"
"For each player, what are their name, season, and country that they belong to?","SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country","Input: For each player, what are their name, season, and country that they belong to? Answer: SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country
"
How many camera lenses have a focal length longer than 15 mm?,SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15,"Input: How many camera lenses have a focal length longer than 15 mm? Answer: SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15
"
Find the name of the program that is broadcast most frequently.,SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1,"Input: Find the name of the program that is broadcast most frequently. Answer: SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1
"
"List all the product names with the color description ""white"".","SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""white""","Input: List all the product names with the color description ""white"". Answer: SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  ""white""
"
What is the name of the customer that made the order with the largest quantity?,SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items),"Input: What is the name of the customer that made the order with the largest quantity? Answer: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)
"
Find the name of companies that do not make DVD drive.,SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive',"Input: Find the name of companies that do not make DVD drive. Answer: SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'
"
Show the names and main services for train stations that have the top three total number of passengers.,"SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3","Input: Show the names and main services for train stations that have the top three total number of passengers. Answer: SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3
"
Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.,"SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  ""John Anthony"")","Input: Find the distinct names of all wines that have prices higher than some wines from John Anthony winery. Answer: SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  ""John Anthony"")
"
"Return the number of customers who have at least one order with ""Cancelled"" status.","SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  ""Cancelled""","Input: Return the number of customers who have at least one order with ""Cancelled"" status. Answer: SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  ""Cancelled""
"
What is the most common amenity in the dorms?,SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1,"Input: What is the most common amenity in the dorms? Answer: SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1
"
How many students participated in tryouts for each college by descennding count?,"SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC","Input: How many students participated in tryouts for each college by descennding count? Answer: SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC
"
What are the names and revenues of the companies with the highest revenues in each headquarter city?,"SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter","Input: What are the names and revenues of the companies with the highest revenues in each headquarter city? Answer: SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter
"
Show the statuses of roller coasters longer than 3300 or higher than 100.,SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100,"Input: Show the statuses of roller coasters longer than 3300 or higher than 100. Answer: SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100
"
Find the name of customers who are living in Colorado?,"SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  ""Colorado""","Input: Find the name of customers who are living in Colorado? Answer: SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  ""Colorado""
"
Find the name of dorms that do not have amenity TV Lounge.,SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge',"Input: Find the name of dorms that do not have amenity TV Lounge. Answer: SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'
"
What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?,"SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""","Input: What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana? Answer: SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = ""LA""
"
Show the station name with at least two trains.,SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2,"Input: Show the station name with at least two trains. Answer: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2
"
What are the appelations for wines produced after 2008 but not in the Central Coast area?,"SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  ""Central Coast""","Input: What are the appelations for wines produced after 2008 but not in the Central Coast area? Answer: SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  ""Central Coast""
"
What are the descriptions of the categories that products with product descriptions that contain the letter t are in?,SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%',"Input: What are the descriptions of the categories that products with product descriptions that contain the letter t are in? Answer: SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'
"
Find the name of companies whose revenue is greater than the average revenue of all companies.,SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers),"Input: Find the name of companies whose revenue is greater than the average revenue of all companies. Answer: SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)
"
What are the average prices of products for each manufacturer?,"SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name","Input: What are the average prices of products for each manufacturer? Answer: SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name
"
Find the name of the tryout players who are from the college with largest size.,SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1),"Input: Find the name of the tryout players who are from the college with largest size. Answer: SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)
"
How many students whose are playing the role of goalie?,SELECT count(*) FROM tryout WHERE pPos  =  'goalie',"Input: How many students whose are playing the role of goalie? Answer: SELECT count(*) FROM tryout WHERE pPos  =  'goalie'
"
Show the names of countries and the average speed of roller coasters from each country.,"SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name","Input: Show the names of countries and the average speed of roller coasters from each country. Answer: SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name
"
Find the captain rank that has no captain in Third-rate ship of the line class.,SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line',"Input: Find the captain rank that has no captain in Third-rate ship of the line class. Answer: SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'
"
What are the names of the clients who do not have any booking?,SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID,"Input: What are the names of the clients who do not have any booking? Answer: SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID
"
List the names of roller coasters by ascending order of length.,SELECT Name FROM roller_coaster ORDER BY LENGTH ASC,"Input: List the names of roller coasters by ascending order of length. Answer: SELECT Name FROM roller_coaster ORDER BY LENGTH ASC
"
How many students got accepted after the tryout?,SELECT count(*) FROM tryout WHERE decision  =  'yes',"Input: How many students got accepted after the tryout? Answer: SELECT count(*) FROM tryout WHERE decision  =  'yes'
"
"What is all the product data, as well as  each product's manufacturer?",SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code,"Input: What is all the product data, as well as  each product's manufacturer? Answer: SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code
"
What is the payment method of the customer that has purchased the least quantity of items?,SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1,"Input: What is the payment method of the customer that has purchased the least quantity of items? Answer: SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1
"
List the branch name and city without any registered members.,"SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)","Input: List the branch name and city without any registered members. Answer: SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)
"
Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.,"SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1","Input: Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross. Answer: SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1
"
Find the name and training hours of players whose hours are below 1500.,"SELECT pName ,  HS FROM Player WHERE HS  <  1500","Input: Find the name and training hours of players whose hours are below 1500. Answer: SELECT pName ,  HS FROM Player WHERE HS  <  1500
"
Find the names of states that have some college students playing in goalie and mid positions.,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid',"Input: Find the names of states that have some college students playing in goalie and mid positions. Answer: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'
"
Find the number of distinct products Rodrick Heaney has bought so far.,"SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""","Input: Find the number of distinct products Rodrick Heaney has bought so far. Answer: SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  ""Rodrick Heaney""
"
Find the average hours for the students whose tryout decision is no.,SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no',"Input: Find the average hours for the students whose tryout decision is no. Answer: SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'
"
What are the actual delivery dates of orders with quantity 1?,SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1,"Input: What are the actual delivery dates of orders with quantity 1? Answer: SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1
"
What is the name and opening year for the branch that registered the most members in 2016?,"SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1","Input: What is the name and opening year for the branch that registered the most members in 2016? Answer: SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1
"
Find the name and hours of the students whose tryout decision is yes.,"SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","Input: Find the name and hours of the students whose tryout decision is yes. Answer: SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'
"
"What are the average prices of products, grouped by manufacturer name?","SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name","Input: What are the average prices of products, grouped by manufacturer name? Answer: SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name
"
Find the states of the colleges that have students in the tryout who played in striker position.,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker',"Input: Find the states of the colleges that have students in the tryout who played in striker position. Answer: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'
"
Where is the headquarter of the company founded by James?,SELECT headquarter FROM manufacturers WHERE founder  =  'James',"Input: Where is the headquarter of the company founded by James? Answer: SELECT headquarter FROM manufacturers WHERE founder  =  'James'
"
What are the store names of drama workshop groups?,SELECT Store_Name FROM Drama_Workshop_Groups,"Input: What are the store names of drama workshop groups? Answer: SELECT Store_Name FROM Drama_Workshop_Groups
"
"What is the total number of products that are in orders with status ""Cancelled""?","SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  ""Cancelled""","Input: What is the total number of products that are in orders with status ""Cancelled""? Answer: SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  ""Cancelled""
"
What are names of customers who never ordered product Latte.,SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte',"Input: What are names of customers who never ordered product Latte. Answer: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'
"
Find the average and maximum hours for the students whose tryout decision is yes.,"SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'","Input: Find the average and maximum hours for the students whose tryout decision is yes. Answer: SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'
"
What are the email addresses of the drama workshop groups with address in Alaska state?,"SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  ""Alaska""","Input: What are the email addresses of the drama workshop groups with address in Alaska state? Answer: SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  ""Alaska""
"
Count the number of colors.,SELECT count(*) FROM ref_colors,"Input: Count the number of colors. Answer: SELECT count(*) FROM ref_colors
"
Find the captain rank that has some captains in both Cutter and Armed schooner classes.,SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner',"Input: Find the captain rank that has some captains in both Cutter and Armed schooner classes. Answer: SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'
"
What is the average price of wines produced in appelations in Sonoma County?,"SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Sonoma""","Input: What is the average price of wines produced in appelations in Sonoma County? Answer: SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  ""Sonoma""
"
"For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?","SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos","Input: For each position, what is the maximum number of  hours for students who spent more than 1000 hours training? Answer: SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos
"
List the object number of railways that do not have any trains.,SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train),"Input: List the object number of railways that do not have any trains. Answer: SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)
"
"Show the customer name, customer address city, date from, and date to for each customer address history.","SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id","Input: Show the customer name, customer address city, date from, and date to for each customer address history. Answer: SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id
"
What are the names of the members and branches at which they are registered sorted by year of registration?,"SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year","Input: What are the names of the members and branches at which they are registered sorted by year of registration? Answer: SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year
"
Find the names of the students who are in the position of striker and got a yes tryout decision.,SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker',"Input: Find the names of the students who are in the position of striker and got a yes tryout decision. Answer: SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'
"
"What are the years, titles, and publishers for all books, ordered by year descending?","SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC","Input: What are the years, titles, and publishers for all books, ordered by year descending? Answer: SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC
"
Return the the names of the drama workshop groups that are located in Feliciaberg city.,"SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  ""Feliciaberg""","Input: Return the the names of the drama workshop groups that are located in Feliciaberg city. Answer: SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  ""Feliciaberg""
"
Find the states where have the colleges whose enrollments are less than the largest size.,SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college),"Input: Find the states where have the colleges whose enrollments are less than the largest size. Answer: SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)
"
What are the member names and hometowns of those who registered at a branch in 2016?,"SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016","Input: What are the member names and hometowns of those who registered at a branch in 2016? Answer: SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016
"
What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?,"SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""","Input: What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape? Answer: SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  ""Zinfandel""
"
Show the product name and total order quantity for each product.,"SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id","Input: Show the product name and total order quantity for each product. Answer: SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id
"
Find the name of different colleges involved in the tryout in alphabetical order.,SELECT DISTINCT cName FROM tryout ORDER BY cName,"Input: Find the name of different colleges involved in the tryout in alphabetical order. Answer: SELECT DISTINCT cName FROM tryout ORDER BY cName
"
What is the name of the product with the color description 'yellow'?,SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow',"Input: What is the name of the product with the color description 'yellow'? Answer: SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'
"
List the names of all distinct wines that are made of red color grape.,"SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red""","Input: List the names of all distinct wines that are made of red color grape. Answer: SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""Red""
"
Find the city where the most customers live.,SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1,"Input: Find the city where the most customers live. Answer: SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1
"
List the description of all the colors.,SELECT color_description FROM ref_colors,"Input: List the description of all the colors. Answer: SELECT color_description FROM ref_colors
"
"What are the card numbers, names, and hometowns of every member ordered by descending level?","SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC","Input: What are the card numbers, names, and hometowns of every member ordered by descending level? Answer: SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC
"
Find the number and average age of students living in each city.,"SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code","Input: Find the number and average age of students living in each city. Answer: SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code
"
What are the dates when customers with ids between 10 and 20 became customers?,SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20,"Input: What are the dates when customers with ids between 10 and 20 became customers? Answer: SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20
"
Find the white grape used to produce wines with scores above 90.,"SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White"" AND T2.score  >  90","Input: Find the white grape used to produce wines with scores above 90. Answer: SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White"" AND T2.score  >  90
"
Find the name of the swimmer who has at least 2 records.,SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2,"Input: Find the name of the swimmer who has at least 2 records. Answer: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2
"
"Return the address content for the customer whose name is ""Maudie Kertzmann"".","SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  ""Maudie Kertzmann""","Input: Return the address content for the customer whose name is ""Maudie Kertzmann"". Answer: SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  ""Maudie Kertzmann""
"
Find the names of schools that have some players in the mid position but not in the goalie position.,SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie',"Input: Find the names of schools that have some players in the mid position but not in the goalie position. Answer: SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'
"
"Show different builders of railways, along with the corresponding number of railways using each builder.","SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder","Input: Show different builders of railways, along with the corresponding number of railways using each builder. Answer: SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder
"
How many drama workshop groups are there in each city? Return both the city and the count.,"SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town","Input: How many drama workshop groups are there in each city? Return both the city and the count. Answer: SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town
"
"Show the name, location, and number of platforms for all stations.","SELECT name ,  LOCATION ,  number_of_platforms FROM station","Input: Show the name, location, and number of platforms for all stations. Answer: SELECT name ,  LOCATION ,  number_of_platforms FROM station
"
What are the total purchases for members rated at level 6?,SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6,"Input: What are the total purchases for members rated at level 6? Answer: SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6
"
"What is the ""active to date"" of the latest contact channel used by ""Tillman Ernser""?","SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""","Input: What is the ""active to date"" of the latest contact channel used by ""Tillman Ernser""? Answer: SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""
"
"Find the number of products with category ""Spices"" and typically sold above 1000.","SELECT count(*) FROM products WHERE product_category_code  =  ""Spices"" AND typical_buying_price  >  1000","Input: Find the number of products with category ""Spices"" and typically sold above 1000. Answer: SELECT count(*) FROM products WHERE product_category_code  =  ""Spices"" AND typical_buying_price  >  1000
"
Count the number of characteristics of the product named 'laurel'.,"SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""laurel""","Input: Count the number of characteristics of the product named 'laurel'. Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  ""laurel""
"
Which 3 wineries produce the most wines made from white grapes?,"SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3","Input: Which 3 wineries produce the most wines made from white grapes? Answer: SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  ""White"" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3
"
"Return the average, maximum, and total revenues across all manufacturers.","SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers","Input: Return the average, maximum, and total revenues across all manufacturers. Answer: SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers
"
What are the order details of the products with price higher than 2000?,SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000,"Input: What are the order details of the products with price higher than 2000? Answer: SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000
"
Find the name and active date of the customer that use email as the contact channel.,"SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'","Input: Find the name and active date of the customer that use email as the contact channel. Answer: SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'
"
"Find the product names that are colored 'white' but do not have unit of measurement ""Handful"".","SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  ""white"" AND t2.unit_of_measure != ""Handful""","Input: Find the product names that are colored 'white' but do not have unit of measurement ""Handful"". Answer: SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  ""white"" AND t2.unit_of_measure != ""Handful""
"
What is the total number of enrollment of schools that do not have any goalie player?,"SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")","Input: What is the total number of enrollment of schools that do not have any goalie player? Answer: SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  ""goalie"")
"
"Compute the total order quantities of the product ""photo"".","SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  ""photo""","Input: Compute the total order quantities of the product ""photo"". Answer: SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  ""photo""
"
"What are the names, details and data types of the characteristics which are never used by any product?","SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id","Input: What are the names, details and data types of the characteristics which are never used by any product? Answer: SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id
"
Count the number of colors that are not used in any products.,SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products ),"Input: Count the number of colors that are not used in any products. Answer: SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )
"
What are the cities that do not have any branches with more than 100 members?,SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100,"Input: What are the cities that do not have any branches with more than 100 members? Answer: SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100
"
What are the names of the colleges that are larger than at least one college in Florida?,SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL'),"Input: What are the names of the colleges that are larger than at least one college in Florida? Answer: SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')
"
What is the name of the event that happened in the most recent year?,SELECT name FROM event ORDER BY YEAR DESC LIMIT 1,"Input: What is the name of the event that happened in the most recent year? Answer: SELECT name FROM event ORDER BY YEAR DESC LIMIT 1
"
Show the station name with greatest number of trains.,SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1,"Input: Show the station name with greatest number of trains. Answer: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1
"
Show the number of trains,SELECT count(*) FROM train,"Input: Show the number of trains Answer: SELECT count(*) FROM train
"
Which marketing region has the most drama workshop groups? Give me the region code.,SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1,"Input: Which marketing region has the most drama workshop groups? Give me the region code. Answer: SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1
"
What are the resident details containing the substring 'Miss'?,SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%',"Input: What are the resident details containing the substring 'Miss'? Answer: SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'
"
How many customers do we have?,SELECT count(*) FROM CUSTOMERS,"Input: How many customers do we have? Answer: SELECT count(*) FROM CUSTOMERS
"
Compute the average active time span of contact channels.,SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels,"Input: Compute the average active time span of contact channels. Answer: SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels
"
Find the number of different products that are produced by companies at different headquarter cities.,"SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter","Input: Find the number of different products that are produced by companies at different headquarter cities. Answer: SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter
"
"Find the name and nationality of the swimmer who has won (i.e., has a result of ""win"") more than 1 time.","SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1","Input: Find the name and nationality of the swimmer who has won (i.e., has a result of ""win"") more than 1 time. Answer: SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1
"
Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.,SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin'),"Input: Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin. Answer: SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')
"
Find the number of female students (with F sex) living in Smith Hall,SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F',"Input: Find the number of female students (with F sex) living in Smith Hall Answer: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'
"
What is the last name of every student who is either female or living in a city with the code BAL or male and under 20?,SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20,"Input: What is the last name of every student who is either female or living in a city with the code BAL or male and under 20? Answer: SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20
"
What is the total revenue of companies started by founder?,"SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder","Input: What is the total revenue of companies started by founder? Answer: SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder
"
"What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.","SELECT address_content FROM addresses WHERE city  =  ""East Julianaside"" AND state_province_county  =  ""Texas"" UNION SELECT address_content FROM addresses WHERE city  =  ""Gleasonmouth"" AND state_province_county  =  ""Arizona""","Input: What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona. Answer: SELECT address_content FROM addresses WHERE city  =  ""East Julianaside"" AND state_province_county  =  ""Texas"" UNION SELECT address_content FROM addresses WHERE city  =  ""Gleasonmouth"" AND state_province_county  =  ""Arizona""
"
Give me the name of the customer who ordered the most items in total.,SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1,"Input: Give me the name of the customer who ordered the most items in total. Answer: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1
"
Show the id and builder of the railway that are associated with the most trains.,"SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1","Input: Show the id and builder of the railway that are associated with the most trains. Answer: SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1
"
Show all cities where at least one customer lives in but no performer lives in.,SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID,"Input: Show all cities where at least one customer lives in but no performer lives in. Answer: SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID
"
Find the average price of all product clothes.,SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes',"Input: Find the average price of all product clothes. Answer: SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'
"
How many states that have some college students playing in the mid position but not in the goalie position.,SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'),"Input: How many states that have some college students playing in the mid position but not in the goalie position. Answer: SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')
"
What are the names of products produced by both Creative Labs and Sony?,SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony',"Input: What are the names of products produced by both Creative Labs and Sony? Answer: SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'
"
Give the names of characteristics that are in two or more products?,SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2,"Input: Give the names of characteristics that are in two or more products? Answer: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2
"
Count the total number of bookings made.,SELECT count(*) FROM BOOKINGS,"Input: Count the total number of bookings made. Answer: SELECT count(*) FROM BOOKINGS
"
What are the planned delivery date and actual delivery date for each booking?,"SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS","Input: What are the planned delivery date and actual delivery date for each booking? Answer: SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS
"
Show id and location of railways that are associated with more than one train.,"SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1","Input: Show id and location of railways that are associated with more than one train. Answer: SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1
"
What are the name of the players who received a card in descending order of the hours of training?,SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC,"Input: What are the name of the players who received a card in descending order of the hours of training? Answer: SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC
"
How many products are there?,SELECT count(*) FROM products,"Input: How many products are there? Answer: SELECT count(*) FROM products
"
What are the speeds of the longest roller coaster?,SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1,"Input: What are the speeds of the longest roller coaster? Answer: SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1
"
List the distinct payment method codes with the number of orders made,"SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code","Input: List the distinct payment method codes with the number of orders made Answer: SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code
"
Find the name of amenities of the dorm where the student with last name Smith is living in.,SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith',"Input: Find the name of amenities of the dorm where the student with last name Smith is living in. Answer: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'
"
Find the distinct names of wines produced before the year of 2000 or after the year of 2010.,SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010,"Input: Find the distinct names of wines produced before the year of 2000 or after the year of 2010. Answer: SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010
"
Find the states where have some college students in tryout and their decisions are yes.,SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes',"Input: Find the states where have some college students in tryout and their decisions are yes. Answer: SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'
"
"What is the unit of measuerment of the product category code ""Herbs""?","SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""","Input: What is the unit of measuerment of the product category code ""Herbs""? Answer: SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  ""Herbs""
"
How many appelations are in Napa Country?,"SELECT count(*) FROM APPELLATIONS WHERE County  =  ""Napa""","Input: How many appelations are in Napa Country? Answer: SELECT count(*) FROM APPELLATIONS WHERE County  =  ""Napa""
"
What are the titles of movies and books corresponding to companies incorporated in China?,"SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'","Input: What are the titles of movies and books corresponding to companies incorporated in China? Answer: SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'
"
What are names for top three branches with most number of membership?,SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3,"Input: What are names for top three branches with most number of membership? Answer: SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3
"
How many stadiums are there?,SELECT count(*) FROM stadium,"Input: How many stadiums are there? Answer: SELECT count(*) FROM stadium
"
What is the product ID of the most frequently ordered item on invoices?,SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1,"Input: What is the product ID of the most frequently ordered item on invoices? Answer: SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1
"
Compute the number of products with a price larger than or equal to $180.,SELECT count(*) FROM products WHERE price >= 180,"Input: Compute the number of products with a price larger than or equal to $180. Answer: SELECT count(*) FROM products WHERE price >= 180
"
Show the station name and number of trains in each station.,"SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id","Input: Show the station name and number of trains in each station. Answer: SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id
"
Show the names of customers who use Credit Card payment method and have more than 2 orders.,SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2,"Input: Show the names of customers who use Credit Card payment method and have more than 2 orders. Answer: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2
"
How many students are enrolled in college?,SELECT sum(enr) FROM College,"Input: How many students are enrolled in college? Answer: SELECT sum(enr) FROM College
"
What are the titles and authors or editors that correspond to books made after 1989?,"SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989","Input: What are the titles and authors or editors that correspond to books made after 1989? Answer: SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989
"
In which state is the college that Charles attends?,SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles',"Input: In which state is the college that Charles attends? Answer: SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'
"
What are the names of all schools that have students trying out for the position of goal and 'mid'-field.,SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid',"Input: What are the names of all schools that have students trying out for the position of goal and 'mid'-field. Answer: SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'
"
Find the name of the most expensive hardware product.,SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1,"Input: Find the name of the most expensive hardware product. Answer: SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1
"
Find the names of stadiums that the most swimmers have been to.,SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1,"Input: Find the names of stadiums that the most swimmers have been to. Answer: SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1
"
What are the names of the schools with the top 3 largest class sizes?,SELECT cName FROM college ORDER BY enr DESC LIMIT 3,"Input: What are the names of the schools with the top 3 largest class sizes? Answer: SELECT cName FROM college ORDER BY enr DESC LIMIT 3
"
What is the area for the appelation which produced the most wines prior to 2010?,SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1,"Input: What is the area for the appelation which produced the most wines prior to 2010? Answer: SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1
"
Find all details for each swimmer.,SELECT * FROM swimmer,"Input: Find all details for each swimmer. Answer: SELECT * FROM swimmer
"
"Find the states or counties where the stores with marketing region code ""CA"" are located.","SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  ""CA""","Input: Find the states or counties where the stores with marketing region code ""CA"" are located. Answer: SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  ""CA""
"
How many dorms are in the database?,SELECT count(*) FROM dorm,"Input: How many dorms are in the database? Answer: SELECT count(*) FROM dorm
"
"How many characteristics does the product named ""sesame"" have?","SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  ""sesame""","Input: How many characteristics does the product named ""sesame"" have? Answer: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  ""sesame""
"
For which countries are there more than four distinct addresses listed?,SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4,"Input: For which countries are there more than four distinct addresses listed? Answer: SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4
"
What are the names of wines produced before any wine from the Brander winery?,"SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  ""Brander"")","Input: What are the names of wines produced before any wine from the Brander winery? Answer: SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  ""Brander"")
"
Find the name and capacity of the dorm with least number of amenities.,"SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1","Input: Find the name and capacity of the dorm with least number of amenities. Answer: SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1
"
"Find the customer name and date of the orders that have the status ""Delivered"".","SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""","Input: Find the customer name and date of the orders that have the status ""Delivered"". Answer: SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  ""Delivered""
"
How many different levels do members have?,SELECT count(DISTINCT LEVEL) FROM member,"Input: How many different levels do members have? Answer: SELECT count(DISTINCT LEVEL) FROM member
"
Find the number of students whose age is older than the average age for each gender.,"SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex","Input: Find the number of students whose age is older than the average age for each gender. Answer: SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex
"
Show all train names and times in stations in London in descending order by train time.,"SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC","Input: Show all train names and times in stations in London in descending order by train time. Answer: SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC
"
What are all the company names that have a book published by Alyson?,SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson',"Input: What are all the company names that have a book published by Alyson? Answer: SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'
"
How many schools have some students playing in goalie and mid positions.,SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'),"Input: How many schools have some students playing in goalie and mid positions. Answer: SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')
"
What are the id and details of the customers who have at least 3 events?,"SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3","Input: What are the id and details of the customers who have at least 3 events? Answer: SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3
"
List the customer event id and the corresponding move in date and property id.,"SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events","Input: List the customer event id and the corresponding move in date and property id. Answer: SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events
"
What are the different product names for products that have the 'warm' characteristic:?,"SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""","Input: What are the different product names for products that have the 'warm' characteristic:? Answer: SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  ""warm""
"
When is the last day any resident moved in?,SELECT max(date_moved_in) FROM Residents,"Input: When is the last day any resident moved in? Answer: SELECT max(date_moved_in) FROM Residents
"
Show all locations which don't have a train station with at least 15 platforms.,SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15,"Input: Show all locations which don't have a train station with at least 15 platforms. Answer: SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15
"
What are the grapes and appelations of each wine?,"SELECT Grape ,  Appelation FROM WINE","Input: What are the grapes and appelations of each wine? Answer: SELECT Grape ,  Appelation FROM WINE
"
Find the id and name of customers whose address contains WY state and do not use credit card for payment.,"SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""","Input: Find the id and name of customers whose address contains WY state and do not use credit card for payment. Answer: SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE ""%WY%"" AND payment_method_code != ""Credit Card""
"
"List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.",SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name,"Input: List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order. Answer: SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name
"
Show the names of trains and locations of railways they are in.,"SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID","Input: Show the names of trains and locations of railways they are in. Answer: SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID
"
What is the name of every college in alphabetical order that has more than 18000 students enrolled?,SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName,"Input: What is the name of every college in alphabetical order that has more than 18000 students enrolled? Answer: SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName
"
Sort all captain names by their ages from old to young.,SELECT name FROM captain ORDER BY age DESC,"Input: Sort all captain names by their ages from old to young. Answer: SELECT name FROM captain ORDER BY age DESC
"
Give the names and scores of wines made from white grapes.,"SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White""","Input: Give the names and scores of wines made from white grapes. Answer: SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  ""White""
"
"Which contact channel has been used by the customer with name ""Tillman Ernser""?","SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""","Input: Which contact channel has been used by the customer with name ""Tillman Ernser""? Answer: SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  ""Tillman Ernser""
"
What is the name of the school with smallest enrollment size per state?,"SELECT cName ,  state ,  min(enr) FROM college GROUP BY state","Input: What is the name of the school with smallest enrollment size per state? Answer: SELECT cName ,  state ,  min(enr) FROM college GROUP BY state
"
"For each branch id, what are the names of the branches that were registered after 2015?","SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id","Input: For each branch id, what are the names of the branches that were registered after 2015? Answer: SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id
"
Select the name of the products with a price less than or equal to $200.,SELECT name FROM products WHERE price  <=  200,"Input: Select the name of the products with a price less than or equal to $200. Answer: SELECT name FROM products WHERE price  <=  200
"
Find the name of the swimmer who has the most records.,SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1,"Input: Find the name of the swimmer who has the most records. Answer: SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1
"
How many different colleges are there?,SELECT count(*) FROM College,"Input: How many different colleges are there? Answer: SELECT count(*) FROM College
"
What are the product names with average product price smaller than 1000000?,SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000,"Input: What are the product names with average product price smaller than 1000000? Answer: SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000
"
Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.,"SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Sales Person"" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Clerical Staff""","Input: Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff. Answer: SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Sales Person"" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  ""Clerical Staff""
"
"Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first.","SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC","Input: Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first. Answer: SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC
"
"For each dorm, how many amenities does it have?","SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid","Input: For each dorm, how many amenities does it have? Answer: SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid
"
What are the names and buying prices of all the products?,"SELECT product_name ,  typical_buying_price FROM products","Input: What are the names and buying prices of all the products? Answer: SELECT product_name ,  typical_buying_price FROM products
"
What is the name of the stadium which held the most events?,SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1,"Input: What is the name of the stadium which held the most events? Answer: SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1
"
How many countries do not have an roller coaster longer than 3000?,SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 ),"Input: How many countries do not have an roller coaster longer than 3000? Answer: SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )
"
Show the name of the customer who has the most orders.,SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1,"Input: Show the name of the customer who has the most orders. Answer: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
"
How many movie directors are there?,SELECT COUNT (DISTINCT director) FROM movie,"Input: How many movie directors are there? Answer: SELECT COUNT (DISTINCT director) FROM movie
"
List the wheels and locations of the railways.,"SELECT Wheels ,  LOCATION FROM railway","Input: List the wheels and locations of the railways. Answer: SELECT Wheels ,  LOCATION FROM railway
"
List all the event names by year from the most recent to the oldest.,SELECT name FROM event ORDER BY YEAR DESC,"Input: List all the event names by year from the most recent to the oldest. Answer: SELECT name FROM event ORDER BY YEAR DESC
"
How many girl students who are younger than 25?,SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25,"Input: How many girl students who are younger than 25? Answer: SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25
"
"What are the starting years shared by the technicians from the team ""CLE"" or ""CWS""?","SELECT Starting_Year FROM technician WHERE Team  =  ""CLE"" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  ""CWS""","Input: What are the starting years shared by the technicians from the team ""CLE"" or ""CWS""? Answer: SELECT Starting_Year FROM technician WHERE Team  =  ""CLE"" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  ""CWS""
"
What is the document status description of the document with id 1?,SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1,"Input: What is the document status description of the document with id 1? Answer: SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1
"
What is the name of the shipping agent of the document with id 2?,SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2,"Input: What is the name of the shipping agent of the document with id 2? Answer: SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2
"
Find distinct cities of addresses of people?,SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id,"Input: Find distinct cities of addresses of people? Answer: SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id
"
"List name, dates active, and number of deaths for all storms with at least 1 death.","SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1","Input: List name, dates active, and number of deaths for all storms with at least 1 death. Answer: SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1
"
"Show the nominees that have nominated musicals for both ""Tony Award"" and ""Drama Desk Award"".","SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" INTERSECT SELECT Nominee FROM musical WHERE Award  =  ""Drama Desk Award""","Input: Show the nominees that have nominated musicals for both ""Tony Award"" and ""Drama Desk Award"". Answer: SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" INTERSECT SELECT Nominee FROM musical WHERE Award  =  ""Drama Desk Award""
"
How many customers have an account?,SELECT count(DISTINCT customer_id) FROM Accounts,"Input: How many customers have an account? Answer: SELECT count(DISTINCT customer_id) FROM Accounts
"
"What are the names of students and their respective departments, ordered by number of credits from least to greatest?","SELECT name ,  dept_name FROM student ORDER BY tot_cred","Input: What are the names of students and their respective departments, ordered by number of credits from least to greatest? Answer: SELECT name ,  dept_name FROM student ORDER BY tot_cred
"
Find the name of the department that offers the highest total credits?,SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1,"Input: Find the name of the department that offers the highest total credits? Answer: SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1
"
Find the maximum and minimum millisecond lengths of pop tracks.,"SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Pop""","Input: Find the maximum and minimum millisecond lengths of pop tracks. Answer: SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Pop""
"
"For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.","SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id","Input: For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees. Answer: SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id
"
"List names of all teams in the basketball competition, ordered by all home scores in descending order.",SELECT team_name FROM basketball_match ORDER BY All_Home DESC,"Input: List names of all teams in the basketball competition, ordered by all home scores in descending order. Answer: SELECT team_name FROM basketball_match ORDER BY All_Home DESC
"
What are the coupon amount of the coupons owned by both good and bad customers?,SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad',"Input: What are the coupon amount of the coupons owned by both good and bad customers? Answer: SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'
"
What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?,"SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""","Input: What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ? Answer: SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = ""Monaco Grand Prix""
"
What are the different names of all the races in reverse alphabetical order?,SELECT DISTINCT name FROM races ORDER BY name DESC,"Input: What are the different names of all the races in reverse alphabetical order? Answer: SELECT DISTINCT name FROM races ORDER BY name DESC
"
Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.,"SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""","Input: Return the names of entrepreneurs do no not have the investor Rachel Elnaugh. Answer: SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != ""Rachel Elnaugh""
"
Find the average millisecond length of Latin and Pop tracks.,"SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""","Input: Find the average millisecond length of Latin and Pop tracks. Answer: SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Latin"" OR T1.Name  =  ""Pop""
"
What are the ids of the students who registered for course 301?,SELECT student_id FROM student_course_attendance WHERE course_id  =  301,"Input: What are the ids of the students who registered for course 301? Answer: SELECT student_id FROM student_course_attendance WHERE course_id  =  301
"
Show names of musicals and the number of actors who have appeared in the musicals.,"SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID","Input: Show names of musicals and the number of actors who have appeared in the musicals. Answer: SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID
"
what are the first name and last name of all candidates?,"SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id","Input: what are the first name and last name of all candidates? Answer: SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id
"
What is the id and last name of the driver with the longest laptime?,"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1","Input: What is the id and last name of the driver with the longest laptime? Answer: SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1
"
What is the id and name of the browser that is compatible with the most web accelerators?,"SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Input: What is the id and name of the browser that is compatible with the most web accelerators? Answer: SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
"
What are the schools that were either founded before 1850 or are public?,SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public',"Input: What are the schools that were either founded before 1850 or are public? Answer: SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'
"
Find the distinct names of all races held between 2014 and 2017?,SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017,"Input: Find the distinct names of all races held between 2014 and 2017? Answer: SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017
"
Which cmi cross reference id is not related to any parking taxes?,SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines,"Input: Which cmi cross reference id is not related to any parking taxes? Answer: SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines
"
What is the average and maximum damage in millions for storms that had a max speed over 1000?,"SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000","Input: What is the average and maximum damage in millions for storms that had a max speed over 1000? Answer: SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000
"
What are the names of races that were held after 2017 and the circuits were in the country of Spain?,"SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017","Input: What are the names of races that were held after 2017 and the circuits were in the country of Spain? Answer: SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2017
"
Return the name of the heaviest entrepreneur.,SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1,"Input: Return the name of the heaviest entrepreneur. Answer: SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
"
Show names of actors and names of musicals they are in.,"SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID","Input: Show names of actors and names of musicals they are in. Answer: SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID
"
Count the number of different affected regions.,SELECT count(DISTINCT region_id) FROM affected_region,"Input: Count the number of different affected regions. Answer: SELECT count(DISTINCT region_id) FROM affected_region
"
What are the weights of entrepreneurs in descending order of money requested?,SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC,"Input: What are the weights of entrepreneurs in descending order of money requested? Answer: SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC
"
What is the product description of the product booked with an amount of 102.76?,SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76,"Input: What is the product description of the product booked with an amount of 102.76? Answer: SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76
"
What is the membership card held by both members living in Hartford and ones living in Waterbury address?,SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury',"Input: What is the membership card held by both members living in Hartford and ones living in Waterbury address? Answer: SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'
"
What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?,"SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""","Input: What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix? Answer: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Australian Grand Prix"" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = ""Chinese Grand Prix""
"
"What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?","SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'","Input: What are the different names, locations, and products of the enzymes that are capable inhibitor interactions? Answer: SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'
"
Show the enrollment and primary_conference of the oldest college.,"SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1","Input: Show the enrollment and primary_conference of the oldest college. Answer: SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1
"
What are the names of instructors who didn't teach?,SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches),"Input: What are the names of instructors who didn't teach? Answer: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)
"
What are all info of students who registered courses but not attended courses?,SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance),"Input: What are all info of students who registered courses but not attended courses? Answer: SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)
"
What are the numbers of races for each constructor id?,"SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid","Input: What are the numbers of races for each constructor id? Answer: SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid
"
"For each nationality, how many different constructors are there?","SELECT count(*) ,  nationality FROM constructors GROUP BY nationality","Input: For each nationality, how many different constructors are there? Answer: SELECT count(*) ,  nationality FROM constructors GROUP BY nationality
"
What is the name of the race that occurred most recently?,SELECT name FROM races ORDER BY date DESC LIMIT 1,"Input: What is the name of the race that occurred most recently? Answer: SELECT name FROM races ORDER BY date DESC LIMIT 1
"
Which student visited restaurant most often? List student's first name and last name.,"SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1","Input: Which student visited restaurant most often? List student's first name and last name. Answer: SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1
"
List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.,"SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F'","Input: List all female students age is older than 18 who is not majoring in 600. List students' first name and last name. Answer: SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F'
"
In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?,"SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'","Input: In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'? Answer: SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'
"
List the distinct carriers of phones with memories bigger than 32.,SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32,"Input: List the distinct carriers of phones with memories bigger than 32. Answer: SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32
"
Find courses that ran in Fall 2009 and in Spring 2010.,SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010,"Input: Find courses that ran in Fall 2009 and in Spring 2010. Answer: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010
"
What is the role of the employee named Koby?,"SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby""","Input: What is the role of the employee named Koby? Answer: SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = ""Koby""
"
Return the investor who have invested in the greatest number of entrepreneurs.,SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1,"Input: Return the investor who have invested in the greatest number of entrepreneurs. Answer: SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1
"
How many drivers were in the Australian Grand Prix held in 2009?,"SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009","Input: How many drivers were in the Australian Grand Prix held in 2009? Answer: SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = ""Australian Grand Prix"" AND YEAR = 2009
"
What is the storm name and max speed which affected the greatest number of regions?,"SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1","Input: What is the storm name and max speed which affected the greatest number of regions? Answer: SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1
"
What is the party of the youngest people?,SELECT Party FROM people ORDER BY Age ASC LIMIT 1,"Input: What is the party of the youngest people? Answer: SELECT Party FROM people ORDER BY Age ASC LIMIT 1
"
"Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks.",SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC,"Input: Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks. Answer: SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC
"
"Show the names of sponsors of players whose residence is either ""Brandon"" or ""Birtle"".","SELECT Sponsor_name FROM player WHERE Residence  =  ""Brandon"" OR Residence  =  ""Birtle""","Input: Show the names of sponsors of players whose residence is either ""Brandon"" or ""Birtle"". Answer: SELECT Sponsor_name FROM player WHERE Residence  =  ""Brandon"" OR Residence  =  ""Birtle""
"
List the names of people that have not been on the affirmative side of debates.,SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people),"Input: List the names of people that have not been on the affirmative side of debates. Answer: SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)
"
"Return the average transaction amount, as well as the total amount of all transactions.","SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions","Input: Return the average transaction amount, as well as the total amount of all transactions. Answer: SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions
"
What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?,"SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'","Input: What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection? Answer: SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'
"
Find the name of department has the highest amount of students?,SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1,"Input: Find the name of department has the highest amount of students? Answer: SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1
"
give me names of all compatible browsers and accelerators in the descending order of compatible year,"SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC","Input: give me names of all compatible browsers and accelerators in the descending order of compatible year Answer: SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC
"
How many customers do not have an account?,SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts),"Input: How many customers do not have an account? Answer: SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)
"
Find the total number of students in each department.,"SELECT count(*) ,  dept_name FROM student GROUP BY dept_name","Input: Find the total number of students in each department. Answer: SELECT count(*) ,  dept_name FROM student GROUP BY dept_name
"
Find the address of all customers that live in Germany and have invoice.,"SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Germany""","Input: Find the address of all customers that live in Germany and have invoice. Answer: SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  ""Germany""
"
Find the names of all races held in 2017.,SELECT name FROM races WHERE YEAR = 2017,"Input: Find the names of all races held in 2017. Answer: SELECT name FROM races WHERE YEAR = 2017
"
List the name of browsers in descending order by market share.,SELECT name FROM browser ORDER BY market_share DESC,"Input: List the name of browsers in descending order by market share. Answer: SELECT name FROM browser ORDER BY market_share DESC
"
Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000.,SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000,"Input: Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000. Answer: SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000
"
What is the name of the perpetrator with the biggest weight.,SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1,"Input: What is the name of the perpetrator with the biggest weight. Answer: SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1
"
What are the ids and first names of customers who do not hold a credit card?,"SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  ""Credit""","Input: What are the ids and first names of customers who do not hold a credit card? Answer: SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  ""Credit""
"
What are the ids of instructors who didnt' teach?,SELECT id FROM instructor EXCEPT SELECT id FROM teaches,"Input: What are the ids of instructors who didnt' teach? Answer: SELECT id FROM instructor EXCEPT SELECT id FROM teaches
"
"Find the title, credit, and department name of courses that have more than one prerequisites?","SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1","Input: Find the title, credit, and department name of courses that have more than one prerequisites? Answer: SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1
"
What is the weight of the shortest person?,SELECT Weight FROM people ORDER BY Height ASC LIMIT 1,"Input: What is the weight of the shortest person? Answer: SELECT Weight FROM people ORDER BY Height ASC LIMIT 1
"
What are the ids and full names of customers who hold two or more cards?,"SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2","Input: What are the ids and full names of customers who hold two or more cards? Answer: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2
"
Give the title of the course offered in Chandler during the Fall of 2010.,SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010,"Input: Give the title of the course offered in Chandler during the Fall of 2010. Answer: SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010
"
How many students and instructors are in each department?,"SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name","Input: How many students and instructors are in each department? Answer: SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name
"
Which membership card has more than 5 members?,SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5,"Input: Which membership card has more than 5 members? Answer: SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5
"
Find the name of instructors who are advising more than one student.,SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1,"Input: Find the name of instructors who are advising more than one student. Answer: SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1
"
What is draft detail of the document with id 7?,SELECT draft_details FROM Document_Drafts WHERE document_id = 7,"Input: What is draft detail of the document with id 7? Answer: SELECT draft_details FROM Document_Drafts WHERE document_id = 7
"
Find the name of students who took any class in the years of 2009 and 2010.,SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010,"Input: Find the name of students who took any class in the years of 2009 and 2010. Answer: SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010
"
"What are the cell phone numbers of the candidates that received an assessment code of ""Fail""?","SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""","Input: What are the cell phone numbers of the candidates that received an assessment code of ""Fail""? Answer: SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = ""Fail""
"
What are the names of countains that no climber has climbed?,SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber),"Input: What are the names of countains that no climber has climbed? Answer: SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)
"
Count the number of actors.,SELECT count(*) FROM actor,"Input: Count the number of actors. Answer: SELECT count(*) FROM actor
"
list in alphabetic order all course names and their instructors' names in year 2008.,"SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title","Input: list in alphabetic order all course names and their instructors' names in year 2008. Answer: SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title
"
Count the number of tracks.,SELECT count(*) FROM track,"Input: Count the number of tracks. Answer: SELECT count(*) FROM track
"
Find the name of students who took some course offered by Statistics department.,SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics',"Input: Find the name of students who took some course offered by Statistics department. Answer: SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'
"
What is the id of the candidate whose email is stanley.monahan@example.org?,"SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""","Input: What is the id of the candidate whose email is stanley.monahan@example.org? Answer: SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = ""stanley.monahan@example.org""
"
Find the names of instructors who didn't each any courses in any Spring semester.,SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring'),"Input: Find the names of instructors who didn't each any courses in any Spring semester. Answer: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')
"
Show the name and date for each race and its track name.,"SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id","Input: Show the name and date for each race and its track name. Answer: SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id
"
Show storm name with at least two regions and 10 cities affected.,SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10,"Input: Show storm name with at least two regions and 10 cities affected. Answer: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10
"
What are the characters of actors in descending order of age?,SELECT Character FROM actor ORDER BY age DESC,"Input: What are the characters of actors in descending order of age? Answer: SELECT Character FROM actor ORDER BY age DESC
"
What is the primary conference of the school that has the lowest acc percent score in the competition?,SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1,"Input: What is the primary conference of the school that has the lowest acc percent score in the competition? Answer: SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1
"
Wat is the tax source system code and master customer id of the taxes related to each parking fine id?,"SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id","Input: Wat is the tax source system code and master customer id of the taxes related to each parking fine id? Answer: SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id
"
What are the full names of customers who have accounts?,"SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id","Input: What are the full names of customers who have accounts? Answer: SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id
"
Give the name of the lowest earning instructor in the Statistics department.,SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1,"Input: Give the name of the lowest earning instructor in the Statistics department. Answer: SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1
"
Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?,SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20,"Input: Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points? Answer: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20
"
What is the title of the prerequisite class of International Finance course?,SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance'),"Input: What is the title of the prerequisite class of International Finance course? Answer: SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')
"
List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.,"SELECT document_id FROM Documents WHERE document_status_code  =  ""done"" AND document_type_code = ""Paper"" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""","Input: List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS. Answer: SELECT document_id FROM Documents WHERE document_status_code  =  ""done"" AND document_type_code = ""Paper"" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""
"
What are the unique names of races that held after 2000 and the circuits were in Spain?,"SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000","Input: What are the unique names of races that held after 2000 and the circuits were in Spain? Answer: SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = ""Spain"" AND T1.year > 2000
"
How many different source system code for the cmi cross references are there?,SELECT count(DISTINCT source_system_code) FROM CMI_cross_references,"Input: How many different source system code for the cmi cross references are there? Answer: SELECT count(DISTINCT source_system_code) FROM CMI_cross_references
"
Which year had the greatest number of courses?,SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,"Input: Which year had the greatest number of courses? Answer: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
"
How many medicines are offered by each trade name?,"SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name","Input: How many medicines are offered by each trade name? Answer: SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name
"
Find the semester and year which has the least number of student taking any class.,"SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1","Input: Find the semester and year which has the least number of student taking any class. Answer: SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1
"
What are the names and budgets of departments with budgets greater than the average?,"SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)","Input: What are the names and budgets of departments with budgets greater than the average? Answer: SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)
"
"What are the ids, scores, and dates of the games which caused at least two injury accidents?","SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","Input: What are the ids, scores, and dates of the games which caused at least two injury accidents? Answer: SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2
"
What is the team name and acc regular season score of the school that was founded for the longest time?,"SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1","Input: What is the team name and acc regular season score of the school that was founded for the longest time? Answer: SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1
"
Count the number of cards the customer with the first name Art and last name Turcotte has.,"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""","Input: Count the number of cards the customer with the first name Art and last name Turcotte has. Answer: SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Art"" AND T2.customer_last_name  =  ""Turcotte""
"
How many students have advisors?,SELECT count(DISTINCT s_id) FROM advisor,"Input: How many students have advisors? Answer: SELECT count(DISTINCT s_id) FROM advisor
"
Find the id of courses which are registered or attended by student whose id is 121?,SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121,"Input: Find the id of courses which are registered or attended by student whose id is 121? Answer: SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121
"
"For every medicine id, what are the names of the medicines that can interact with more than one enzyme?","SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","Input: For every medicine id, what are the names of the medicines that can interact with more than one enzyme? Answer: SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2
"
what is id of students who registered some courses but the least number of courses in these students?,SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1,"Input: what is id of students who registered some courses but the least number of courses in these students? Answer: SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1
"
Please show the employee first names and ids of employees who serve at least 10 customers.,"SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10","Input: Please show the employee first names and ids of employees who serve at least 10 customers. Answer: SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10
"
"For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.","SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age","Input: For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host. Answer: SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age
"
List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?,"SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000","Input: List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds? Answer: SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000
"
which course has most number of registered students?,SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1,"Input: which course has most number of registered students? Answer: SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1
"
"What are the account ids, customer ids, and account names for all the accounts?","SELECT account_id ,  customer_id ,  account_name FROM Accounts","Input: What are the account ids, customer ids, and account names for all the accounts? Answer: SELECT account_id ,  customer_id ,  account_name FROM Accounts
"
How many debates are there?,SELECT count(*) FROM debate,"Input: How many debates are there? Answer: SELECT count(*) FROM debate
"
How many distinct kinds of injuries happened after season 2010?,SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010,"Input: How many distinct kinds of injuries happened after season 2010? Answer: SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010
"
Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.,SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000,"Input: Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened. Answer: SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000
"
How many restaurant is the Sandwich type restaurant?,SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich',"Input: How many restaurant is the Sandwich type restaurant? Answer: SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
"
What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds?,"SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000","Input: What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds? Answer: SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000
"
Find the name of instructor who is the advisor of the student who has the highest number of total credits.,SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1,"Input: Find the name of instructor who is the advisor of the student who has the highest number of total credits. Answer: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1
"
What are the ids for courses in the Fall of 2009 or the Spring of 2010?,SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010,"Input: What are the ids for courses in the Fall of 2009 or the Spring of 2010? Answer: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010
"
What are the different names of mountains ascended by climbers from the country of West Germany?,"SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  ""West Germany""","Input: What are the different names of mountains ascended by climbers from the country of West Germany? Answer: SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  ""West Germany""
"
What is the sum of budgets of the Marketing and Finance departments?,SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance',"Input: What is the sum of budgets of the Marketing and Finance departments? Answer: SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'
"
When did Linda Smith visit Subway?,"SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway""","Input: When did Linda Smith visit Subway? Answer: SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway""
"
What is the average unit price of rock tracks?,"SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""","Input: What is the average unit price of rock tracks? Answer: SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Rock""
"
What are the titles for courses with two prerequisites?,SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2,"Input: What are the titles for courses with two prerequisites? Answer: SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2
"
How many customer cards are there?,SELECT count(*) FROM Customers_cards,"Input: How many customer cards are there? Answer: SELECT count(*) FROM Customers_cards
"
List the id of students who registered course statistics in the order of registration date.,"SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date","Input: List the id of students who registered course statistics in the order of registration date. Answer: SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = ""statistics"" ORDER BY T2.registration_date
"
What is the name and date of the race that occurred most recently?,"SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1","Input: What is the name and date of the race that occurred most recently? Answer: SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1
"
List all students' first names and last names who majored in 600.,"SELECT Fname , Lname FROM Student WHERE Major  =  600","Input: List all students' first names and last names who majored in 600. Answer: SELECT Fname , Lname FROM Student WHERE Major  =  600
"
What are the codes of card types that have 5 or more cards?,SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5,"Input: What are the codes of card types that have 5 or more cards? Answer: SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5
"
What are the public schools and what are their locations?,"SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'","Input: What are the public schools and what are their locations? Answer: SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'
"
What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.,"SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1","Input: What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code. Answer: SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1
"
What are the start date and end date of the booking that has booked the product named 'Book collection A'?,"SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'","Input: What are the start date and end date of the booking that has booked the product named 'Book collection A'? Answer: SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'
"
What is the count of enzymes without any interactions?,SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ),"Input: What is the count of enzymes without any interactions? Answer: SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction )
"
What are the ids and locations of all circuits in France or Belgium?,"SELECT circuitid ,  LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""","Input: What are the ids and locations of all circuits in France or Belgium? Answer: SELECT circuitid ,  LOCATION FROM circuits WHERE country = ""France"" OR country = ""Belgium""
"
What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?,SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor',"Input: What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'? Answer: SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'
"
What are the names of students who have taken the prerequisite for the course International Finance?,SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance'),"Input: What are the names of students who have taken the prerequisite for the course International Finance? Answer: SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')
"
What are the names of enzymes that include the string 'ALA'?,"SELECT name FROM enzyme WHERE name LIKE ""%ALA%""","Input: What are the names of enzymes that include the string 'ALA'? Answer: SELECT name FROM enzyme WHERE name LIKE ""%ALA%""
"
"For each course id, how many students are registered and what are the course names?","SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id","Input: For each course id, how many students are registered and what are the course names? Answer: SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id
"
What are the first names of all the different drivers in alphabetical order?,SELECT DISTINCT forename FROM drivers ORDER BY forename ASC,"Input: What are the first names of all the different drivers in alphabetical order? Answer: SELECT DISTINCT forename FROM drivers ORDER BY forename ASC
"
Show the nations that have both hosts older than 45 and hosts younger than 35.,SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35,"Input: Show the nations that have both hosts older than 45 and hosts younger than 35. Answer: SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35
"
List the names and buildings of all departments sorted by the budget from large to small.,"SELECT dept_name ,  building FROM department ORDER BY budget DESC","Input: List the names and buildings of all departments sorted by the budget from large to small. Answer: SELECT dept_name ,  building FROM department ORDER BY budget DESC
"
"What are the dates of birth of entrepreneurs with investor ""Simon Woodroffe"" or ""Peter Jones""?","SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  ""Simon Woodroffe"" OR T1.Investor  =  ""Peter Jones""","Input: What are the dates of birth of entrepreneurs with investor ""Simon Woodroffe"" or ""Peter Jones""? Answer: SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  ""Simon Woodroffe"" OR T1.Investor  =  ""Peter Jones""
"
How many drivers did not participate in the races held in 2009?,SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 ),"Input: How many drivers did not participate in the races held in 2009? Answer: SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )
"
What is the season of the game which causes the player 'Walter Samuel' to get injured?,SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel',"Input: What is the season of the game which causes the player 'Walter Samuel' to get injured? Answer: SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'
"
Show the names of people and the number of times they have been on the affirmative side of debates.,"SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name","Input: Show the names of people and the number of times they have been on the affirmative side of debates. Answer: SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name
"
"List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.","SELECT document_id FROM Documents WHERE document_status_code  =  ""done"" AND document_type_code = ""Paper"" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""","Input: List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS. Answer: SELECT document_id FROM Documents WHERE document_status_code  =  ""done"" AND document_type_code = ""Paper"" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""
"
Return the investors who have invested in two or more entrepreneurs.,SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2,"Input: Return the investors who have invested in two or more entrepreneurs. Answer: SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2
"
Show names of technicians and the number of machines they are assigned to repair.,"SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name","Input: Show names of technicians and the number of machines they are assigned to repair. Answer: SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name
"
What are the durations of the longest and the shortest tracks in milliseconds?,"SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK","Input: What are the durations of the longest and the shortest tracks in milliseconds? Answer: SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK
"
What are the names of entrepreneurs?,SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID,"Input: What are the names of entrepreneurs? Answer: SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID
"
How many customers are there?,SELECT sum(no_of_customers) FROM bank,"Input: How many customers are there? Answer: SELECT sum(no_of_customers) FROM bank
"
List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.,SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta',"Input: List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured. Answer: SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'
"
"Find id of candidates whose assessment code is ""Pass""?","SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""","Input: Find id of candidates whose assessment code is ""Pass""? Answer: SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = ""Pass""
"
"What are the different card types, and how many transactions have been made with each?","SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code","Input: What are the different card types, and how many transactions have been made with each? Answer: SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code
"
Find the id of the courses that do not have any prerequisite?,SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq,"Input: Find the id of the courses that do not have any prerequisite? Answer: SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq
"
Show all storm names except for those with at least two affected regions.,SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2,"Input: Show all storm names except for those with at least two affected regions. Answer: SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2
"
What is the course title of the prerequisite of course Mobile Computing?,SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing'),"Input: What is the course title of the prerequisite of course Mobile Computing? Answer: SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')
"
What are the names and trade names of the medcines that are FDA approved?,"SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'","Input: What are the names and trade names of the medcines that are FDA approved? Answer: SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'
"
What is the starting year of the oldest technicians?,SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1,"Input: What is the starting year of the oldest technicians? Answer: SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
"
List the employees who have not showed up in any circulation history of documents. List the employee's name.,SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id,"Input: List the employees who have not showed up in any circulation history of documents. List the employee's name. Answer: SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id
"
Show the name for regions and the number of storms for each region.,"SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id","Input: Show the name for regions and the number of storms for each region. Answer: SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id
"
Find the names of artists that do not have any albums.,SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId,"Input: Find the names of artists that do not have any albums. Answer: SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId
"
What is the shipping agent code of shipping agent UPS?,"SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = ""UPS""","Input: What is the shipping agent code of shipping agent UPS? Answer: SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = ""UPS""
"
What are the forename and surname of the driver who has the smallest laptime?,"SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1","Input: What are the forename and surname of the driver who has the smallest laptime? Answer: SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1
"
What are the names and locations of tracks that have had exactly 1 race?,"SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1","Input: What are the names and locations of tracks that have had exactly 1 race? Answer: SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1
"
"List the name and residence for players whose occupation is not ""Researcher"".","SELECT Player_name ,  residence FROM player WHERE Occupation != ""Researcher""","Input: List the name and residence for players whose occupation is not ""Researcher"". Answer: SELECT Player_name ,  residence FROM player WHERE Occupation != ""Researcher""
"
"What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?","SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'","Input: What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'? Answer: SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'
"
Find the founded year of the newest non public school.,SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1,"Input: Find the founded year of the newest non public school. Answer: SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1
"
"How many employees does each role have? List role description, id and number of employees.","SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code","Input: How many employees does each role have? List role description, id and number of employees. Answer: SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code
"
What is the location of the perpetrator with the largest kills.,SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1,"Input: What is the location of the perpetrator with the largest kills. Answer: SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1
"
What are the titles of courses that are in the Statistics department but not the Psychology department?,SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology',"Input: What are the titles of courses that are in the Statistics department but not the Psychology department? Answer: SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'
"
Show names for all regions except for Denmark.,SELECT region_name FROM region WHERE region_name != 'Denmark',"Input: Show names for all regions except for Denmark. Answer: SELECT region_name FROM region WHERE region_name != 'Denmark'
"
Which parties have more than 20 hosts? Give me the host names for these parties.,SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20,"Input: Which parties have more than 20 hosts? Give me the host names for these parties. Answer: SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20
"
Count the number of credit cards that the customer with first name Blanche and last name Huels has.,"SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Blanche"" AND T2.customer_last_name  =  ""Huels"" AND T1.card_type_code  =  ""Credit""","Input: Count the number of credit cards that the customer with first name Blanche and last name Huels has. Answer: SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  ""Blanche"" AND T2.customer_last_name  =  ""Huels"" AND T1.card_type_code  =  ""Credit""
"
Advisor 1121 has how many students?,SELECT count(*) FROM Student WHERE Advisor =  1121,"Input: Advisor 1121 has how many students? Answer: SELECT count(*) FROM Student WHERE Advisor =  1121
"
What are the heights of perpetrators in descending order of the number of people they injured?,SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC,"Input: What are the heights of perpetrators in descending order of the number of people they injured? Answer: SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC
"
How many universities have a location that contains NY?,"SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""","Input: How many universities have a location that contains NY? Answer: SELECT count(*) FROM university WHERE LOCATION LIKE ""%NY%""
"
"Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.",SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred,"Input: Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit. Answer: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred
"
How many times has the student Linda Smith visited Subway?,"SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway""","Input: How many times has the student Linda Smith visited Subway? Answer: SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = ""Linda"" AND Student.Lname = ""Smith"" AND Restaurant.ResName = ""Subway""
"
Show all card type codes and the number of customers holding cards in each type.,"SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code","Input: Show all card type codes and the number of customers holding cards in each type. Answer: SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code
"
"What is the customer id, first and last name with least number of accounts.","SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1","Input: What is the customer id, first and last name with least number of accounts. Answer: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1
"
"What are the names of perpetrators in country ""China"" or ""Japan""?","SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  ""China"" OR T2.Country  =  ""Japan""","Input: What are the names of perpetrators in country ""China"" or ""Japan""? Answer: SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  ""China"" OR T2.Country  =  ""Japan""
"
What are the names of musicals who have no actors?,SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor),"Input: What are the names of musicals who have no actors? Answer: SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)
"
Find the room number of the rooms which can sit 50 to 100 students and their buildings.,"SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100","Input: Find the room number of the rooms which can sit 50 to 100 students and their buildings. Answer: SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100
"
"What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?","SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'","Input: What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'? Answer: SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'
"
List the id of students who registered some courses and the number of their registered courses?,"SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id","Input: List the id of students who registered some courses and the number of their registered courses? Answer: SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
"
"What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id.","SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id","Input: What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id. Answer: SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id
"
Return the code of the card type that is most common.,SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1,"Input: Return the code of the card type that is most common. Answer: SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1
"
How many draft copies does the document with id 2 have?,SELECT count(*) FROM Draft_Copies WHERE document_id = 2,"Input: How many draft copies does the document with id 2 have? Answer: SELECT count(*) FROM Draft_Copies WHERE document_id = 2
"
List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.,SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox',"Input: List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'. Answer: SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'
"
Count the number of rooms in Lamberton with capacity lower than 50.,SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50,"Input: Count the number of rooms in Lamberton with capacity lower than 50. Answer: SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50
"
"What are the names of musicals with nominee ""Bob Fosse""?","SELECT Name FROM musical WHERE Nominee  =  ""Bob Fosse""","Input: What are the names of musicals with nominee ""Bob Fosse""? Answer: SELECT Name FROM musical WHERE Nominee  =  ""Bob Fosse""
"
What are the ids and names of the web accelerators that are compatible with two or more browsers?,"SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2","Input: What are the ids and names of the web accelerators that are compatible with two or more browsers? Answer: SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2
"
What are the region names affected by the storm with a number of deaths of least 10?,SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10,"Input: What are the region names affected by the storm with a number of deaths of least 10? Answer: SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10
"
What is the id and name of the enzyme that can interact with the most medicines as an activator?,"SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1","Input: What is the id and name of the enzyme that can interact with the most medicines as an activator? Answer: SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
"
What are the names of the instructors in the Comp. Sci. department who earn more than 80000?,SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000,"Input: What are the names of the instructors in the Comp. Sci. department who earn more than 80000? Answer: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000
"
What are the times used by climbers who climbed mountains in the country of Uganda?,"SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  ""Uganda""","Input: What are the times used by climbers who climbed mountains in the country of Uganda? Answer: SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  ""Uganda""
"
How many different kinds of clients are supported by the web clients accelerators?,SELECT count(DISTINCT client) FROM web_client_accelerator,"Input: How many different kinds of clients are supported by the web clients accelerators? Answer: SELECT count(DISTINCT client) FROM web_client_accelerator
"
Find the average unit price of jazz tracks.,"SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""","Input: Find the average unit price of jazz tracks. Answer: SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  ""Jazz""
"
What are the names of all instructors in the Comp. Sci. department?,SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.',"Input: What are the names of all instructors in the Comp. Sci. department? Answer: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'
"
Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?,"SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" OR Award  =  ""Cleavant Derricks""","Input: Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards? Answer: SELECT Nominee FROM musical WHERE Award  =  ""Tony Award"" OR Award  =  ""Cleavant Derricks""
"
List the council tax ids and their related cmi cross references of all the parking fines.,"SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines","Input: List the council tax ids and their related cmi cross references of all the parking fines. Answer: SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines
"
Which parties have hosts of age above 50? Give me the party locations.,SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50,"Input: Which parties have hosts of age above 50? Give me the party locations. Answer: SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50
"
What is the duration of the oldest actor?,SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1,"Input: What is the duration of the oldest actor? Answer: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1
"
"Find the purchase time, age and address of each member, and show the results in the order of purchase time.","SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase","Input: Find the purchase time, age and address of each member, and show the results in the order of purchase time. Answer: SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase
"
What are all the different first names of the drivers who are in position as standing and won?,SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1,"Input: What are all the different first names of the drivers who are in position as standing and won? Answer: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1
"
Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.,"SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation","Input: Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type. Answer: SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation
"
Find the names of students who have taken any course in the fall semester of year 2003.,SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003),"Input: Find the names of students who have taken any course in the fall semester of year 2003. Answer: SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)
"
How many games are free of injury accidents?,SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident ),"Input: How many games are free of injury accidents? Answer: SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )
"
How many council taxes are collected for renting arrears ?,SELECT count(*) FROM rent_arrears,"Input: How many council taxes are collected for renting arrears ? Answer: SELECT count(*) FROM rent_arrears
"
Show the date of the tallest perpetrator.,SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,"Input: Show the date of the tallest perpetrator. Answer: SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1
"
Find the name and salary of the instructors who are advisors of any student from History department?,"SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'","Input: Find the name and salary of the instructors who are advisors of any student from History department? Answer: SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'
"
List the number of people injured by perpetrators in ascending order.,SELECT Injured FROM perpetrator ORDER BY Injured ASC,"Input: List the number of people injured by perpetrators in ascending order. Answer: SELECT Injured FROM perpetrator ORDER BY Injured ASC
"
"What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?","SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'","Input: What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'? Answer: SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'
"
"What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?","SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'","Input: What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'? Answer: SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'
"
"What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?","SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested","Input: What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested? Answer: SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested
"
Show the names of people who have been on the negative side of debates at least twice.,SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,"Input: Show the names of people who have been on the negative side of debates at least twice. Answer: SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2
"
List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes.,"SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'","Input: List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes. Answer: SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'
"
What is the total count of enzymes?,SELECT count(*) FROM enzyme,"Input: What is the total count of enzymes? Answer: SELECT count(*) FROM enzyme
"
Find the cities corresponding to employees who help customers with the postal code 70174.,"SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  ""70174""","Input: Find the cities corresponding to employees who help customers with the postal code 70174. Answer: SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  ""70174""
"
Find the id and surname of the driver who participated the most number of races?,"SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1","Input: Find the id and surname of the driver who participated the most number of races? Answer: SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1
"
What are the names of musicals who have at 3 or more actors?,SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3,"Input: What are the names of musicals who have at 3 or more actors? Answer: SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3
"
What are the distinct salaries of all instructors who earned less than the maximum salary?,SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor),"Input: What are the distinct salaries of all instructors who earned less than the maximum salary? Answer: SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)
"
List the dates of games by the home team name in descending order.,SELECT Date FROM game ORDER BY home_team DESC,"Input: List the dates of games by the home team name in descending order. Answer: SELECT Date FROM game ORDER BY home_team DESC
"
"What are the first name, last name, and gender of all the good customers? Order by their last name.","SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name","Input: What are the first name, last name, and gender of all the good customers? Order by their last name. Answer: SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name
"
How many accelerators are not compatible with the browsers listed ?,SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ),"Input: How many accelerators are not compatible with the browsers listed ? Answer: SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser )
"
What is the mail date of the document with id 7?,SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7,"Input: What is the mail date of the document with id 7? Answer: SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7
"
Find the name of the storm that affected both Afghanistan and Albania regions.,SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania',"Input: Find the name of the storm that affected both Afghanistan and Albania regions. Answer: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'
"
What is the average amount due for all the payments?,SELECT avg(amount_due) FROM payments,"Input: What is the average amount due for all the payments? Answer: SELECT avg(amount_due) FROM payments
"
List the venues of debates in ascending order of the number of audience.,SELECT Venue FROM debate ORDER BY Num_of_Audience ASC,"Input: List the venues of debates in ascending order of the number of audience. Answer: SELECT Venue FROM debate ORDER BY Num_of_Audience ASC
"
Show the names of players coached by the rank 1 coach.,SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1,"Input: Show the names of players coached by the rank 1 coach. Answer: SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1
"
What are the memories and carriers of phones?,"SELECT Memory_in_G ,  Carrier FROM phone","Input: What are the memories and carriers of phones? Answer: SELECT Memory_in_G ,  Carrier FROM phone
"
Show the names of people that are on affirmative side of debates with number of audience bigger than 200.,SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200,"Input: Show the names of people that are on affirmative side of debates with number of audience bigger than 200. Answer: SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200
"
List the id of students who attended some courses?,SELECT student_id FROM student_course_attendance,"Input: List the id of students who attended some courses? Answer: SELECT student_id FROM student_course_attendance
"
What are the last names of employees who serve at most 20 customers?,SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20,"Input: What are the last names of employees who serve at most 20 customers? Answer: SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20
"
Are the customers holding coupons with amount 500 bad or good?,SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500,"Input: Are the customers holding coupons with amount 500 bad or good? Answer: SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500
"
How many documents were shipped by USPS?,"SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""","Input: How many documents were shipped by USPS? Answer: SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = ""USPS""
"
What is the average number of people injured by all perpetrators?,SELECT avg(Injured) FROM perpetrator,"Input: What is the average number of people injured by all perpetrators? Answer: SELECT avg(Injured) FROM perpetrator
"
Return the characters and durations for each actor.,"SELECT Character ,  Duration FROM actor","Input: Return the characters and durations for each actor. Answer: SELECT Character ,  Duration FROM actor
"
"For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.","SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC","Input: For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season. Answer: SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC
"
Find the id of the order made most recently.,SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1,"Input: Find the id of the order made most recently. Answer: SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1
"
List the cities which have more than 2 airports sorted by the number of airports.,SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*),"Input: List the cities which have more than 2 airports sorted by the number of airports. Answer: SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)
"
What country is the artist who made the fewest songs from?,SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1,"Input: What country is the artist who made the fewest songs from? Answer: SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1
"
Find the phone number of all the customers and staff.,SELECT phone_number FROM customers UNION SELECT phone_number FROM staff,"Input: Find the phone number of all the customers and staff. Answer: SELECT phone_number FROM customers UNION SELECT phone_number FROM staff
"
What are the party emails associated with parties that used the party form that is the most common?,SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1),"Input: What are the party emails associated with parties that used the party form that is the most common? Answer: SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)
"
"Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?","SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1","Input: Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed? Answer: SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1
"
Find the name of customer who has the highest amount of loans.,SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1,"Input: Find the name of customer who has the highest amount of loans. Answer: SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1
"
"What are ids of the all distinct orders, sorted by placement date?",SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed,"Input: What are ids of the all distinct orders, sorted by placement date? Answer: SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed
"
How many students are taught by teacher TARRING LEIA?,"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""TARRING"" AND T2.lastname  =  ""LEIA""","Input: How many students are taught by teacher TARRING LEIA? Answer: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""TARRING"" AND T2.lastname  =  ""LEIA""
"
What is the total amount of money loaned by banks in New York state?,SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York',"Input: What is the total amount of money loaned by banks in New York state? Answer: SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'
"
Who served as an advisor for students who have treasurer votes in the spring election cycle?,"SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  ""Spring""","Input: Who served as an advisor for students who have treasurer votes in the spring election cycle? Answer: SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  ""Spring""
"
Find the distinct number of president votes.,SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD,"Input: Find the distinct number of president votes. Answer: SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD
"
Find the name of bank branches that provided some loans.,SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id,"Input: Find the name of bank branches that provided some loans. Answer: SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id
"
Find the distinct majors of students who have treasurer votes.,SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote,"Input: Find the distinct majors of students who have treasurer votes. Answer: SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote
"
Find the name and credit score of the customers who have some loans.,"SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id","Input: Find the name and credit score of the customers who have some loans. Answer: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id
"
Find the number of customers in the banks at New York City.,SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City',"Input: Find the number of customers in the banks at New York City. Answer: SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'
"
Show the ids of all the faculty members who participate in an activity and advise a student.,SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student,"Input: Show the ids of all the faculty members who participate in an activity and advise a student. Answer: SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student
"
List the name and gender for all artists who released songs in March.,"SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""","Input: List the name and gender for all artists who released songs in March. Answer: SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE ""%Mar%""
"
List all the username and passwords of users with the most popular role.,"SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1","Input: List all the username and passwords of users with the most popular role. Answer: SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1
"
Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.,"SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There","Input: Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. Answer: SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There
"
"Find all the locations whose names contain the word ""film"".","SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""","Input: Find all the locations whose names contain the word ""film"". Answer: SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE ""%film%""
"
What is the total number of airlines?,SELECT count(*) FROM airlines,"Input: What is the total number of airlines? Answer: SELECT count(*) FROM airlines
"
What are the total number of the audiences who visited any of the festivals?,SELECT sum(Num_of_Audience) FROM festival_detail,"Input: What are the total number of the audiences who visited any of the festivals? Answer: SELECT sum(Num_of_Audience) FROM festival_detail
"
How many faculty members participate in an activity?,SELECT count(DISTINCT FacID) FROM Faculty_participates_in,"Input: How many faculty members participate in an activity? Answer: SELECT count(DISTINCT FacID) FROM Faculty_participates_in
"
Find the busiest source airport that runs most number of routes in China.,SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1,"Input: Find the busiest source airport that runs most number of routes in China. Answer: SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
"
What are the details of the markets that can be accessed by walk or bus?,"SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk"" OR  T2.How_to_Get_There  =  ""bus""","Input: What are the details of the markets that can be accessed by walk or bus? Answer: SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  ""walk"" OR  T2.How_to_Get_There  =  ""bus""
"
"What are the names of the three artists who have produced the most songs, and how many works did they produce?","SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","Input: What are the names of the three artists who have produced the most songs, and how many works did they produce? Answer: SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3
"
Find the list of documents that are both in the most three popular type and have the most three popular structure.,SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3,"Input: Find the list of documents that are both in the most three popular type and have the most three popular structure. Answer: SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3
"
Find the number of teachers who teach the student called MADLOCK RAY.,"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""MADLOCK"" AND T1.lastname  =  ""RAY""","Input: Find the number of teachers who teach the student called MADLOCK RAY. Answer: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""MADLOCK"" AND T1.lastname  =  ""RAY""
"
What are the details and star ratings of the three hotels with the lowest price ranges?,"SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3","Input: What are the details and star ratings of the three hotels with the lowest price ranges? Answer: SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3
"
Find the names of songs whose genre is modern or language is English.,"SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""","Input: Find the names of songs whose genre is modern or language is English. Answer: SELECT song_name FROM song WHERE genre_is  =  ""modern"" OR languages  =  ""english""
"
"On what dates did the student with family name ""Zieme"" and personal name ""Bernie"" enroll in and complete the courses?","SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  ""Zieme"" AND T2.personal_name  =  ""Bernie""","Input: On what dates did the student with family name ""Zieme"" and personal name ""Bernie"" enroll in and complete the courses? Answer: SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  ""Zieme"" AND T2.personal_name  =  ""Bernie""
"
List the names of all songs that have 4 minute duration or are in English.,"SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages  =  ""english""","Input: List the names of all songs that have 4 minute duration or are in English. Answer: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE ""4:%"" UNION SELECT song_name FROM song WHERE languages  =  ""english""
"
Tell me the ages of the oldest and youngest students studying major 600.,"SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600","Input: Tell me the ages of the oldest and youngest students studying major 600. Answer: SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600
"
What is the average age of the female students with secretary votes in the spring election cycle?,"SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  ""F"" AND T2.Election_Cycle  =  ""Spring""","Input: What is the average age of the female students with secretary votes in the spring election cycle? Answer: SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  ""F"" AND T2.Election_Cycle  =  ""Spring""
"
Show all the ranks and the number of male and female faculty for each rank.,"SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex","Input: Show all the ranks and the number of male and female faculty for each rank. Answer: SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex
"
What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?,SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8),"Input: What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8? Answer: SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)
"
What are the names of all songs that are ordered by their resolution numbers?,SELECT song_name FROM song ORDER BY resolution,"Input: What are the names of all songs that are ordered by their resolution numbers? Answer: SELECT song_name FROM song ORDER BY resolution
"
"List the id, genre and artist name of English songs ordered by rating.","SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating","Input: List the id, genre and artist name of English songs ordered by rating. Answer: SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   ""english"" ORDER BY rating
"
Find the first names of professors who are not playing Canoeing or Kayaking.,SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking',"Input: Find the first names of professors who are not playing Canoeing or Kayaking. Answer: SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'
"
"Find the number of trains for each station, as well as the station network name and services.","SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id","Input: Find the number of trains for each station, as well as the station network name and services. Answer: SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id
"
What are the names of banks in the state of New York?,SELECT bname FROM bank WHERE state  =  'New York',"Input: What are the names of banks in the state of New York? Answer: SELECT bname FROM bank WHERE state  =  'New York'
"
Find the total number of courses offered.,SELECT count(*) FROM COURSES,"Input: Find the total number of courses offered. Answer: SELECT count(*) FROM COURSES
"
What are the distinct last names of the students who have class president votes?,SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE,"Input: What are the distinct last names of the students who have class president votes? Answer: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE
"
Find the last names of students with major 50.,SELECT LName FROM STUDENT WHERE Major  =  50,"Input: Find the last names of students with major 50. Answer: SELECT LName FROM STUDENT WHERE Major  =  50
"
Find the total amount of loans offered by each bank branch.,"SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname","Input: Find the total amount of loans offered by each bank branch. Answer: SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname
"
What is the last name of the staff who has handled the first ever complaint?,SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1,"Input: What is the last name of the staff who has handled the first ever complaint? Answer: SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1
"
What are the login names and family names of course author and tutors?,"SELECT login_name ,  family_name FROM Course_Authors_and_Tutors","Input: What are the login names and family names of course author and tutors? Answer: SELECT login_name ,  family_name FROM Course_Authors_and_Tutors
"
What is the country of origin of the artist who is female and produced a song in Bangla?,"SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""","Input: What is the country of origin of the artist who is female and produced a song in Bangla? Answer: SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  ""Female"" AND T2.languages  =  ""bangla""
"
Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.,"SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""OTHA"" AND T2.lastname  =  ""MOYER""","Input: Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names. Answer: SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""OTHA"" AND T2.lastname  =  ""MOYER""
"
What are the top 3 artists with the largest number of songs in the language Bangla?,"SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3","Input: What are the top 3 artists with the largest number of songs in the language Bangla? Answer: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  ""bangla"" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3
"
Find the first and last name of all the students of age 18 who have vice president votes.,"SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18","Input: Find the first and last name of all the students of age 18 who have vice president votes. Answer: SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18
"
Which transportation method is used the most often to get to tourist attractions?,SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1,"Input: Which transportation method is used the most often to get to tourist attractions? Answer: SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1
"
What is the placement date of the order whose invoice number is 10?,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10,"Input: What is the placement date of the order whose invoice number is 10? Answer: SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10
"
Which students are advised by Michael Goodrich? Give me their first and last names.,"SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  ""Michael"" AND T1.lname  =  ""Goodrich""","Input: Which students are advised by Michael Goodrich? Give me their first and last names. Answer: SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  ""Michael"" AND T1.lname  =  ""Goodrich""
"
Find the id and local authority of the station whose maximum precipitation is higher than 50.,"SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50","Input: Find the id and local authority of the station whose maximum precipitation is higher than 50. Answer: SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50
"
How many teachers does the student named CHRISSY NABOZNY have?,"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""CHRISSY"" AND T1.lastname  =  ""NABOZNY""","Input: How many teachers does the student named CHRISSY NABOZNY have? Answer: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  ""CHRISSY"" AND T1.lastname  =  ""NABOZNY""
"
"For each product, show its name and the number of times it was ordered.","SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id","Input: For each product, show its name and the number of times it was ordered. Answer: SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id
"
"What are lines 1 and 2 of the addressed of the customer with the email ""vbogisich@example.org""?","SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""","Input: What are lines 1 and 2 of the addressed of the customer with the email ""vbogisich@example.org""? Answer: SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  ""vbogisich@example.org""
"
What is the phone number of the customer who has filed the most recent complaint?,SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1,"Input: What is the phone number of the customer who has filed the most recent complaint? Answer: SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
"
What are the ids of songs that are available in either mp4 format or have resolution above 720?,"SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720","Input: What are the ids of songs that are available in either mp4 format or have resolution above 720? Answer: SELECT f_id FROM files WHERE formats  =  ""mp4"" UNION SELECT f_id FROM song WHERE resolution  >  720
"
Find the number of students taught by the teacher KAWA GORDON.,"SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""KAWA"" AND T2.lastname  =  ""GORDON""","Input: Find the number of students taught by the teacher KAWA GORDON. Answer: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  ""KAWA"" AND T2.lastname  =  ""GORDON""
"
How many routes go from the United States to Canada?,SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States'),"Input: How many routes go from the United States to Canada? Answer: SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')
"
What document types do have more than 10000 total access number.,SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000,"Input: What document types do have more than 10000 total access number. Answer: SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000
"
"What is the average age of students who have city code ""NYC"" and have secretary votes for the spring election cycle?","SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""","Input: What is the average age of students who have city code ""NYC"" and have secretary votes for the spring election cycle? Answer: SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  ""NYC"" AND T2.Election_Cycle  =  ""Spring""
"
Show the name and phone for customers with a mailshot with outcome code 'No Response'.,"SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'","Input: Show the name and phone for customers with a mailshot with outcome code 'No Response'. Answer: SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'
"
How many different services are provided by all stations?,SELECT count(DISTINCT services) FROM station,"Input: How many different services are provided by all stations? Answer: SELECT count(DISTINCT services) FROM station
"
What is the average duration of songs that have mp3 format and resolution below 800?,"SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  ""mp3"" AND T2.resolution   <  800","Input: What is the average duration of songs that have mp3 format and resolution below 800? Answer: SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  ""mp3"" AND T2.resolution   <  800
"
Find the number of students in one classroom.,"SELECT count(*) ,  classroom FROM list GROUP BY classroom","Input: Find the number of students in one classroom. Answer: SELECT count(*) ,  classroom FROM list GROUP BY classroom
"
"What are all the different product names, and how many complains has each received?","SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name","Input: What are all the different product names, and how many complains has each received? Answer: SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name
"
How many users are logged in?,SELECT count(*) FROM users WHERE user_login  =  1,"Input: How many users are logged in? Answer: SELECT count(*) FROM users WHERE user_login  =  1
"
What are the names of the activities Mark Giuliano is involved in,"SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""","Input: What are the names of the activities Mark Giuliano is involved in Answer: SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  ""Mark"" AND T1.lname  =  ""Giuliano""
"
Which is the email of the party that has used the services the most number of times?,SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1,"Input: Which is the email of the party that has used the services the most number of times? Answer: SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1
"
"Find the dates of orders which belong to the customer named ""Jeramie"".","SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""","Input: Find the dates of orders which belong to the customer named ""Jeramie"". Answer: SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = ""Jeramie""
"
What is the average access count of documents that have the least common structure?,SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1,"Input: What is the average access count of documents that have the least common structure? Answer: SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1
"
Find the number of distinct students enrolled in courses.,SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment,"Input: Find the number of distinct students enrolled in courses. Answer: SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment
"
Show all the activity names and the number of faculty involved in each activity.,"SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID","Input: Show all the activity names and the number of faculty involved in each activity. Answer: SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID
"
List the name of all different customers who have some loan sorted by their total loan amount.,SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount),"Input: List the name of all different customers who have some loan sorted by their total loan amount. Answer: SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)
"
Find the number of routes whose destination airports are in Canada.,SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada',"Input: Find the number of routes whose destination airports are in Canada. Answer: SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'
"
Find the emails of customers who has filed a complaints of the product with the most complaints.,SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1,"Input: Find the emails of customers who has filed a complaints of the product with the most complaints. Answer: SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1
"
Show the types of schools that have two schools.,SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2,"Input: Show the types of schools that have two schools. Answer: SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2
"
What are the file sizes and formats for all songs with a resolution lower than 800?,"SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800","Input: What are the file sizes and formats for all songs with a resolution lower than 800? Answer: SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800
"
What are the different names for all songs that have a higher resolution than English songs?,"SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")","Input: What are the different names for all songs that have a higher resolution than English songs? Answer: SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  ""english"")
"
On which day was the order placed whose shipment tracking number is 3452?,SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452,"Input: On which day was the order placed whose shipment tracking number is 3452? Answer: SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452
"
Which teacher teaches the most students? Give me the first name and last name of the teacher.,"SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1","Input: Which teacher teaches the most students? Give me the first name and last name of the teacher. Answer: SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1
"
How many airports are there per city in the US ordered from most to least?,"SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC","Input: How many airports are there per city in the US ordered from most to least? Answer: SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC
"
List all the dates of enrollment and completion of students.,"SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment","Input: List all the dates of enrollment and completion of students. Answer: SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment
"
"Which tests have ""Pass"" results? Return the dates when the tests were taken.","SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  ""Pass""","Input: Which tests have ""Pass"" results? Return the dates when the tests were taken. Answer: SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  ""Pass""
"
Find the ids of the students who participate in Canoeing and Kayaking.,SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking',"Input: Find the ids of the students who participate in Canoeing and Kayaking. Answer: SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'
"
What are the details and ways to get to tourist attractions related to royal family?,"SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID","Input: What are the details and ways to get to tourist attractions related to royal family? Answer: SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID
"
Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students.,"SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""","Input: Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students. Answer: SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != ""COVIN"" AND T2.lastname != ""JEROME""
"
Show the number of audience in year 2008 or 2010.,SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010,"Input: Show the number of audience in year 2008 or 2010. Answer: SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010
"
"Which state can address ""6862 Kaitlyn Knolls"" possibly be in?","SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""","Input: Which state can address ""6862 Kaitlyn Knolls"" possibly be in? Answer: SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE ""%6862 Kaitlyn Knolls%""
"
What are the names of tourist attraction that Alison visited but Rosalind did not visit?,"SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Alison"" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Rosalind""","Input: What are the names of tourist attraction that Alison visited but Rosalind did not visit? Answer: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Alison"" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  ""Rosalind""
"
Show the names of the three most recent festivals.,SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3,"Input: Show the names of the three most recent festivals. Answer: SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3
"
